@page "/expert-request"
@using Microsoft.Extensions.Localization
@inject IStringLocalizer Localizer

<div class="row mb-3">
    <div class="col-md-3">
        <SfTextBox Placeholder="@Localizer["RequestNumberPlaceholder"]" @bind-Value="RequestNumberFilter"></SfTextBox>
    </div>
    <div class="col-md-3">
        <SfTextBox Placeholder="@Localizer["DeclarationNumberPlaceholder"]" @bind-Value="DeclarationNumberFilter"></SfTextBox>
    </div>
    <div class="col-md-3">
        <SfDatePicker Placeholder="@Localizer["RegistrationDatePlaceholder"]" @bind-Value="RegistrationDateFilter"></SfDatePicker>
    </div>
    <div class="col-md-3">
        <SfButton CssClass="e-primary" Click="OnSearchClick">@Localizer["Search"]</SfButton>
        <SfButton CssClass="e-secondary" Click="OnResetClick">@Localizer["Reset"]</SfButton>
    </div>
</div>

<SfGrid DataSource="@GridData" AllowPaging="true" PageSettings="new GridPageSettings { PageSize = 10 }" Height="400" EnableVirtualization="true" FrozenRows="1">
    <GridColumns>
        <GridColumn Field="RequestNumber" HeaderText="@Localizer["RequestNumber"]" Width="150" TextAlign="TextAlign.Center"></GridColumn>
        <GridColumn Field="DeclarationNumber" HeaderText="@Localizer["DeclarationNumber"]" Width="150" TextAlign="TextAlign.Center"></GridColumn>
        <GridColumn Field="ArticleNumber" HeaderText="@Localizer["ArticleNumber"]" Width="100" TextAlign="TextAlign.Center"></GridColumn>
        <GridColumn Field="Content" HeaderText="@Localizer["RequestContent"]" Width="200" TextAlign="TextAlign.Left"></GridColumn>
        <GridColumn Field="ControlEstablishment" HeaderText="@Localizer["ControlEstablishment"]" Width="150" TextAlign="TextAlign.Center"></GridColumn>
        <GridColumn Field="Inspector" HeaderText="@Localizer["Inspector"]" Width="100" TextAlign="TextAlign.Center"></GridColumn>
        <GridColumn Field="ControlResult" HeaderText="@Localizer["ControlResult"]" Width="150" TextAlign="TextAlign.Center"></GridColumn>
        <GridColumn Field="Status" HeaderText="@Localizer["Status"]" Width="100" TextAlign="TextAlign.Center"></GridColumn>
        <GridColumn Field="ProcessingDate" HeaderText="@Localizer["ProcessingDate"]" Width="150" Format="yyyy-MM-dd" TextAlign="TextAlign.Center"></GridColumn>
    </GridColumns>
</SfGrid>

@code {

    private string RequestNumberFilter { get; set; }
    private string DeclarationNumberFilter { get; set; }
    private DateTime? RegistrationDateFilter { get; set; }

    private readonly List<RequestData> GridData = new()
    {
        new() { RequestNumber = "ALGER-2022-C000001", DeclarationNumber = "ALGER-2022-C000001-1", ArticleNumber = "001", Content = "Contents of the analysis/expertise request", ControlEstablishment = "", Inspector = "", ControlResult = "", Status = "Receive", ProcessingDate = new DateTime(2022, 10, 2) },
        new() { RequestNumber = "ALGER-2022-C000002", DeclarationNumber = "ALGER-2022-C000002-1", ArticleNumber = "002", Content = "Contents of the analysis/expertise request", ControlEstablishment = "", Inspector = "", ControlResult = "", Status = "Approval", ProcessingDate = new DateTime(2022, 10, 3) }
        // Add more data as needed
    };

    private List<RequestData> FilteredGridData => GridData
        .Where(data => string.IsNullOrEmpty(RequestNumberFilter) || data.RequestNumber.Contains(RequestNumberFilter, StringComparison.OrdinalIgnoreCase))
        .Where(data => string.IsNullOrEmpty(DeclarationNumberFilter) || data.DeclarationNumber.Contains(DeclarationNumberFilter, StringComparison.OrdinalIgnoreCase))
        .Where(data => !RegistrationDateFilter.HasValue || data.ProcessingDate.Date == RegistrationDateFilter.Value.Date)
        .ToList();

    private void OnSearchClick()
    {
        // Trigger re-render to apply filters
        StateHasChanged();
    }

    private void OnResetClick()
    {
        RequestNumberFilter = string.Empty;
        DeclarationNumberFilter = string.Empty;
        RegistrationDateFilter = null;
        StateHasChanged();
    }

    private void OnDownloadExcelClick()
    {
        // Handle download Excel logic here
    }

    public class RequestData
    {
        public string RequestNumber { get; set; }
        public string DeclarationNumber { get; set; }
        public string ArticleNumber { get; set; }
        public string Content { get; set; }
        public string ControlEstablishment { get; set; }
        public string Inspector { get; set; }
        public string ControlResult { get; set; }
        public string Status { get; set; }
        public DateTime ProcessingDate { get; set; }
    }

}
