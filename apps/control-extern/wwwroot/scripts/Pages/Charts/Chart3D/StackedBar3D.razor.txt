@page "/chart-3d/stacked-bar"

@using Syncfusion.Blazor
@using Syncfusion.Blazor.Chart3D
@using ThemeHelper

@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent


@*End:Hidden*@
<SampleDescription>
    <p>
        This example showcases a 3D stacked bar chart visualizing a comparison of several Olympic medal-winning countries using the stacked bar series. Tapping or mouse over the data points reveals detailed tooltips, providing specific information about each data point.
    </p>
</SampleDescription>
<ActionDescription>
    <p>
        In this example, you'll discover how to render and customize a 3D stacked bar chart. Unlike traditional vertical stacking, the 3D stacked bar chart stacks points horizontally, offering a unique perspective on data comparison.
        Additionally, the <code>LabelPlacement</code> property of the 3D chart axis is employed to position axis labels between the axis tick lines, enhancing the clarity and readability of the chart.
    </p>
</ActionDescription>

<div class="control-section" align="center">
    <SfChart3D EnableRotation="true" RotationAngle="22" Depth="100" Width="@Width" Height="@Height" Title="Olympic Gold Medal Comparison" Theme="@Theme" AxisLabelRendering="AxisLabelRender">
        <Chart3DPrimaryXAxis ValueType="Syncfusion.Blazor.Chart3D.ValueType.Category" LabelPlacement="LabelPlacement.BetweenTicks"></Chart3DPrimaryXAxis>
        <Chart3DPrimaryYAxis Interval="@Interval" EdgeLabelPlacement="EdgeLabelPlacement.Shift"></Chart3DPrimaryYAxis>
        <Chart3DSeriesCollection>
            <Chart3DSeries DataSource="@Bar3DPoints" XName="X" YName="Y" Name="America" ColumnWidth="0.6" Type="Chart3DSeriesType.StackingBar"></Chart3DSeries>
            <Chart3DSeries DataSource="@Bar3DPoints1" XName="X" YName="Y" Name="Canada" ColumnWidth="0.6" Type="Chart3DSeriesType.StackingBar"></Chart3DSeries>
            <Chart3DSeries DataSource="@Bar3DPoints2" XName="X" YName="Y" Name="France" ColumnWidth="0.6" Type="Chart3DSeriesType.StackingBar"></Chart3DSeries>
            <Chart3DSeries DataSource="@Bar3DPoints3" XName="X" YName="Y" Name="Germany" ColumnWidth="0.6" Type="Chart3DSeriesType.StackingBar"></Chart3DSeries>
        </Chart3DSeriesCollection>
        <Chart3DTooltipSettings Enable="true"></Chart3DTooltipSettings>
        <Chart3DLegendSettings EnableHighlight="true"></Chart3DLegendSettings>
    </SfChart3D>
</div>

@code {
    private Theme Theme { get; set; }
    public string Width { get; set; }
    public string Height { get; set; } = "400";
    public double Interval { get; set; }
    public List<BarChart3DData> Bar3DPoints { get; set; } = new List<BarChart3DData>
    {
         new BarChart3DData { X= "Sochi 2014", Y= 9 },
         new BarChart3DData { X= "Rio 2016", Y= 46 },
         new BarChart3DData { X= "Pyeongchang 2018", Y= 9 },
         new BarChart3DData { X= "Tokyo 2020", Y= 39 },
         new BarChart3DData { X= "Beijing 2022", Y= 8 }
    };

    public List<BarChart3DData> Bar3DPoints1 { get; set; } = new List<BarChart3DData>
    {
         new BarChart3DData { X= "Sochi 2014", Y= 10 },
         new BarChart3DData { X= "Rio 2016", Y= 4 },
         new BarChart3DData { X= "Pyeongchang 2018", Y= 11 },
         new BarChart3DData { X= "Tokyo 2020", Y= 7 },
         new BarChart3DData { X= "Beijing 2022", Y= 4 }
    };

    public List<BarChart3DData> Bar3DPoints2 { get; set; } = new List<BarChart3DData>
    {
         new BarChart3DData { X= "Sochi 2014", Y= 4 },
         new BarChart3DData { X= "Rio 2016", Y= 10 },
         new BarChart3DData { X= "Pyeongchang 2018", Y= 5 },
         new BarChart3DData { X= "Tokyo 2020", Y= 10 },
         new BarChart3DData { X= "Beijing 2022", Y= 5 }
    };

    public List<BarChart3DData> Bar3DPoints3 { get; set; } = new List<BarChart3DData>
    {
         new BarChart3DData { X= "Sochi 2014", Y= 8 },
         new BarChart3DData { X= "Rio 2016", Y= 17 },
         new BarChart3DData { X= "Pyeongchang 2018", Y= 14 },
         new BarChart3DData { X= "Tokyo 2020", Y= 10 },
         new BarChart3DData { X= "Beijing 2022", Y= 12 }
    };

    protected override void OnInitialized()
    {
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
        Width = SampleService.IsDevice ? "100%" : "75%";
        Interval = SampleService.IsDevice ? 20 : 10;
    }

    public void AxisLabelRender(Chart3DAxisLabelRenderEventArgs args)
    {
        if (args.Axis.Name == "PrimaryXAxis" && args.Text.Contains("Pyeongchang"))
        {
            args.Text = SampleService.IsDevice ? "Pyeongchang<br> 2018" : "Pyeongchang 2018";
        }
    }

    public class BarChart3DData
    {
        public string X { get; set; }
        public double Y { get; set; }
    }
}