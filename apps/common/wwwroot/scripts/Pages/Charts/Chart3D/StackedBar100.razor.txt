@page "/chart-3d/stacked-bar-100"

@using Syncfusion.Blazor
@using Syncfusion.Blazor.Chart3D
@using ThemeHelper

@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent


@*End:Hidden*@
<SampleDescription>
    <p>
        This example of a 100% 3D stacked bar chart visualizes motor vehicle production by manufacturer using a stacked bar series. Click on the legend to toggle the visibility of the series for better comparison.
    </p>
</SampleDescription>
<ActionDescription>
    <p>
        In this example, you'll learn how to render and configure a 100% 3D stacked bar chart. This type of chart displays multiple series of data as stacked bars, guaranteeing that the cumulative proportion of each stacked element always totals 100%.
        Additionally, the <code>EnableRotation</code> property enables users to rotate the chart using mouse and touch interactions. To rotate the chart, simply hold down the mouse button on the chart and move the mouse, or double tap and drag on a touch-enabled device.
    </p>
</ActionDescription>

<div class="control-section" align="center">
    <SfChart3D EnableRotation="true" RotationAngle="22" Depth="100" Width="@Width" Height="@Height" Title="Motor Vehicle Production by Manufacturer" Theme="@Theme">
        <Chart3DPrimaryXAxis ValueType="Syncfusion.Blazor.Chart3D.ValueType.Category" LabelPlacement="LabelPlacement.BetweenTicks"></Chart3DPrimaryXAxis>
        <Chart3DPrimaryYAxis Interval="@Interval" EdgeLabelPlacement="EdgeLabelPlacement.Shift"></Chart3DPrimaryYAxis>
        <Chart3DSeriesCollection>
            <Chart3DSeries DataSource="@Bar3DPoints" XName="X" YName="Y" Name="General Motors" ColumnWidth="0.5" Type="Chart3DSeriesType.StackingBar100"></Chart3DSeries>
            <Chart3DSeries DataSource="@Bar3DPoints" XName="X" YName="Y1" Name="Honda" ColumnWidth="0.5" Type="Chart3DSeriesType.StackingBar100"></Chart3DSeries>
            <Chart3DSeries DataSource="@Bar3DPoints" XName="X" YName="Y2" Name="Suzuki" ColumnWidth="0.5" Type="Chart3DSeriesType.StackingBar100"></Chart3DSeries>
            <Chart3DSeries DataSource="@Bar3DPoints" XName="X" YName="Y3" Name="BMW" ColumnWidth="0.5" Type="Chart3DSeriesType.StackingBar100"></Chart3DSeries>
        </Chart3DSeriesCollection>
        <Chart3DTooltipSettings Enable="true" Format="${point.x} : <b>${point.y} (${point.percentage}%)</b>"></Chart3DTooltipSettings>
        <Chart3DLegendSettings EnableHighlight="true"></Chart3DLegendSettings>
    </SfChart3D>
</div>

@code {
    private Theme Theme { get; set; }
    public string Width { get; set; }
    public string Height { get; set; } = "400";
    public double Interval { get; set; }
    public List<BarChart3DData> Bar3DPoints { get; set; } = new List<BarChart3DData>
    {
        new BarChart3DData { X = "2013", Y = 9628912, Y1 = 4298390, Y2 = 2842133, Y3 = 2006366 },
        new BarChart3DData { X = "2014", Y = 9609326, Y1 = 4513769, Y2 = 3016710, Y3 = 2165566 },
        new BarChart3DData { X = "2015", Y = 7485587, Y1 = 4543838, Y2 = 3034081, Y3 = 2279503 },
        new BarChart3DData { X = "2016", Y = 7793066, Y1 = 4999266, Y2 = 2945295, Y3 = 2359756 },
        new BarChart3DData { X = "2017", Y = 6856880, Y1 = 5235842, Y2 = 3302336, Y3 = 2505741 }
    };

    protected override void OnInitialized()
    {
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
        Width = SampleService.IsDevice ? "100%" : "70%";
        Interval = SampleService.IsDevice ? 20 : 10;
    }

    public class BarChart3DData
    {
        public string X { get; set; }
        public double Y { get; set; }
        public double Y1 { get; set; }
        public double Y2 { get; set; }
        public double Y3 { get; set; }
    }
}