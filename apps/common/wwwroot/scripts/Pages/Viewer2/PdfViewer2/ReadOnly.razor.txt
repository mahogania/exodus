@page "/pdf-viewer-2/read-only"
@using BlazorDemos.Shared
@using Syncfusion.Blazor.SfPdfViewer

@*Hidden:Lines*@
@inherits SampleBaseComponent

@inject NavigationManager NavigationManager

@*End:Hidden*@

<SampleDescription>
  <p>The sample showcases the PDF viewer operating in a read-only mode, which restricts the ability to make changes to annotations, form fields, and also disables text selection.</p>
</SampleDescription>
<ActionDescription>   
@*WASM:Block*@
@{ #if (WASM) }
    <p>More information about the SfPdfViewer can be found in this<a target='_blank' href='https://blazor.syncfusion.com/documentation/pdfviewer-2/getting-started/web-assembly-application' aria-label="documentation section for View PDF files using PDF Viewer Component in the Blazor WASM app"> documentation section</a>.</p>
@{ #endif }
@*End:WASM*@

@*Server:Block*@
@{ #if !(WASM) }
    <p>More information about the SfPdfViewer can be found in this<a target='_blank' href='https://blazor.syncfusion.com/documentation/pdfviewer-2/getting-started/server-side-application' aria-label="documentation section for View PDF files using PDF Viewer Component in the Blazor Server app"> documentation section</a>.</p>
@{ #endif }
@*End:Server*@

</ActionDescription>

<div class="control-section">
     <SfPdfViewer2 @ref="viewer" DocumentPath="@DocumentPath" Height="90%" Width="100%" EnableTextSelection="false" EnableStickyNotesAnnotation=false AnnotationSettings="@annotationSettings" ToolbarSettings="@ToolbarSettings" ContextMenuSettings="@ContextMenuSettings" >
        <PdfViewerEvents DocumentLoaded="documentLoad"></PdfViewerEvents>
     </SfPdfViewer2>
</div>

@code {
    SfPdfViewer2 viewer;

    private async Task documentLoad(LoadEventArgs args)
    {         
        List<FormField> fields = await viewer.RetrieveFormFieldsAsync();
        for (int i = 0; i < fields.Count(); i++)
        {
            fields[i].IsReadOnly = true;
            await viewer.UpdateFormFieldsAsync(fields[i]);      

        } 
    }   


    PdfViewerAnnotationSettings annotationSettings = new PdfViewerAnnotationSettings()
    {
            IsLock = true
    };
    PdfViewerToolbarSettings ToolbarSettings = new PdfViewerToolbarSettings()
    {
        ToolbarItems = new List<ToolbarItem>()
        {
            ToolbarItem.OpenOption,
            ToolbarItem.PageNavigationTool,
            ToolbarItem.MagnificationTool,  
            ToolbarItem.PanTool,                     
            ToolbarItem.PrintOption,
        },
        MobileToolbarItems = new List<MobileToolbarItem>()
        {
            MobileToolbarItem.Open,
            MobileToolbarItem.Search
        }
    };

    PdfViewerContextMenuSettings ContextMenuSettings = new PdfViewerContextMenuSettings()
    {
         EnableContextMenu = false
    };

  //Invokes while loading document in the PDFViewer.    
    private string DocumentPath { get; set; } = "";
    protected override void OnInitialized()
    {        
        string fileDataPath = NavigationManager.BaseUri + SampleService.WebAssetsPath;

    @*Server:Block*@
    #if !(WASM || WEBAPP)
        //Sets the PDF document path for initial loading.
        DocumentPath = "wwwroot/data/pdfviewer2/restricted-formfield.pdf";
    #endif
    @*End:Server*@

    @*WebAssembly:Block*@    
    #if (WASM || WEBAPP)
        //Sets the PDF document path for initial loading.
        DocumentPath= fileDataPath + "data/pdfviewer2/restricted-formfield.pdf";
    #endif
    @*End:WebAssembly*@
    }
}