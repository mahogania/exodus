<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.Blazor.ImageEditor</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownButton">
            <summary>
            Represents a ImageEditorDropdownButton component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownButton.CustomDropdownButton">
            <summary>
            Gets or sets the internal SfDropDownButton control used by the component.
            </summary>
            <value>
            The internal SfDropDownButton control.
            </value>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownButton.ID">
            <summary>
            Gets or sets the value that indicates the id of the <see cref="T:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownButton"/>.
            </summary>
            <value>
            A string value that represents the dropdown button id.
            </value>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownButton.Content">
            <summary>
            Gets or sets the value that indicates the text content of the <see cref="T:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownButton"/>.
            </summary>
            <value>
            A string value that represents the dropdown button text.
            </value>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownButton.IconCss">
            <summary>
            Gets or sets the value that indicates the icon css of the <see cref="T:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownButton"/>.
            </summary>
            <value>
            A string value that represents the dropdown button icon.
            </value>
            <exclude /> 
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownButton.CssClass">
            <summary>
            Gets or sets the value that indicates the CSS class name of the <see cref="T:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownButton"/> item.
            </summary>
            <value>
            A CSS Class string value that represents the classes to be applied to dropdown button.
            </value>
            <exclude /> 
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownButton.IsColorPicker">
            <summary>
            Gets or sets the value that indicates whether this component is a dropdown button or color picker.
            </summary>
            <value>
            <c>true</c> if the control is a color picker; otherwise, <c>false</c>. The default value is <c>false</c>.
            </value>
            <exclude /> 
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownButton.Value">
            <summary>
            Gets or sets the value that indicates the value of the color picker.
            </summary>
            <value>
            A string value that represents the color picker value.
            </value>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownButton.NoColor">
            <summary>
            Gets or sets a value indicating whether the "no color" option is enabled in the color picker component.
            </summary>
            <value>
              <c>true</c> if the "no color" option is enabled in the color picker; otherwise, <c>false</c>. The default value is <c>false</c>.
            </value>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownButton.ModeSwitcher">
            <summary>
            Gets or sets a value indicating whether the "Mode Switcher" option is enabled in the color picker component.
            </summary>
            <value>
              <c>true</c> if the "Mode Switcher" option is enabled in the color picker; otherwise, <c>false</c>. The default value is <c>false</c>.
            </value>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownButton.ShowButtons">
            <summary>
            Gets or sets a value indicating whether the "Show Buttons" option is enabled in the color picker component.
            </summary>
            <value>
              <c>true</c> if the "Show Buttons" option is enabled in the color picker; otherwise, <c>false</c>. The default value is <c>false</c>.
            </value>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownButton.TabIndex">
            <summary>
            Gets or sets a value indicating whether the tab focus enabling for Dropdown button.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownButton.ColorPickerMode">
            <summary>
            Gets or sets a value indicating whether the "Mode" option of the color picker component.
            </summary>
            <value>
              <c>Picker</c> if the "mode" option is enabled in the color picker; otherwise, <c>Palette</c>. The default value is <c>Palette</c>.
            </value>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownButton.CustomColors">
            <summary>
            Gets or sets a value that indicates the collection of custom color values that will be rendered as color picker element.
            </summary>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownButton.Items">
            <summary>
            Gets or sets the value that indicates the popup items to be rendered in dropdown button.
            </summary>
            <value>
            A list of <see cref="T:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownItem"/> that represents the popup items to be rendered in dropdown button.
            </value>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownButton.DropdownButtonOpenEvent">
            <summary>
            Gets or sets an event callback that is raised when opening the dropdown button popup.
            </summary>
            <value>
            An event callback function.
            </value>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownButton.SelectedEvent">
            <summary>
            Gets or sets an event callback that is raised when the item selected in the dropdown button popup.
            </summary>
            <value>
            An event callback function.
            </value>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownButton.ColorPickerOpenEvent">
            <summary>
            Gets or sets an event callback that is raised when opening the color picker popup.
            </summary>
            <value>
            An event callback function.
            </value>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownButton.ValueChangeEvent">
            <summary>
            Gets or sets an event callback that is raised when the color picker component's value got changed.
            </summary>
            <value>
            An event callback function.
            </value>
            <exclude /> 
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownButton.OnModeSwitch">
            <summary>
            Gets or sets an event callback that is raised when the color picker component's mode got changed.
            </summary>
            <value>
            An event callback function.
            </value>
            <exclude /> 
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownButton.OnColorPickerClose">
            <summary>
            Gets or sets an event callback that is raised when the color picker popup's getiing close.
            </summary>
            <value>
            An event callback function.
            </value>
            <exclude /> 
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownItem">
            <summary>
            Represents a ImageEditorDropdownItem component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownItem.ID">
            <summary>
            Gets or sets the ID of the <see cref="T:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownItem"/> associated with the dropdown button.
            </summary>
            <value>
            A string value representing the ID of the dropdown button popup item.
            </value>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownItem.Text">
            <summary>
            Gets or sets the value that indicates the text content of the <see cref="T:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownItem"/> item.
            </summary>
            <value>
            A string value that represents the dropdown popup item text.
            </value>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownItem.IconCss">
            <summary>
            Gets or sets the value that indicates the icon css of the <see cref="T:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownItem"/> item.
            </summary>
            <value>
            A string value that represents the dropdown popup item icon.
            </value>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownItem.HtmlAttributes">
            <summary>
            Gets or sets the value that indicates the icon css of the <see cref="T:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorDropdownItem"/> item.
            </summary>
            <value>
            A string value that represents the dropdown popup item icon.
            </value>
            <exclude /> 
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorFilterCanvas">
            <summary>
             Represents a ImageEditorFilterCanvas component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorFilterCanvas.FilterId">
            <summary>
            Gets or sets the value that indicates the filter name of the <see cref="T:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorFilterCanvas"/>.
            </summary>
            <value>
            A string value that represents the filter name.
            </value>
            <exclude />
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorFilterCanvas.FilterTooltipText">
            <summary>
            Gets or sets the value that indicates the filter tooltip text of the <see cref="T:Syncfusion.Blazor.ImageEditor.Internal.ImageEditorFilterCanvas"/>.
            </summary>
            <value>
            A string value that represents the filter tooltip text.
            </value>
            <exclude />
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ShapeType">
            <summary>
            Defines the types of shapes available in <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ShapeType.Rectangle">
            <summary>
            Represents a Rectangle shape.
            </summary>
            <value>Represents the string value: "Rectangle"</value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ShapeType.Ellipse">
            <summary>
            Represents a Ellipse shape.
            </summary>
            <value>Represents the string value: "Ellipse"</value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ShapeType.Line">
            <summary>
            Represents a Line shape.
            </summary>
            <value>Represents the string value: "Line"</value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ShapeType.Arrow">
            <summary>
            Represents a Arrow shape.
            </summary>
            <value>Represents the string value: "Arrow"</value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ShapeType.Path">
            <summary>
            Represents a Path shape.
            </summary>
            <value>Represents the string value: "Path"</value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ShapeType.Text">
            <summary>
            Represents a Text shape.
            </summary>
            <value>Represents the string value: "Text"</value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ShapeType.FreehandDraw">
            <summary>
            Represents a Freehand Draw shape.
            </summary>
            <value>Represents the string value: "Freehand Draw"</value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ShapeType.Image">
            <summary>
            Represents a Add image shape.
            </summary>
            <value>Represents the string value: "Image"</value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ImageFinetuneOption">
            <summary> 
            Defines the finetune options in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ImageFinetuneOption.Brightness">
            <summary> 
            Represents a brightness option.
            </summary> 
            <value>Represents the string value: "Brightness"</value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ImageFinetuneOption.Contrast">
            <summary> 
            Represents a contrast option.
            </summary>
            <value>Represents the string value: "Contrast"</value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ImageFinetuneOption.Hue">
            <summary> 
            Represents a hue option.
            </summary>
            <value>Represents the string value: "Hue"</value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ImageFinetuneOption.Saturation">
            <summary> 
            Represents a saturation option.
            </summary>
            <value>Represents the string value: "Saturation"</value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ImageFinetuneOption.Exposure">
            <summary> 
            Represents an exposure option.
            </summary>
            <value>Represents the string value: "Exposure"</value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ImageFinetuneOption.Opacity">
            <summary> 
            Represents an opacity option. 
            </summary>
            <value>Represents the string value: "Opacity"</value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ImageFinetuneOption.Blur">
            <summary> 
            Represents a blur option.
            </summary>
            <value>Represents the string value: "Blur"</value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ImageFilterOption">
            <summary> 
            Defines the filter options in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary> 
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ImageFilterOption.Default">
            <summary> 
            Represents a default filter option.
            </summary> 
            <value>Represents the string value: "Default"</value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ImageFilterOption.Chrome">
            <summary> 
            Represents a chrome filter option.
            </summary>
            <value>Represents the string value: "Chrome"</value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ImageFilterOption.Cold">
            <summary> 
            Represents a cold filter option.
            </summary>
            <value>Represents the string value: "Cold"</value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ImageFilterOption.Warm">
            <summary> 
            Represents a warm filter option. 
            </summary>
            <value>Represents the string value: "Warm"</value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ImageFilterOption.Grayscale">
            <summary> 
            Represents a grayscale option.
            </summary>
            <value>Represents the string value: "Grayscale"</value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ImageFilterOption.Sepia">
            <summary> 
            Represents a sepia filter option.
            </summary>
            <value>Represents the string value: "Sepia"</value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ImageFilterOption.Invert">
            <summary> 
            Represents an invert filter option.
            <value>Represents the string value: "Invert"</value>
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ImageEditorDirection">
            <summary> 
            Defines the flip direction in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary> 
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ImageEditorDirection.Horizontal">
            <summary> 
            Represents a horizontal direction.
            </summary> 
            <value>Represents the string value: "Horizontal"</value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ImageEditorDirection.Vertical">
            <summary> 
            Represents a vertical direction.
            </summary> 
            <value>Represents the string value: "Vertical"</value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ImageEditorFileType">
            <summary> 
            Defines the file type of an image to be saved or opened in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary> 
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ImageEditorFileType.PNG">
            <summary> 
            Represents a PNG file type. 
            </summary> 
            <value>Represents the string value: "PNG"</value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ImageEditorFileType.JPEG">
            <summary> 
            Represents a JPEG file type. 
            </summary> 
            <value>Represents the string value: "JPEG"</value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ImageEditorFileType.SVG">
            <summary> 
            Represents a SVG file type. 
            </summary> 
            <value>Represents the string value: "SVG"</value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ZoomTrigger">
            <summary> 
            Defines the zooming types available in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary>
            <remarks>
            It is a flagged enum.
            </remarks>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ZoomTrigger.MouseWheel">
            <summary>
            Represents zooming triggered by the mouse wheel.
            </summary>
            <value>Represents the integer value: 1</value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ZoomTrigger.Pinch">
            <summary> 
            Represents a pinch zooming.
            </summary>
            <value>Represents the integer value: 2</value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ZoomTrigger.Commands">
            <summary> 
            Represents a ctrl key zooming.
            </summary> 
            <value>Represents the integer value: 4</value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ZoomTrigger.Toolbar">
            <summary> 
            Represents a toolbar zooming.
            </summary> 
            <value>Represents the integer value: 8</value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ImageEditorArrowHeadType">
            <summary> 
            Defines the types of arrowheads available in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ImageEditorArrowHeadType.None">
            <summary>
            Represents the arrowhead type as "None" indicating no arrowhead.
            </summary>
            <value>
            The string value representing "None".
            </value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ImageEditorArrowHeadType.Arrow">
            <summary>
            Represents the arrowhead type as "Arrow" indicating an arrow-shaped arrowhead.
            </summary>
            <value>
            The string value representing "Arrow".
            </value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ImageEditorArrowHeadType.SolidArrow">
            <summary>
            Represents the arrowhead type as "SolidArrow" indicating a solid arrow-shaped arrowhead.
            </summary>
            <value>
            The string value representing "SolidArrow".
            </value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ImageEditorArrowHeadType.Circle">
            <summary>
            Represents the arrowhead type as "Circle" indicating a circle-shaped arrowhead.
            </summary>
            <value>
            The string value representing "Circle".
            </value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ImageEditorArrowHeadType.SolidCircle">
            <summary>
            Represents the arrowhead type as "SolidCircle" indicating a solid circle-shaped arrowhead.
            </summary>
            <value>
            The string value representing "SolidCircle".
            </value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ImageEditorArrowHeadType.Square">
            <summary>
            Represents the arrowhead type as "Square" indicating a square-shaped arrowhead.
            </summary>
            <value>
            The string value representing "Square".
            </value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ImageEditorArrowHeadType.SolidSquare">
            <summary>
            Represents the arrowhead type as "SolidSquare" indicating a solid square-shaped arrowhead.
            </summary>
            <value>
            The string value representing "SolidSquare".
            </value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.ImageEditorArrowHeadType.Bar">
            <summary>
            Represents the arrowhead type as "Bar" indicating a bar-shaped arrowhead.
            </summary>
            <value>
            The string value representing "Bar".
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.FrameType">
            <summary> 
            Defines the types of frames available in <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary> 
            <remarks> 
            This option can be used with the `DrawFrameAsync` method of the image editor control to draw frames on an image. 
            </remarks>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.FrameType.None">
            <summary> 
            Represents an option indicating no frame. 
            </summary> 
            <value>Represents the string value: <c>"None"</c></value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.FrameType.Mat">
            <summary> 
            Represents an option for a mat frame. 
            </summary> 
            <value>Represents the string value: <c>"Mat"</c></value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.FrameType.Bevel">
            <summary> 
            Represents an option for a bevel frame. 
            </summary> 
            <value>Represents the string value: <c>"Bevel"</c></value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.FrameType.Line">
            <summary> 
            Represents an option for a line frame. 
            </summary> 
            <value>Represents the string value: <c>"Line"</c></value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.FrameType.Inset">
            <summary> 
            Represents an option for an inset frame. 
            </summary> 
            <value>Represents the string value: <c>"Inset"</c></value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.FrameType.Hook">
            <summary> 
            Represents an option for a hook frame. 
            </summary> 
            <value>Represents the string value: <c>"Hook"</c></value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.FrameLineStyle">
            <summary> 
            Defines the types of lines available for frames in <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary> 
            <remarks> 
            This option can be used with the `DrawFrameAsync` method of the image editor control to draw frames on an image. 
            </remarks>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.FrameLineStyle.Solid">
            <summary> 
            Represents an option for a solid type of line. 
            </summary> 
            <value>Represents the string value: <c>"Solid"</c></value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.FrameLineStyle.Dashed">
            <summary> 
            Represents an option for a dashed type of line. 
            </summary> 
            <value>Represents the string value: <c>"Dashed"</c></value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.FrameLineStyle.Dotted">
            <summary> 
            Represents an option for a dotted type of line. 
            </summary> 
            <value>Represents the string value: <c>"Dotted"</c></value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.HistoryEntryAction">
            <summary> 
            Defines the types of history entry action available for undo/redo in <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary> 
            <remarks> 
            This option can be used with the `HistoryChanged` event of the image editor control. 
            </remarks>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.HistoryEntryAction.Cropped">
            <summary>
            Sets the history entry action as Cropped when performing the cropping action after performing rotating, flipping, and straightening. 
            </summary>
            <value>Represents the string value: <c>"Cropped"</c></value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.HistoryEntryAction.ShapeInserted">
            <summary>
            Sets the history entry action as `ShapeInserted` when performing the shape insertion. 
            </summary>
            <value>Represents the string value: <c>"ShapeInserted"</c></value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.HistoryEntryAction.ShapeCustomized">
            <summary>
            Sets the history entry action as `ShapeCustomized` when performing the shape customization including stroke color, fill color, stroke width, font customizations, and arrow customizations. 
            </summary>
            <value>Represents the string value: <c>"ShapeCustomized"</c></value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.HistoryEntryAction.ShapeDeleted">
            <summary>
            Sets the history entry action as `ShapeDeleted` when performing the shape deletion. 
            </summary>
            <value>Represents the string value: <c>"ShapeDeleted"</c></value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.HistoryEntryAction.FinetuneApplied">
            <summary>
            Sets the history entry action as `FinetuneApplied` when applying finetune to the image. 
            </summary>
            <value>Represents the string value: <c>"FinetuneApplied"</c></value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.HistoryEntryAction.FilterApplied">
            <summary>
            Sets the history entry action as `FilterAppiled` when applying filters to the image. 
            </summary>
            <value>Represents the string value: <c>"FilterApplied"</c></value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.HistoryEntryAction.ImageResized">
            <summary>
            Sets the history entry action as `ImageResized` when performing the image resizing. 
            </summary>
            <value>Represents the string value: <c>"ImageResized"</c></value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.HistoryEntryAction.FrameApplied">
            <summary>
            Sets the history entry action as `FrameApplied` when applying frames to the image. 
            </summary>
            <value>Represents the string value: <c>"FrameApplied"</c></value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.HistoryChangedAction">
            <summary>
            Defines the types of history changed action available for undo/redo in <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary>
            <remarks>
            This option can be used with the `HistoryChanged` event of the image editor control. 
            </remarks>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.HistoryChangedAction.Undo">
            <summary>
            Sets the history action as Undo when performing the undo action.
            </summary>
            <value>Represents the string value: <c>"Undo"</c></value>
        </member>
        <member name="F:Syncfusion.Blazor.ImageEditor.HistoryChangedAction.Redo">
            <summary>
            Sets the history action as Redo when performing the redo action.
            </summary>
            <value>Represents the string value: <c>"Redo"</c></value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ZoomEventArgs">
            <summary>
            Provides the information about the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Zooming"/> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ZoomEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the zooming action should be canceled.
            </summary>
            <value>
            `true` if the zoom action should be canceled; otherwise, `false`. The default value is `false`.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ZoomEventArgs.ZoomPoint">
            <summary>
            Gets the x and y coordinates of the point where the zooming action was performed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An <see cref="T:Syncfusion.Blazor.ImageEditor.ImageEditorPoint"/> object representing the current x and y coordinates of the zoom action.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ZoomEventArgs.PreviousZoomFactor">
            <summary>
            Gets the previous zoom factor that was applied before the current zoom action in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value representing the previous zoom factor of the image.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ZoomEventArgs.CurrentZoomFactor">
            <summary>
            Gets the current zoom factor applied to the loaded image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value representing the current zoom factor of the image.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ZoomEventArgs.ZoomTrigger">
            <summary>
            Gets the type of zooming performed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary>
            <value>
             A flagged Enum <see cref="P:Syncfusion.Blazor.ImageEditor.ZoomEventArgs.ZoomTrigger"/> that returns the type of zooming performed.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ImageEditorClickEventArgs">
            <summary>
            Provides the information about the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Clicked"/> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorClickEventArgs.Point">
            <summary>
            Gets the x and y coordinates of the mouse or touch action performed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An <see cref="T:Syncfusion.Blazor.ImageEditor.ImageEditorPoint"/> object representing the x and y coordinates on the image.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.PanEventArgs">
            <summary>
            Provides the information about the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.OnPanStart"/> and  <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.OnPanEnd"/> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.PanEventArgs.StartPoint">
            <summary>
            Gets the x and y coordinates of the starting point for panning in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An <see cref="T:Syncfusion.Blazor.ImageEditor.ImageEditorPoint"/> object representing the x and y coordinates of the starting point.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.PanEventArgs.EndPoint">
            <summary>
            Gets the x and y coordinates of the end point for panning in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An <see cref="T:Syncfusion.Blazor.ImageEditor.ImageEditorPoint"/> object representing the x and y coordinates of the end point.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.PanEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the panning action should be canceled.
            </summary>
            <value> Optional.
            `true` if the pan action should be canceled; otherwise, `false`. The default value is `false`.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.CropEventArgs">
            <summary>
            Provides the information about the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Cropping"/> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.CropEventArgs.StartPoint">
            <summary>
            Gets the x and y coordinates of the starting point for the cropping region.
            </summary>
            <value>
            An <see cref="T:Syncfusion.Blazor.ImageEditor.ImageEditorPoint"/> object representing the x and y coordinates of the starting point.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.CropEventArgs.EndPoint">
            <summary>
            Gets the x and y coordinates of the end point for the cropping region.
            </summary>
            <value>
            An <see cref="T:Syncfusion.Blazor.ImageEditor.ImageEditorPoint"/> object representing the x and y coordinates of the end point.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.CropEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the cropping action should be canceled.
            </summary>
            <value>
            `true` if the crop action should be canceled; otherwise, `false`. The default value is `false`.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.CropEventArgs.PreventScaling">
            <summary>
            Gets or sets a value indicating whether the cropping action should be canceled.
            </summary>
            <value>
            `true` if the crop action should be canceled; otherwise, `false`. The default value is `false`.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.RotateEventArgs">
            <summary>
            Provides the information about the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Rotating"/> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.RotateEventArgs.CurrentDegree">
            <summary>
            Gets the rotation degree of an image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/> after performing rotation.
            </summary>
            <value>
            An integer value representing the currently applied rotation degree of the image.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.RotateEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the rotating action should be canceled.
            </summary>
            <value>
            `true` if the rotate action should be canceled; otherwise, `false`. The default value is `false`.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.RotateEventArgs.PreviousDegree">
            <summary>
            Gets the rotation degree of an image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/> before performing rotation.
            </summary>
            <value>
            An integer value representing the previously applied rotation degree of the image.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.FlipEventArgs">
            <summary>
            Provides the information about the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Flipping"/> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.FlipEventArgs.PreviousDirection">
            <summary>
            Gets the value indicating the current direction of an image.
            </summary>
            <value>
            An enumeration value of <see cref="T:Syncfusion.Blazor.ImageEditor.ImageEditorDirection"/>. It is set to <see cref="F:Syncfusion.Blazor.ImageEditor.ImageEditorDirection.Horizontal"/> if the flipping is horizontal; otherwise, it is set to <see cref="F:Syncfusion.Blazor.ImageEditor.ImageEditorDirection.Vertical"/>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.FlipEventArgs.Direction">
            <summary>
            Gets the value indicating the direction to be flipped of an image.
            </summary>
            <value>
            An enumeration value of <see cref="T:Syncfusion.Blazor.ImageEditor.ImageEditorDirection"/>. It is set to <see cref="F:Syncfusion.Blazor.ImageEditor.ImageEditorDirection.Horizontal"/> if the flipping is horizontal; otherwise, it is set to <see cref="F:Syncfusion.Blazor.ImageEditor.ImageEditorDirection.Vertical"/>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.FlipEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the flipping action should be canceled.
            </summary>
            <value>
            `true` if the flip action should be canceled; otherwise, `false`. The default value is `false`.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.FileOpenEventArgs">
            <summary>
            Provides the information about the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.FileOpened"/> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.FileOpenEventArgs.FileName">
            <summary>
            Gets the file name of the image to be opened in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary>
            <value>
            A string value that represents the file name of the image to be opened.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.FileOpenEventArgs.FileType">
            <summary>
            Gets the file type of the image to be opened in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary>
            <value>
            An enumeration value <see cref="T:Syncfusion.Blazor.ImageEditor.ImageEditorFileType"/> that represents the file type of the image to be opened.
            The available file types are JPEG, PNG, and SVG.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.SaveEventArgs">
            <summary>
            Provides the information about the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Saving"/> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.SaveEventArgs.FileName">
            <summary>
            Gets or sets the file name of the image to be saved in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary>
            <value>
            A string value that specifies the file name of the image to be saved.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.SaveEventArgs.FileType">
            <summary>
            Gets or sets the file type of the image to be saved in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary>
            <value>
            An enumeration value <see cref="T:Syncfusion.Blazor.ImageEditor.ImageEditorFileType"/> that represents the file type of the image to be saved.
            The available file types are JPEG, PNG, and SVG.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.SaveEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the save action should be canceled.
            </summary>
            <value>
            `true` if the save action should be canceled; otherwise, `false`. The default value is `false`.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.SaveEventArgs.ImageQuality">
            <summary>
            Gets or sets the quality of the image file to export. This is only applicable for JPEG type images.
            </summary>
            <value>
            Defaults to 1.0, which represents the original size of the image if not specified.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ToolbarEventArgs">
            <summary>
            Provides the information about the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.ToolbarUpdating"/> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ToolbarEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the toolbar updating action should be canceled.
            </summary>
            <value>
            `true` if the toolbar update action should be canceled; otherwise, `false`. The default value is `false`.
            </value> 
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ToolbarEventArgs.ToolbarType">
            <summary>
            Gets the type of toolbar that is currently being updated.
            </summary>
            <value>
            An enumeration value <see cref="T:Syncfusion.Blazor.ImageEditor.ShapeType"/> that represents the type of the toolbar such as Rectangle, Ellipse, Line, Arrow, Text,
            and Freehand Draw.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ToolbarEventArgs.ToolbarItems">
            <summary>
            Gets or sets the items to be rendered on the contextual toolbar.
            </summary>
            <value>
            A collection of <see cref="T:Syncfusion.Blazor.ImageEditor.ImageEditorToolbarItemModel"/> objects that specifies the toolbar items, including stroke color, fill color, stroke width, font family, font sizes, and custom toolbar items.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ToolbarEventArgs.Item">
            <summary>
            Gets the current toolbar item that is being clicked.
            </summary>
            <value>
            An <see cref="T:Syncfusion.Blazor.ImageEditor.ImageEditorToolbarItemModel"/> object representing the clicked toolbar item.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.QuickAccessToolbarEventArgs">
            <summary>
            Provides the information about the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.QuickAccessToolbarOpening"/> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.QuickAccessToolbarEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the quick-access toolbar opening action should be canceled.
            </summary>
            <value>
            `true` if the toolbar update action should be canceled; otherwise, `false`. The default value is `false`.
            </value>  
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.QuickAccessToolbarEventArgs.Shape">
            <summary>
            Gets the type of shape that is currently being selected.
            </summary>
            <value>
            An enumeration value <see cref="T:Syncfusion.Blazor.ImageEditor.ShapeType"/> that represents the type of the toolbar such as Rectangle, Ellipse, Line, Arrow, Text,
            and Freehand Draw.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.QuickAccessToolbarEventArgs.ToolbarItems">
            <summary>
            Gets or sets the items to be rendered on the quick-access toolbar.
            </summary>
            <value>
            A collection of <see cref="T:Syncfusion.Blazor.ImageEditor.ImageEditorToolbarItemModel"/> objects that specify the toolbar items, including Clone, Delete, Edit Text, and custom toolbar items.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ImageFilterEventArgs">
            <summary>
            Provides the information about the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.ImageFiltering"/> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageFilterEventArgs.Filter">
            <summary>
            Gets the type of filtering to be applied to an image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An <see cref="T:Syncfusion.Blazor.ImageEditor.ImageFilterOption"/> enumeration that represents the available filter options, such as Default, Chrome, Cold, Warm, Invert, and Sepia.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageFilterEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the filtering action should be canceled.
            </summary>
            <value>
            `true` if the filter action should be canceled; otherwise, `false`. The default value is `false`.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.FinetuneEventArgs">
            <summary>
            Provides the information about the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.FinetuneValueChanging"/> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.FinetuneEventArgs.Finetune">
            <summary>
            Gets the type of finetuning to be applied to an image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An <see cref="T:Syncfusion.Blazor.ImageEditor.ImageFinetuneOption"/> enumeration that represents the available fine-tune options, such as Brightness, Contrast, Hue, Saturation, Exposure, Opacity, and Blur.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.FinetuneEventArgs.Value">
            <summary>
            Gets the finetune value to be applied to an image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value representing the adjustment value for various image finetune options.
            The value can be used to adjust image properties such as Brightness, Contrast, Hue, Saturation, Exposure, Opacity, and Blur.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.FinetuneEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the finetune action should be canceled.
            </summary>
            <value>
            `true` if the finetune action should be canceled; otherwise, `false`. The default value is `false`.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ShapeChangeEventArgs">
            <summary>
            Provides the information about the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.ShapeChanging"/>, <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.OnShapeResizeStart"/>,
            <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.OnShapeDragStart"/>, <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.OnShapeResizeEnd"/>, and <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.OnShapeDragEnd"/> event callbacks.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeChangeEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the shape changing action should be canceled.
            </summary>
            <value> Optional
            `true` if the shape change action should be canceled; otherwise, `false`. The default value is `false`.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeChangeEventArgs.Action">
            <summary>
            Gets a value that indicates the name of the action to be performed.
            </summary>
            <value>
            A string value that represents the type of customization done in shapes.
            </value>
            <remarks>
            The possible actions include insert, select, delete, change stroke width, change stroke color, change fill color, change font family, change font size, change font style, and change font color.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeChangeEventArgs.PreviousShapeSettings">
            <summary>
            Gets the shape settings before inserting, deleting, and customization of the shape can be performed.
            </summary>
            <value>
            A <see cref="T:Syncfusion.Blazor.ImageEditor.ShapeSettings"/> object that represents the all the details of the shape including its position, stroke color, stroke width, fill color etc.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeChangeEventArgs.CurrentShapeSettings">
            <summary>
            Gets or sets the shape settings after inserting, deleting, and customization of the shape can be performed.
            </summary>
            <value>
            A <see cref="T:Syncfusion.Blazor.ImageEditor.ShapeSettings"/> object that represents the all the details of the shape including its position, stroke color, stroke width, fill color etc.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.SelectionChangeEventArgs">
            <summary>
            Provides the information about the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.OnSelectionResizeStart"/> and <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.OnSelectionResizeEnd"/> event callbacks.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.SelectionChangeEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the selection changing action should be canceled.
            </summary>
            <value> Optional
            `true` if the selection change action should be canceled; otherwise, `false`. The default value is `false`.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.SelectionChangeEventArgs.Action">
            <summary>
            Gets the name of the action to be performed.
            </summary>
            <value>
            A string value that represents the type of action done with selection.
            </value>
            <remarks>
            The possible actions include insert, resize selection.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.SelectionChangeEventArgs.CurrentSelectionSettings">
            <summary>
            Gets or sets the selection settings after inserting and resizing the selection.
            </summary>
            <value>
            A <see cref="T:Syncfusion.Blazor.ImageEditor.CropSelectionSettings"/> object that represents the all the details of the selection including its type, position, width, and height.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.SelectionChangeEventArgs.PreviousSelectionSettings">
            <summary>
            Gets the selection settings before inserting and resizing the selection.
            </summary>
            <value>
            A <see cref="T:Syncfusion.Blazor.ImageEditor.CropSelectionSettings"/> object that represents the all the details of the selection including its type, position, width, and height.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ImageResizeEventArgs">
            <summary>
            Represents information about the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.ImageResizing"/> event callback. 
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageResizeEventArgs.Cancel">
            <summary> 
            Gets or sets a value indicating whether the resizing action should be canceled. 
            </summary> 
            <value> 
            <c>true</c> if the resizing action should be canceled; otherwise, <c>false</c>. The default value is <c>false</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageResizeEventArgs.PreviousWidth">
            <summary> 
            Gets the width of the image before resizing operation. 
            </summary> 
            <value> 
            A double value representing the original width of the image. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageResizeEventArgs.PreviousHeight">
            <summary> 
            Gets the height of the image before resizing operation. 
            </summary>  
            <value> 
            A double value representing the original height of the image. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageResizeEventArgs.Width">
            <summary> 
            Gets the width of the image after a resizing operation has been performed. 
            </summary> 
            <value> 
            A double value representing the resulting width of the image after resizing. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageResizeEventArgs.Height">
            <summary> 
            Gets the height of the image after a resizing operation has been performed. 
            </summary> 
            <value> 
            A double value representing the resulting height of the image after resizing. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageResizeEventArgs.IsAspectRatio">
            <summary> 
            Gets a value indicating whether the resizing action should maintain the aspect ratio. 
            </summary> 
            <value> 
            <c>true</c> if the resizing action should be based on an aspect ratio; otherwise, <c>false</c>. The default value is <c>true</c>.   
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.FrameChangeEventArgs">
            <summary> 
            Provides information about the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.FrameChanging"/> event callback. 
            </summary> 
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.FrameChangeEventArgs.Cancel">
            <summary> 
            Gets or sets a value indicating whether the frame changing action should be canceled. 
            </summary> 
            <value> 
            <c>true</c> if the frame changing action should be canceled; otherwise, <c>false</c>. The default value is <c>false</c>. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.FrameChangeEventArgs.PreviousFrameSetting">
            <summary> 
            Gets the frame settings before applying or customizing the frame. 
            </summary> 
            <value> 
            A <see cref="T:Syncfusion.Blazor.ImageEditor.ImageFrameSettings"/> object representing all the details of the frame, including its type, stroke color, stroke width, inset, offset, radius, and amount. 
            </value> 
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.FrameChangeEventArgs.CurrentFrameSetting">
            <summary> 
            Gets or sets the frame settings after inserting or customizing the frame. 
            </summary> 
            <value> 
            A <see cref="T:Syncfusion.Blazor.ImageEditor.ImageFrameSettings"/> object representing all the details of the frame, including its type, stroke color, stroke width, inset, offset, radius, and amount. 
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ZoomedEventArgs">
            <summary>
            Provides the information about the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Zoomed"/> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ZoomedEventArgs.ZoomPoint">
            <summary>  
            Gets the x and y coordinates for the zoomed point in which the zooming action was performed.  
            </summary>  
            <value>  
            A point object that returns the current zoom value.  
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ZoomedEventArgs.ZoomFactor">
             <summary>  
             Gets the current zoomed level, in which the loaded image is enlarged in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
             </summary> 
             <value> 
             A double value that returns the current zoomed value.  
             </value>
             <remarks>  
             The previous and current zoom factor is used for finding whether the performed zooming is a zoom in or zoom out.  
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ZoomedEventArgs.ZoomTrigger">
            <summary>
            Gets the type of zooming performed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A flaggable Enum value that returns the type of zooming performed.
            </value>
            <remarks>  
            This property is used to get the type of zooming performed in the image editor by referring <see cref="T:Syncfusion.Blazor.ImageEditor.ImageEditorZoomSettings"/>.
            </remarks>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.CroppedEventArgs">
            <summary>
            Provides the information about the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Cropped"/> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.CroppedEventArgs.StartPoint">
            <summary>
            Gets the x and y coordinates for the start point of the cropping region.
            </summary>
            <value>
            A point object that returns the start point of cropping.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.CroppedEventArgs.EndPoint">
            <summary>
            Gets the x and y coordinates for the end point of the cropping region.
            </summary>
            <value>
            A point object that returns the end point of cropping.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.RotatedEventArgs">
            <summary>
            Provides the information about the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Rotated"/> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.RotatedEventArgs.Degree">
            <summary>
            Gets the degree to be rotated for an image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An integer value that returns the current rotated degree of the image.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.FlippedEventArgs">
            <summary>
            Provides the information about the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Flipped"/> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.FlippedEventArgs.Direction">
            <summary>
            Gets the direction to be flipped for an image.
            </summary>
            <value>
            `horizontal ` if the flipping to be horizontal; otherwise, `vertical`.  
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ShapeChangedEventArgs">
            <summary>
            Provides the information about the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.ShapeChanged"/> event callbacks.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeChangedEventArgs.Action">
            <summary>  
            Gets the name of the action to be performed.  
            </summary> 
            <value>  
            A string value that represents the type of customization done in shapes.  
            </value>  
            <remarks> 
            The actions that will be performed are insert, select, delete, resize, move, stroke width, stroke color, fill color, font family, font size, font style, font color.  
            </remarks>  
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeChangedEventArgs.ShapeSettings">
            <summary>  
            Gets the shape settings after inserting, deleting, moving, resizing, and customization of the shape can be performed.  
            </summary> 
            <value>  
            A ShapeSettings object that represents all the details of the shape including its position, stroke color, stroke width, fill color etc.  
            </value>  
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ImageFilteredEventArgs">
            <summary>
            Provides the information about the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.ImageFiltered"/> event callbacks.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageFilteredEventArgs.Filter">
            <summary>
            Gets the type of filtering to be applied to an image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            The possible filter options are default, chrome, cold, warm, invert, sepia.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.FinetuneValueChangedEventArgs">
            <summary>
            Provides the information about the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.FinetuneValueChanged"/> event callbacks.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.FinetuneValueChangedEventArgs.Finetune">
            <summary> 
            Gets the type of finetuning to be applied to an image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            The possible finetune options are brightness, contrast, hue, saturation, exposure, saturation, and blur.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.FinetuneValueChangedEventArgs.Value">
            <summary>  
            Gets the finetuning value to be applied to an image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value to adjust brightness, contrast, hue, saturation, blur, exposure, and saturation.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.FrameChangedEventArgs">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.FrameChanged"/> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.FrameChangedEventArgs.FrameSettings">
            <summary>
            Gets or sets the frame settings after inserting or customizing the frame.
            </summary>
            <value>
            A <see cref="T:Syncfusion.Blazor.ImageEditor.ImageFrameSettings"/> object representing all the details of the frame, including its type, stroke color, stroke width, inset, offset, radius, and amount.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ImageResizedEventArgs">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.ImageResized"/> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageResizedEventArgs.Width">
            <summary>
            Gets the width of the image after a resizing operation has been performed.
            </summary>
            <value>
            A double value representing the resulting width of the image after resizing.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageResizedEventArgs.height">
            <summary>
            Gets the height of the image after a resizing operation has been performed.
            </summary>
            <value>
            A double value representing the resulting height of the image after resizing.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageResizedEventArgs.IsAspectRatio">
            <summary>
            Gets a value indicating whether the resizing action should maintain the aspect ratio.
            </summary>
            <value>
            <c>true</c> if the resizing action should be based on an aspect ratio; otherwise, <c>false</c>. The default value is <c>true</c>.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.HistoryChangedEventArgs">
            <summary>
            Provides the information about the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.HistoryChanged" /> event callback.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.HistoryChangedEventArgs.Length">
            <summary>
            Gets the total number of steps or actions that can be undone or redone.
            </summary>
            <value>
            An integer value that returns the total number of steps to be undone or redone.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.HistoryChangedEventArgs.Index">
            <summary>
            Gets the index of the current action in the sequence of undo/redo steps. It shows which step you're currently at within the undo/redo history in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/> 
            </summary>
            <value>
            An integer value that returns the current action in the sequence of the history.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.HistoryChangedEventArgs.ImageAction">
            <summary>
            Gets the action being undone or redone, aiding in providing context to the user about what is happening in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A string value that returns the action such as rotate, flip, crop, finetune, filter.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.HistoryChangedEventArgs.ActionTrigger">
            <summary>
            Gets the value whether the event is triggered is for an undo or a redo action in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.  
            </summary>
            <value>
            A string value that returns the status such as undo or redo. 
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ImageEditorEvents">
            <summary>
            Specifies the events available in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/> component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Created">
            <summary> 
            Gets or sets an event callback that is raised when the component is rendered.
            </summary>
            <value>
            An event callback function.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Destroyed">
            <summary> 
            Gets or sets an event callback that is raised when the component is destroyed.  
            </summary>
            <value>
            An event callback function.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Clicked">
            <summary>
            Gets or sets an event callback that is raised while clicking the canvas element.
            </summary>
            <value>
            An event callback function.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Zooming">
            <summary>
            Gets or sets an event callback that is raised when zooming in or out action performed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An event callback function.
            </value>
            <remarks> 
            <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Zooming"/> is a cancelable event. To cancel the zooming action,
            set the <see cref="P:Syncfusion.Blazor.ImageEditor.ZoomEventArgs.Cancel"/> property as <c>true</c>.
            </remarks> 
            <example> 
            The below example explains about zooming event.
            <code><![CDATA[ 
                <SfImageEditor>
                    <ImageEditorEvents Zooming="zooming"/>
                </SfImageEditor>
                @code {
                    private zooming(ZoomEventArgs args){
                        args.Cancel = false; //Set as true to prevent zooming.
                    }
                }
            ]]></code> 
            </example> 
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.OnPanStart">
            <summary>
            Gets or sets an event callback that is raised when the panning action is started in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An event callback function.
            </value>
            <remarks> 
            <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.OnPanStart"/> is a cancelable event. To cancel the panning action,
            set the <see cref="P:Syncfusion.Blazor.ImageEditor.PanEventArgs.Cancel"/> property as <c>true</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.OnPanEnd">
            <summary>
            Gets or sets an event callback that is raised when the panning action is completed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An event callback function.
            </value>
            <remarks> 
            <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.OnPanEnd"/> is a cancelable event. To cancel the panning action,
            set the <see cref="P:Syncfusion.Blazor.ImageEditor.PanEventArgs.Cancel"/> property as <c>true</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Cropping">
            <summary>
            Gets or sets an event callback that is raised when cropping action performed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An event callback function.
            </value>
            <remarks> 
            <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Cropping"/> is a cancelable event. To cancel the cropping action, 
            set the <see cref="P:Syncfusion.Blazor.ImageEditor.CropEventArgs.Cancel"/> property as <c>true</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Rotating">
            <summary> 
            Gets or sets an event callback that is raised when rotating and straightening action performed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary> 
            <value> 
            An event callback function. 
            </value> 
            <remarks>  
            <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Rotating"/> is a cancelable event. To cancel the rotating and straightening action, 
            set the <see cref="P:Syncfusion.Blazor.ImageEditor.RotateEventArgs.Cancel"/> property as /// For straightening, this event is triggered once the slider movement has been completed. <c>true</c>. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Flipping">
            <summary>
            Gets or sets an event callback that is raised when flipping action performed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An event callback function.
            </value>
            <remarks> 
            <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Flipping"/> is a cancelable event. To cancel the flipping action,
            set the <see cref="P:Syncfusion.Blazor.ImageEditor.FlipEventArgs.Cancel"/> property as <c>true</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.ShapeChanging">
            <summary>
            Gets or sets an event callback that is raised when changing shapes in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary> 
            <value>
            An event callback function.
            </value>
            <remarks> 
            <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.ShapeChanging"/> is a cancelable event. To cancel the shape changing action,
            set the <see cref="P:Syncfusion.Blazor.ImageEditor.ShapeChangeEventArgs.Cancel"/> property as <c>true</c>.
            This event is triggered while changing stroke color, fill Color, and stroke width property for rectangle.
            This event is triggered while changing radius, stroke color, fill Color, and stroke width property for ellipse.
            This event is triggered while changing stroke color, and stroke width property for line.
            This event is triggered while changing stroke color, and stroke width property for path.
            This event is triggered while changing stroke color, start, end, and stroke width property for arrow.
            This event is triggered while changing text, font size, font style, color property for text.
            This event is triggered while changing stroke width, stroke color property for freehand draw.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.OnShapeResizeStart">
            <summary>
            Gets or sets an event callback that is raised when the shape resizing is started in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary> 
            <value>
            An event callback function. 
            </value>
            <remarks> 
            see cref="OnShapeResizeStart"/> is a cancelable event. To cancel the shape resizing action, 
            set the <see cref="P:Syncfusion.Blazor.ImageEditor.ShapeChangeEventArgs.Cancel"/> property as <c>true</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.OnShapeResizeEnd">
            <summary>
            Gets or sets an event callback that is raised when the shape resizing is completed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary> 
            <value>
            An event callback function. 
            </value>
            <remarks> 
            <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.OnShapeResizeEnd"/> is a cancelable event. To cancel the shape resizing action,
            set the <see cref="P:Syncfusion.Blazor.ImageEditor.ShapeChangeEventArgs.Cancel"/> property as <c>true</c>. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.OnShapeDragStart">
            <summary>
            Gets or sets an event callback that is raised when the shape dragging is started in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary> 
            <value>
            An event callback function. 
            </value>
            <remarks> 
            <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.OnShapeDragStart"/> is a cancelable event. To cancel the shape dragging action, 
            set the <see cref="P:Syncfusion.Blazor.ImageEditor.ShapeChangeEventArgs.Cancel"/> property as <c>true</c>.  
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.OnShapeDragEnd">
            <summary>
            Gets or sets an event callback that is raised when the shape dragging is completed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary> 
            <value>
            An event callback function. 
            </value>
            <remarks> 
            <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.OnShapeDragEnd"/> is a cancelable event. To cancel the shape dragging action,
            set the <see cref="P:Syncfusion.Blazor.ImageEditor.ShapeChangeEventArgs.Cancel"/> property as <c>true</c>.   
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.OnSelectionResizeStart">
            <summary>
            Gets or sets an event callback that is raised when the selection resizing is started in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary> 
            <value>
            An event callback function. 
            </value>
            <remarks> 
            see cref="OnSelectionResizeStart"/> is a cancelable event. To cancel the shape resizing action, 
            set the <see cref="P:Syncfusion.Blazor.ImageEditor.SelectionChangeEventArgs.Cancel"/> property as <c>true</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.OnSelectionResizeEnd">
            <summary>
            Gets or sets an event callback that is raised when the selection resizing is completed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary> 
            <value>
            An event callback function. 
            </value>
            <remarks> 
            see cref="OnSelectionResizeEnd"/> is a cancelable event. To cancel the shape resizing action, 
            set the <see cref="P:Syncfusion.Blazor.ImageEditor.SelectionChangeEventArgs.Cancel"/> property as <c>true</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.FileOpened">
            <summary>
            Gets or sets an event callback that is raised once the image is opened in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An event callback function.
            </value>
            <remarks> 
            This event is used to perform actions such as selection, shape insertion while loading the image.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Saving">
            <summary>
            Gets or sets an event callback that is raised when saving action performed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An event callback function.
            </value>
            <remarks> 
            <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Saving"/> is a cancelable event. To cancel the saving action, 
            set the <see cref="P:Syncfusion.Blazor.ImageEditor.SaveEventArgs.Cancel"/> property as <c>true</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.ToolbarCreated">
            <summary>
            Gets or sets an event callback that is raised once the toolbar has been created in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An event callback function.
            </value>
            <remarks> 
            This event is used to perform customization to the custom toolbar items.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.ToolbarUpdating">
            <summary>
            Gets or sets an event callback that is raised when updating/refreshing the toolbar in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An event callback function.
            </value>
            <remarks> 
            <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.ToolbarUpdating"/> is a cancelable event. To cancel the toolbar updating action, 
            set the <see cref="P:Syncfusion.Blazor.ImageEditor.ToolbarEventArgs.Cancel"/> property as <c>true</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.ToolbarItemClicked">
            <summary>
            Gets or sets an event callback that is raised once the toolbar item is clicked in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An event callback function.
            </value>
            <remarks> 
            This event is used to perform actions such as selection, shape insertion while clicking the custom toolbar items.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.ImageFiltering">
            <summary>
            Gets or sets an event callback that is raised when applying filters to the image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An event callback function.
            </value>
            <remarks> 
            <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.ImageFiltering"/> is a cancelable event. To cancel the filtering action, 
            set the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageFilterEventArgs.Cancel"/> property as <c>true</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.FinetuneValueChanging">
            <summary>
            Gets or sets an event callback that is raised when finetune the color of the image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An event callback function.
            </value>
            <remarks> 
            <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.FinetuneValueChanging"/> is a cancelable event. To cancel the finetune action, 
            set the <see cref="P:Syncfusion.Blazor.ImageEditor.FinetuneEventArgs.Cancel"/> property as <c>true</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.QuickAccessToolbarOpening">
            <summary>
            Gets or sets an event callback that is raised when opening the quick-access toolbar in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An event callback function.
            </value>
            <remarks> 
            <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.QuickAccessToolbarOpening"/> is a cancelable event. To cancel the toolbar opening action,
            set the <see cref="P:Syncfusion.Blazor.ImageEditor.ToolbarEventArgs.Cancel"/> property as <c>true</c>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.QuickAccessToolbarClicked">
            <summary>
            Gets or sets an event callback that is raised once the quick-access toolbar item is clicked in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An event callback function.
            </value>
            <remarks> 
            This event is used to perform actions such as cloning, deleting the shapes while clicking the quick-access toolbar items.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.ImageResizing">
            <summary> 
            Gets or sets a callback event that is raised when a resizing action is performed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary> 
            <value> 
            An event callback function that allows responding to the resizing action. 
            </value> 
            <remarks> 
            The <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.ImageResizing"/> event is cancelable. To cancel the resizing action,     
            set the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageResizeEventArgs.Cancel"/> property to <c>true</c>. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.FrameChanging">
            <summary> 
            Gets or sets an event callback that is raised when a frame change action is performed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary> 
            <value> 
            An event callback function that allows responding to frame change actions. 
            </value> 
            <remarks> 
            The <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.FrameChanging"/> event is cancelable. To cancel the frame changing action, 
            set the <see cref="P:Syncfusion.Blazor.ImageEditor.FrameChangeEventArgs.Cancel"/> property to <c>true</c>. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.ShapeChanged">
             <summary>  
             Gets or sets an event callback that is raised after shape related actions were performed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.  
             </summary>  
             <value>  
             An event callback function that allows responding to shape related actions.  
             </value> 
             <remarks>
             The <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.ShapeChanged"/> event is triggered after performing an action which includes changing the stroke color, fill color, and stroke width etc., for all the annotations and after the shape is applied to the canvas while clicking the OK button in toolbar. 
             So that we can get the current image here for further usage such as save the image after every action. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Zoomed">
            <summary>  
            Gets or sets an event callback that is raised after zoom action is performed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.  
            </summary>  
            <value>  
            An event callback function that allows responding to zoom actions.  
            </value> 
            <remarks> 
            The <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Zoomed"/> event is triggered after zooming action is performed and so we can get the current image here for further usage such as save the image after every action. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Rotated">
            <summary>  
            Gets or sets an event callback that is raised after the rotate and straightening action is performed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.  
            </summary>  
            <value>  
            An event callback function that allows responding to rotate actions.  
            </value> 
            <remarks>  
            The <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Rotated"/> event is triggered after rotating action and straightening action is performed and so we can get the current image here for further usage such as save the image after every action. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Flipped">
            <summary>  
            Gets or sets an event callback that is raised after flip action is performed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.  
            </summary>  
            <value>  
            An event callback function that allows responding to flip actions.  
            </value> 
            <remarks>  
            The <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Flipped"/> event is triggered after flipping action is performed and so we can get the current image here for further usage such as save the image after every action. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Cropped">
            <summary>  
            Gets or sets an event callback that is raised after cropping action is performed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.  
            </summary>  
            <value>  
            An event callback function that allows responding to crop actions.  
            </value> 
            <remarks> 
            This event is triggered after cropping has been performed while clicking the OK button in toolbar. 
            The <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Cropped"/> event is triggered after cropping action is performed and so we can get the current image here for further usage such as save the image after every action. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.ImageFiltered">
            <summary>  
            Gets or sets an event callback that is raised after filter action is performed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.  
            </summary>  
            <value>  
            An event callback function that allows responding to filter actions.  
            </value> 
            <remarks>  
            The <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.ImageFiltered"/> event is triggered after filtering action is performed and so we can get the current image here for further usage such as save the image after every action. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.FinetuneValueChanged">
            <summary>  
            Gets or sets an event callback that is raised after fine-tune action is performed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.  
            </summary>  
            <value>  
            An event callback function that allows responding to fine-tune actions.  
            </value>    
            <remarks>  
            The <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.FinetuneValueChanged"/> event is triggered after finetuning action is performed and so we can get the current image here for further usage such as save the image after every action. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.ImageResized">
            <summary>  
            Gets or sets an event callback that is raised after resize action is performed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.  
            </summary>  
            <value>  
            An event callback function that allows responding to resize actions.  
            </value> 
            <remarks> 
            The <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.ImageResized"/> event is triggered after resizing action is performed and so we can get the current image here for further usage such as save the image after every action. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.FrameChanged">
            <summary>  
            Gets or sets an event callback that is raised after frame related actions were performed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary>  
            <value>  
            An event callback function that allows responding to frame related actions.  
            </value> 
            <remarks>  
            The <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.FrameChanged"/> event is triggered after zooming action is performed and so we can get the current image here for further usage such as save the image after every action. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.HistoryChanged">
            <summary>
            Gets or sets an event callback that is raised after undo and redo action is performed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.  
            </summary>
            <value>
            An event callback function that allows responding to undo and redo actions.  
            </value>
            <remarks>
            The <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.HistoryChanged"/> event is triggered after every undo and redo action is performed and so we can get the current image here for further usage such as save the image after every action. 
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Dispose(System.Boolean)">
            <summary>
            Triggers while disposing the component.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ImageEditorFinetuneSettings">
            <summary>
            Represents the settings for finetune an image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <remarks>
            The finetune settings include brightness, contrast, hue, saturation, exposure, opacity, and blur. 
            Use the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorFinetuneSettings.Brightness"/>, <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorFinetuneSettings.Contrast"/>, <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorFinetuneSettings.Hue"/>, <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorFinetuneSettings.Saturation"/>, <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorFinetuneSettings.Exposure"/>,
            <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorFinetuneSettings.Opacity"/>, and <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorFinetuneSettings.Blur"/> properties to specify the minimum, maximum, and default values for each finetune setting.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorFinetuneSettings.Brightness">
            <summary>
            Gets or sets the options to configure the brightness settings in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An <see cref="T:Syncfusion.Blazor.ImageEditor.ImageFinetuneValue"/> object that specifies the minimum, maximum, and default values for brightness.
            The default minimum value is -100, the default maximum value is 100, and the default value is 0.
            </value>
            <remarks>
            Use the <see cref="T:Syncfusion.Blazor.ImageEditor.ImageFinetuneValue"/> class to specify the options for the brightness settings.
            </remarks>
            <example>
            The below code example, explains about setting the brightness options using finetune settings in image editor.
            <code><![CDATA[
            <SfImageEditor>
                <ImageFinetuneSettings Brightness="@brightness"/>
            </ SfImageEditor>
            @code {
                private brightness = new ImageFinetuneValue {Min = 0. Max = 100, DefaultValue= 50}
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorFinetuneSettings.Contrast">
            <summary>
            Gets or sets the options to configure the contrast settings in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An <see cref="T:Syncfusion.Blazor.ImageEditor.ImageFinetuneValue"/> object that specifies the minimum, maximum, and default value for contrast.
            The default minimum value is -100, maximum value is 100, and the default value is 0.
            </value>
            <remarks>
            Use the <see cref="T:Syncfusion.Blazor.ImageEditor.ImageFinetuneValue"/> class to specify the options for the contrast settings.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorFinetuneSettings.Hue">
            <summary>
            Gets or sets the options to configure the hue settings in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An <see cref="T:Syncfusion.Blazor.ImageEditor.ImageFinetuneValue"/> object that specifies the minimum, maximum, and default value for hue.
            The default minimum value is 0, maximum value is 100, and the default value is 0.
            </value>
            <remarks>
            Use the <see cref="T:Syncfusion.Blazor.ImageEditor.ImageFinetuneValue"/> class to specify the options for the hue settings.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorFinetuneSettings.Saturation">
            <summary>
            Gets or sets the options to configure the saturation settings in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An <see cref="T:Syncfusion.Blazor.ImageEditor.ImageFinetuneValue"/> object that specifies the minimum, maximum, and default value for saturation.
            The default minimum value is -100, maximum value is 100, and the default value is 0.
            </value>
            <remarks>
            Use the <see cref="T:Syncfusion.Blazor.ImageEditor.ImageFinetuneValue"/> class to specify the options for the saturation settings.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorFinetuneSettings.Exposure">
            <summary>
            Gets or sets the options to configure the exposure settings in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An <see cref="T:Syncfusion.Blazor.ImageEditor.ImageFinetuneValue"/> object that specifies the minimum, maximum, and default value for exposure.
            The default minimum value is 100, maximum value is -100, and the default value is 0.
            </value>
            <remarks>
            Use the <see cref="T:Syncfusion.Blazor.ImageEditor.ImageFinetuneValue"/> class to specify the options for the exposure settings.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorFinetuneSettings.Opacity">
            <summary>
            Gets or sets the options to configure the opacity settings in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An <see cref="T:Syncfusion.Blazor.ImageEditor.ImageFinetuneValue"/> object that specifies the minimum, maximum, and default value for opacity.
            The default minimum value is 0, maximum value is 100, and the default value is 100.
            </value>
            <remarks>
            Use the <see cref="T:Syncfusion.Blazor.ImageEditor.ImageFinetuneValue"/> class to specify the options for the opacity settings.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorFinetuneSettings.Blur">
            <summary>
            Gets or sets the options to configure the blur settings in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An <see cref="T:Syncfusion.Blazor.ImageEditor.ImageFinetuneValue"/> object that specifies the minimum, maximum, and default value for blur.
            The default minimum value is 0, maximum value is 100, and the default value is 0.
            </value>
            <remarks>
            Use the <see cref="T:Syncfusion.Blazor.ImageEditor.ImageFinetuneValue"/> class to specify the options for the blur settings.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.ImageEditorFinetuneSettings.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.ImageEditorFinetuneSettings.Dispose(System.Boolean)">
            <summary>
            Triggers while disposing the component.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ImageEditorFontFamily">
             <summary>
             A class used for configuring the font family properties in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/> component.
             </summary>
              <remarks>
             You can configure the font family tool appearance by specifying the value for the corresponding property.
             </remarks>
              <example>
             <code><![CDATA[
             @using Syncfusion.Blazor.ImageEditor
            
              <div style="width: 100%; height: 90vh;">
                 <SfImageEditor Height="100%">
                     <ImageEditorFontFamily Items="CustomItems" Default="Impact"></ImageEditorFontFamily>
                 </SfImageEditor>
             </div>
            
             @code {
                 private List<ImageEditorDropDownItemModel> CustomItems = new List<ImageEditorDropDownItemModel>
                 {
                     new ImageEditorDropDownItemModel { Text = "Arial", Value = "Arial"},
                     new ImageEditorDropDownItemModel { Text = "Georgia", Value = "Georgia"},
                     new ImageEditorDropDownItemModel { Text = "Impact", Value = "Impact"},
                     new ImageEditorDropDownItemModel { Text = "Tahoma", Value = "Tahoma"},
                 };
             }
             ]]></code>
             </example>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorFontFamily.Default">
            <summary> 
            Gets or sets the default font family to be selected in the font family dropdown button in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/> toolbar. 
            </summary> 
            <value> 
            This property contains default font family value as string. The default value is <c>Arial</c>.  
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorFontFamily.Items">
            <summary>
            Gets or sets the fonts that display under the Font Family dropdown button in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/> toolbar.
            </summary>
            <value>
            <see cref="T:Syncfusion.Blazor.ImageEditor.ImageEditorDropDownItemModel"/>
            </value>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.ImageEditorFontFamily.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.ImageEditorFontFamily.Dispose(System.Boolean)">
            <summary>
            Triggers while disposing the component.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ImageEditorSelectionSettings">
            <summary>
            Represents the settings for selection action in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <remarks>
            The `SelectionSettings` tag allows you to customize the selection element of the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorSelectionSettings.ShowCircle">
            <summary>
            Gets or sets a value indicating whether the selection circle is enabled in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            <c>true</c> if the selection circle is enabled; otherwise, <c>false</c>.
            The default value is <c>true</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorSelectionSettings.StrokeColor">
            <summary>
            Gets or sets the value that indicates the stroke color of the selection border in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A string value that can accept both color value or hex code to specify the stroke color of the selection border in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            The default value is <c>NULL</c>.
            </value>
            <remarks>
            The default selection circle color is based on the <see cref="T:Syncfusion.Blazor.Theme"/> property.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorSelectionSettings.FillColor">
            <summary>
            Gets or sets the value that indicates the fill color of the selection circle in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A string value that can accept both color value or hex code to specify the fill color of the selection circle in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            The default value is <c>NULL</c>.
            </value>
            <remarks>
            The default selection circle color is based on the <see cref="T:Syncfusion.Blazor.Theme"/> property.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.ImageEditorSelectionSettings.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.ImageEditorSelectionSettings.Dispose(System.Boolean)">
            <summary>
            Triggers while disposing the component.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ImageEditorTemplates">
            <summary>
            Specify templates for rendering Toolbar and Contextual Toolbar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorTemplates.ToolbarTemplate">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Components.RenderFragment"/> to render a custom toolbar in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            This replaces the built-in toolbar of the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>, so the user can bind the events to the custom toolbar and interact with <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A <see cref="T:Microsoft.AspNetCore.Components.RenderFragment"/> used to create a custom toolbar.
            </value>
            <remarks>
            The parameters passed to the template can be accessed using an implicit parameter named <c>context</c>. If we specify both <see cref="P:Syncfusion.Blazor.ImageEditor.SfImageEditor.Toolbar"/>
            and <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorTemplates.ToolbarTemplate"/>, then the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorTemplates.ToolbarTemplate"/> considers and renders the template.
            </remarks>
            <example>
            The below code example, showcases a toolbar template in image editor.
            <code><![CDATA[
            <SfImageEditor>
                <ImageEditorTemplates>
                    <ToolbarTemplate>
                        <div class="toolbar-wrapper">
                        </div>
                    </ ToolbarTemplate >
                </ImageEditorTemplates>
            </ SfImageEditor>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorTemplates.QuickAccessToolbarTemplate">
            <summary>
            Gets or sets the <see cref="T:Microsoft.AspNetCore.Components.RenderFragment"/> to render a custom quick-access toolbar in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            This replaces the built-in quick-access toolbar of the image editor, so the user can bind the events to the custom quick-access toolbar and interact with the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A <see cref="T:Microsoft.AspNetCore.Components.RenderFragment"/> used to create a custom quick access toolbar.
            </value>
            <remarks>
            The parameters passed to the template can be accessed using an implicit parameter named <c>context</c>.
            </remarks>
            <example>
            The below code example, showcases a quick-access toolbar template in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            <code><![CDATA[
            <SfImageEditor>
                <ImageEditorTemplates>
                    <QuickAccessToolbarTemplate>
                        <div class="toolbar-wrapper">
                        </div>
                    </QuickAccessToolbarTemplate >
                </ImageEditorTemplates>
            </ SfImageEditor>
            ]]></code>
            </example>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.ImageEditorTemplates.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.ImageEditorTemplates.Dispose(System.Boolean)">
            <summary>
            Triggers while disposing the component.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ImageEditorZoomSettings">
            <summary>
            Represents the settings for zooming actions in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <remarks>
            The `ZoomSettings` tag allows you to control the zoom level of the Image Editor.
            The maximum zoom level determines how close the user can zoom in to the image, while the minimum zoom level determines how far out the user can zoom.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorZoomSettings.ZoomTrigger">
            <summary>
            Gets or sets the type of zooming needs to be performed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A flagged Enum <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorZoomSettings.ZoomTrigger"/> value that specifies the type of zooming option to perform zooming.
            And by default, all type of zooming were performed in an <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </value>
            <remarks>
            It is a flagged Enum.
            Use this property to enable or disable specific types of zooming in the image editor. 
            The following zooming options are available:
            <list type="bullet">
            <item><description> MouseWheel: Zooming is performed by scrolling the mouse wheel up and down. </description></item>
            <item><description>Pinch: Zooming is performed using pinch gestures on touch-enabled devices. </description></item>
            <item><description>Commands: Zooming is performed by clicking the CTRL key and either the plus (+) or minus (-) buttons on the keyboard. </description></item>
            <item><description>Toolbar: Zooming is performed using toolbar buttons. </description></item>
            </list>
            By default, this property is set to `MouseWheel|Touch|Commands|Toolbar`, which enables all types of zooming.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorZoomSettings.MinZoomFactor">
            <summary>
            Gets or sets the minimum zoom level that restricts the range of zooming allowed by this zoom settings.
            </summary>
            <value>
            A double value that specifies the minimum zooming level. And the default value is 1 (100%).
            </value>
            <remarks>
            User can specify MinZoomFactor as 0.1, and it can zoom out 9 actions from the original image.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorZoomSettings.MaxZoomFactor">
            <summary>
            Gets or sets the maximum zoom level that restricts the range of zooming allowed by this zoom settings.
            </summary>
            <value>
            A double value that specifies the maximum zooming level. And the default value is 10 (1000%).
            </value>
            <remarks>
            User can specify MaxZoomFactor as 20, and it can zoom in 20 actions from the original image.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorZoomSettings.ZoomFactor">
            <summary>
            Gets or sets the zooming level applied to the image at initial load in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value that specifies the minimum zooming level. And the default value is 1 (100%).
            </value>
            <remarks>
            The default ZoomFactor (set as 1) loads the original image.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorZoomSettings.ZoomPoint">
            <summary>
            Gets or sets the point in which the zooming has been performed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An <see cref="T:Syncfusion.Blazor.ImageEditor.ImageEditorPoint"/> value that specifies the current zooming point.
            And the default value is null, and it can be considered as center point of the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </value>
            <remarks>
            The given value is an <see cref="T:Syncfusion.Blazor.ImageEditor.ImageEditorPoint"/> object which has x and y coordinates.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.ImageEditorZoomSettings.OnInitializedAsync">
            <summary>
            Triggers while initial rendering of the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.ImageEditorZoomSettings.Dispose(System.Boolean)">
            <summary>
            Triggers while disposing the component.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.SfImageEditor">
            <summary>
            The Image Editor component is a graphical user interface used for editing images.
            It provides built-in support for rotate, flip, zoom, and crop the images based on the selection.
            It also has support for inserting an Annotations including rectangle, ellipse, line, text, path, arrow, image, and freehand drawings.
            </summary>
            <example>
            In the below code example, a basic Image Editor initialized with <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/> tag directive.
            <code><![CDATA[ 
            <SfImageEditor></SfImageEditor>
            ]]></code>
            </example>
            <summary>
            The Image Editor component is a graphical user interface used for editing images.
            It provides built-in support for rotate, flip, zoom, and crop the images based on the selection.
            It also has support for inserting an Annotations including rectangle, ellipse, line, text, path, arrow, image, and freehand drawings.
            </summary>
            <example>
            In the below code example, a basic Image Editor initialized with <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/> tag directive.
            <code><![CDATA[ 
            <SfImageEditor></SfImageEditor>
            ]]></code>
            </example>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.OnParametersSetAsync">
            <summary>
            Triggered when the component is loaded.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.OnInitializedAsync">
            <summary>
            Triggered when the component is initialized.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.UpdateChildProperties(System.String,System.Object)">
            <summary>
            To update the child properties
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.UpdateDialog(System.Boolean)">
            <summary>
            Triggers to close/ open the confirmation dialog.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.UpdateColorValue(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Triggers to update the color picker value while selecting annotations .
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.ZoomEventAsync(System.String,Syncfusion.Blazor.ImageEditor.ZoomEventArgs,Syncfusion.Blazor.ImageEditor.ZoomedEventArgs)">
            <summary>
            Triggers to invoke the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Zooming"/> event .
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.ClickEventAsync(System.String,Syncfusion.Blazor.ImageEditor.ImageEditorClickEventArgs)">
            <summary>
            Triggers to invoke the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Clicked"/> event .
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.RotateEventAsync(System.String,Syncfusion.Blazor.ImageEditor.RotateEventArgs,Syncfusion.Blazor.ImageEditor.RotatedEventArgs)">
            <summary>
            Triggers to invoke the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Rotating"/> event .
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.FlipEventAsync(System.String,Syncfusion.Blazor.ImageEditor.FlipEventArgs,Syncfusion.Blazor.ImageEditor.FlippedEventArgs)">
            <summary>
            Triggers to invoke the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Flipping"/> event .
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.PanEventAsync(System.String,Syncfusion.Blazor.ImageEditor.PanEventArgs)">
            <summary>
            Triggers to invoke the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.OnPanStart"/> event .
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.CropEventAsync(System.String,Syncfusion.Blazor.ImageEditor.CropEventArgs,Syncfusion.Blazor.ImageEditor.CroppedEventArgs)">
            <summary>
            Triggers to invoke the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Cropping"/> event .
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.ShapeEventAsync(System.String,Syncfusion.Blazor.ImageEditor.ShapeChangeEventArgs,Syncfusion.Blazor.ImageEditor.ShapeChangedEventArgs)">
            <summary>
            Triggers to invoke the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.ShapeChanging"/> event .
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.SelectionEventAsync(System.String,Syncfusion.Blazor.ImageEditor.SelectionChangeEventArgs)">
            <summary>
            Triggers to invoke the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.OnSelectionResizeStart"/> event .
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.QuickAccessToolbarEventAsync(Syncfusion.Blazor.ImageEditor.QuickAccessToolbarEventArgs)">
            <summary>
            Triggers to invoke the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.QuickAccessToolbarOpening"/> event .
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.FileOpenEventAsync(System.String,Syncfusion.Blazor.ImageEditor.FileOpenEventArgs)">
            <summary>
            Triggers to invoke the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.FileOpened"/> event .
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.BeforeSaveEventAsync(System.String,Syncfusion.Blazor.ImageEditor.SaveEventArgs)">
            <summary>
            Triggers to invoke the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.Saving"/> event .
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.OnImageFilterEventAsync(System.String,Syncfusion.Blazor.ImageEditor.ImageFilterEventArgs,Syncfusion.Blazor.ImageEditor.ImageFilteredEventArgs)">
            <summary>
            Triggers to invoke the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.ImageFiltering"/> event .
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.OnFinetuneValueChangeAsync(System.String,Syncfusion.Blazor.ImageEditor.FinetuneEventArgs,Syncfusion.Blazor.ImageEditor.FinetuneValueChangedEventArgs)">
            <summary>
            Triggers to invoke the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.FinetuneValueChanging"/> event .
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.OnImageResizingAsync(System.String,Syncfusion.Blazor.ImageEditor.ImageResizeEventArgs,Syncfusion.Blazor.ImageEditor.ImageResizedEventArgs)">
            <summary>
            Triggers to invoke the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.ImageResizing"/> event .
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.OnFrameChangingAsync(System.String,Syncfusion.Blazor.ImageEditor.FrameChangeEventArgs,Syncfusion.Blazor.ImageEditor.FrameChangedEventArgs)">
            <summary>
            Triggers to invoke the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.FrameChanging"/> event .
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.OnHistoryChangedAsync(Syncfusion.Blazor.ImageEditor.HistoryChangedEventArgs)">
            <summary>
            Triggers to invoke the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.HistoryChanged"/> event .
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.ComponentDispose">
            <summary>
            Triggers while disposing the component.
            </summary>
            <returns>Task.</returns>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.SfImageEditor.ChildContent">
            <summary>
            Gets or sets the child content for the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            This property represents the child content that will be placed inside the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/> component.
            </value>
            <remarks>
            The child content allows you to include custom elements or components within the SfImageEditor.
            You can define your own HTML, Razor components, or other content to be rendered inside the SfImageEditor.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.SfImageEditor.CssClass">
            <summary>
            Gets or sets a value that indicates the CSS class string to customize the appearance of the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            The CSS class string to customize the appearance of the control. The default value is an empty string.
            </value>
            <remarks>
            You can use this property to apply custom CSS classes to the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/> component.
            This allows you to style the component according to your specific design requirements.
            The CSS class string should contain one or more class names separated by spaces.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.SfImageEditor.Enabled">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/> is enabled to interact.
            </summary>
            <value>
            <c>true</c> if the control is enabled; otherwise, <c>false</c>. The default value is <c>true</c>.
            </value>
            <remarks>
            When the control is enabled, users can interact with the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/> component.
            If set to <c>false</c>, user interactions will be disabled, and the component will be in a read-only state.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.SfImageEditor.Height">
            <summary>
            Gets or sets the value that indicates the height of the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A string value that can accept all types of values such as a number (e.g., 950), pixel (e.g., 950px), em (950em), or a percentage (e.g., 100%) to specify the height of the image editor. The default value is <c>100%</c>.
            </value>
            <remarks>
            If the value is specified as a percentage, then the height is relative to the height of the parent element.
            You can use various units to specify the height based on your design requirements.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.SfImageEditor.Theme">
            <summary>
            Gets or sets the value that indicates the theme to define the selection UI of the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            The possible values are: Bootstrap5, Bootstrap5Dark, Tailwind, TailwindDark, Fluent, FluentDark, Bootstrap4,
            Bootstrap, BootstrapDark, Material, MaterialDark, Fabric, FabricDark, HighContrast, Material3, and Material3Dark.
            </value>
            <remarks>
            You can set this property to one of the listed values to define the visual theme for the selection UI of the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            Each theme provides a unique look and feel to match your application's style.
            Choose a theme that best fits your application's design and user experience.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.SfImageEditor.Toolbar">
            <summary>
            Gets or sets the value that indicates the items to define the toolbar of the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A list of <see cref="T:Syncfusion.Blazor.ImageEditor.ImageEditorToolbarItemModel"/> that specifies the built-in toolbar items or custom toolbar items. 
            The list of built-in toolbar items includes Crop, Annotation, Transform, Zoom, UndoRedo, Reset, and Save.
            </value>
            <remarks>
            To hide the toolbar, specify an empty list.
            To limit the built-in toolbar items, provide a list with their names.
            {
               new ImageEditorToolbarItemModel() { Name = "Crop"},
               new ImageEditorToolbarItemModel () {Name = "Annotation"}
            }
            If the given name matches the built-in toolbar items text, then the built-in toolbar items were rendered.
            To add a custom toolbar item alongside existing items, you can do:
            {
               new ImageEditorToolbarItemModel() { Name ="Crop"},
               new ImageEditorToolbarItemModel() { Name ="Annotation" },
               new ImageEditorToolbarItemModel() { Name = "Disabled", TooltipText = "Disabled", PrefixIcon = "e-disable"}
            }
            To provide a completely custom toolbar, use the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorTemplates.ToolbarTemplate"/> property instead.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.SfImageEditor.Width">
            <summary>
            Gets or sets the value that indicates the width of the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A string value that can accept various types of input such as numbers (e.g., 950), pixels (e.g., 950px), em units (950em), or percentages (e.g., 100%) to specify the width of the image editor. The default value is <c>100%</c>.
            </value>
            <remarks>
            When specifying the width as a percentage, it is relative to the width of the parent element.
            You can use different units to set the width according to your layout requirements.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.SfImageEditor.AllowUndoRedo">
            <summary>
            Gets or sets a value indicating whether the undo and redo functionality is enabled in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            <c>true</c> if the undo and redo functionality is enabled; otherwise, <c>false</c>.
            The default value is <c>true</c>.
            </value>
            <remarks>
            The undo-redo history is limited to 16 actions. After the 16th action, the first action in history is removed.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.SfImageEditor.IsReadOnly">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/> component is in read-only mode.
            </summary>
            <value>
            <c>true</c> if the read-only mode is enabled; otherwise, <c>false</c>.
            The default value is <c>false</c>.
            </value>
            <remarks>
            When the read-only mode is enabled, users won't be able to make changes to the content within the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            This is useful when you want to provide a view-only experience without allowing user modifications.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.SfImageEditor.ShowQuickAccessToolbar">
            <summary>
            Gets or sets a value indicating whether the quick-access toolbar functionality is enabled in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            <c>true</c> if the quick access toolbar is enabled; otherwise, <c>false</c>.
            The default value is <c>true</c>.
            </value>
            <remarks>
            The quick-access toolbar is shown when annotations are selected. It provides options for clone, delete, and edit text.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.SfImageEditor.HtmlAttributes">
            <summary>
            Gets or sets a collection of additional attributes that will be applied to the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/> component.
            </summary>
            <value> 
            This property allows you to specify additional attributes for customizing the rendering of the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/> component.
            The default value is `null`. 
            </value>
            <example>
            In the below code example, signature height and width have been specified as style attributes in <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            <code><![CDATA[
            <SfImageEditor style="height: 100%; width: 100%;"></SfImageEditor>
            ]]></code>
            </example>
            <remarks>
            Additional attributes can be added as inline attributes or by specifying <c>@attributes</c> directive.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.ClearSelectionAsync(System.Boolean)">
            <summary>
            Clears the current selection in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <param name="resetCrop">Specifies to reset last cropped image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.</param>
            <remarks>
            If no selection is currently active, this method has no effect. 
            This method clears the current selection asynchronously and completes when the component has finished the action.
            </remarks>
            <returns>A Task representing the asynchronous operation of clearing the selection.
            </returns>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.CropAsync">
            <summary>
            Crops the image based on the selection in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <returns>
            A Task representing the asynchronous operation of cropping the selection. It completes when the component has finished the action.
            </returns>
            <remarks>
            This method crops the selected area of the original image, and the original image will be replaced by the cropped version.
            If no selection is currently active, this method has no effect.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.FlipAsync(Syncfusion.Blazor.ImageEditor.ImageEditorDirection)">
            <summary>
            Flips the image in the specified direction in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <param name="direction">Specifies the direction to flip the image. This is an Enum property of type <see cref="T:Syncfusion.Blazor.ImageEditor.ImageEditorDirection"/>.</param>
            <returns>
            A Task representing the asynchronous operation of flipping the image. It completes when the component has finished the action.
            </returns>
            <remarks>
            The possible values for the <see cref="T:Syncfusion.Blazor.ImageEditor.ImageEditorDirection"/> Enum are "Horizontal" and "Vertical".
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.GetImageDataAsync">
            <summary>
            Gets the current image data from the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <returns>
            A Task that completes when the component has finished the action.
            </returns>
            <remarks>
            The value returned by this method is used to render the image in the HTML canvas as well as within our image editor using the <see cref="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.OpenAsync(System.Object)"/> method.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.GetImageDataUrlAsync">
            <summary>
            Gets the current image data URL from the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <returns>
            A Task that completes when the component has finished the action.
            </returns>
            <remarks>
            The value returned by this method is used to save the edited image to the database as well as open it in our image editor using the <see cref="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.OpenAsync(System.Object)"/> method.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.OpenAsync(System.Object)">
            <summary>
            Opens an image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/> as a URL or image data.
            </summary>
            <param name="data">The URL of the image or image data url to open in the image editor.</param>
            <returns>
            A Task that completes when the component has finished the action.
            </returns>
            <remarks>
            This method can be useful when you want to open an image in the editor, especially if you have obtained the image data using the <see cref="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.GetImageDataUrlAsync"/> method.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.ResetAsync">
            <summary>
            Resets any customizations that have been made to the image since it was loaded in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>, restoring it to its original state.
            </summary>
            <returns>
            A Task that completes when the component has finished the action.
            </returns>
            <remarks>
            This method can be useful when a user has made multiple changes to the image and wishes to start over from the original version.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.RotateAsync(System.Int32)">
            <summary>
            Rotates the image clockwise or counterclockwise based on the provided degree in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <param name="degree">
            Specifies the degree to rotate the image.
            - If the degree is a positive value, the image is rotated clockwise.
            - If the degree is a negative value, the image is rotated counterclockwise.
            </param>
            <returns>
            A Task that completes when the rotation is finished.
            </returns>
            <remarks>
            Valid degree values include 0, 90, 180, 270, 360, and their negative counterparts.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.ExportAsync(System.String,Syncfusion.Blazor.ImageEditor.ImageEditorFileType,System.Double)">
            <summary>
            Exports the image from the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/> based on the provided file type and file name.
            </summary>
            <param name="fileName">
            Optional. Specifies the name of the image file to export. Defaults to the original image name if not specified.
            </param>
            <param name="fileType">
            Optional. Specifies the type of image file to export. This is an Enum property of type <see cref="T:Syncfusion.Blazor.ImageEditor.ImageEditorFileType"/>.
            Defaults to "PNG" if not specified.
            </param>
            <param name="imageQuality">  
            Optional. Specifies the quality of the image file to export. This is only applicable for JPEG type images. This is a double type. 
            Defaults to 1.0, which represents the original size of the image if not specified.  
            </param>  
            <returns> 
            A Task that completes when the export action has finished.  
            </returns> 
            <remarks> 
            The "fileName" parameter should be null if the user wants to change only the type of image. 
            </remarks> 
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.SelectAsync(System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Selects a region of the image to perform cropping based on the provided type and region parameters in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <param name="type">
            Optional. Specifies the type of selection to be cropped. The default value is "custom," and possible values are "rectangle," "ellipse," and "custom."
            </param>
            <param name="startX">
            Optional. Specifies the starting x-position to begin the selection. Defaults to the center of the image editor if not specified.
            </param>
            <param name="startY">
            Optional. Specifies the starting y-position to begin the selection. Defaults to the center of the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/> if not specified.
            </param>
            <param name="width">
            Optional. Specifies the width of the selection. Defaults to half of the image editor width if not specified.
            </param>
            <param name="height">
            Optional. Specifies the height of the selection. Defaults to half of the image editor height if not specified.
            </param>
            <returns>
            A Task that completes when the component has finished the action.
            </returns>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.EnableFreehandDrawAsync">
            <summary>
            Enables the freehand draw option to draw freehand drawings on the canvas using mouse or touch actions in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <returns>
            A task that completes when the component has finished the action.
            </returns>
            <remarks>
            This method returns false if it is called when freehand draw is already enabled.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.DisableFreehandDrawAsync">
            <summary>
            Disables the freehand draw option to stop freehand drawings on the canvas using mouse or touch actions in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <returns>
            A task that completes when the component has finished the action.
            </returns>
            <remarks>
            This method returns false if it is called when freehand draw is already disabled.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.ZoomAsync(System.Double,Syncfusion.Blazor.ImageEditor.ImageEditorPoint)">
            <summary>
            Zooms the image in or out based on the specified value in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <param name="zoomFactor">
            Specifies the zoom factor to perform zooming. The minimum and maximum zoom factors are defined in the <see cref="P:Syncfusion.Blazor.ImageEditor.SfImageEditor.ZoomSettings"/> property.
            </param>
            <param name="zoomPoint">
            Optional. Specifies the point at which the zoom in/out operation is performed in the image editor using <see cref="T:Syncfusion.Blazor.ImageEditor.ImageEditorPoint"/>.
            </param>
            <returns>
            A task that completes when the zoom operation has finished. 
            </returns>
            <remarks>
            If the given zoom factor value exceeds the range of the minimum and maximum zoom factors, the zooming operation cannot be performed.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.DrawEllipseAsync(System.Double,System.Double,System.Double,System.Double,System.Double,System.String,System.String,System.Double,System.Boolean)">
            <summary>
            Draws an ellipse on the image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <param name="x">
            Optional. Specifies the X-coordinate to draw the ellipse. Defaults to the center position of the image if not specified.
            </param>
            <param name="y">
            Optional. Specifies the Y-coordinate to draw the ellipse. Defaults to the center position of the image if not specified.
            </param>
            <param name="radiusX">
            Optional. Specifies the radius of the X-coordinates to draw the ellipse. Defaults to 50 if not specified.
            </param>
            <param name="radiusY">
            Optional. Specifies the radius of the Y-coordinates to draw the ellipse. Defaults to 50 if not specified.
            </param>
            <param name="strokeWidth">
            Optional. Specifies the stroke width to draw the ellipse.
            </param>
            <param name="strokeColor">
            Optional. Specifies the stroke color to draw the ellipse. Defaults to white if not specified.
            </param>
            <param name="fillColor">
            Optional. Specifies the color to fill the ellipse. Defaults to transparent if not specified.
            </param>
            <param name="degree">Optional. Specifies the degree to rotate the rectangle. </param> 
            <param name="isSelected">Optional. Specifies to show the shape in the selected state. </param>
            <remarks>
            If the given X and Y coordinates are not within the image range, the ellipse is not drawn on the image.
            </remarks>
            <returns>
            A task that completes when the component has finished the action. 
            </returns>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.DrawArrowAsync(System.Double,System.Double,System.Double,System.Double,System.Double,System.String,Syncfusion.Blazor.ImageEditor.ImageEditorArrowHeadType,Syncfusion.Blazor.ImageEditor.ImageEditorArrowHeadType,System.Boolean)">
            <summary>
            Draws an arrow on the image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <param name="startX">
            Optional. Specifies the start X-coordinate to draw the arrow. Defaults to the center point of the image if not specified.
            </param>
            <param name="startY">
            Optional. Specifies the start Y-coordinate to draw the arrow. Defaults to the center point of the image if not specified.
            </param>
            <param name="endX">
            Optional. Specifies the end X-coordinate to draw the arrow. Defaults to startX plus 100 if not specified.
            </param>
            <param name="endY">
            Optional. Specifies the end Y-coordinate to draw the arrow. Defaults to startY plus 100 if not specified.
            </param>
            <param name="strokeWidth">
            Optional. Specifies the stroke width to draw the arrow. Defaults to extra-small if not specified.
            </param>
            <param name="strokeColor">
            Optional. Specifies the stroke color to draw the arrow. Defaults to white if not specified.
            </param>
            <param name="arrowStart">
            Optional. Specifies the type of arrowhead for the start position. Defaults to None if not specified.
            </param>
            <param name="arrowEnd">
            Optional. Specifies the type of arrowhead for the end position. Defaults to SolidArrow if not specified.
            </param>
            <param name="isSelected">Optional. Specifies to show the shape in the selected state. </param>
            <remarks>
            If the given X and Y coordinates are not within the image range, the arrow is not drawn on the image.
            </remarks>
            <returns>
            A task that completes when the component has finished the action. 
            </returns>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.DrawPathAsync(Syncfusion.Blazor.ImageEditor.ImageEditorPoint[],System.Double,System.String,System.Boolean)">
            <summary>
            Draws a path on the image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <param name="points">
            Optional. Specifies a collection of X and Y coordinates as <see cref="T:Syncfusion.Blazor.ImageEditor.ImageEditorPoint"/> to draw a path.
            Defaults to drawing a single path from the center point of the image if not specified.
            </param>
            <param name="strokeWidth">
            Optional. Specifies the stroke width to draw the path. Defaults to extra-small if not specified.
            </param>
            <param name="strokeColor">
            Optional. Specifies the stroke color to draw the path. Defaults to white if not specified.
            </param>
            <param name="isSelected">Optional. Specifies to show the shape in the selected state. </param>
            <remarks>
            If the given X and Y coordinates are not within the image range, the path is not drawn on the image.
            </remarks>
            <returns>
            A task that completes when the component has finished the action. 
            </returns>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.DrawLineAsync(System.Double,System.Double,System.Double,System.Double,System.Double,System.String,System.Boolean)">
            <summary>
            Draws a line on the image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <param name="startX">
            Optional. Specifies the start X-coordinate to draw the line. Defaults to the center point of the image if not specified.
            </param>
            <param name="startY">
            Optional. Specifies the start Y-coordinate to draw the line. Defaults to the center point of the image if not specified.
            </param>
            <param name="endX">
            Optional. Specifies the end X-coordinate to draw the line. Defaults to startX plus 100 if not specified.
            </param>
            <param name="endY">
            Optional. Specifies the end Y-coordinate to draw the line. Defaults to startY plus 100 if not specified.
            </param>
            <param name="strokeWidth">
            Optional. Specifies the stroke width to draw the line. Defaults to extra-small if not specified.
            </param>
            <param name="strokeColor">
            Optional. Specifies the stroke color to draw the line. Defaults to white if not specified.
            </param>
            <param name="isSelected">Optional. Specifies to show the shape in the selected state. </param> 
            <remarks>
            If the given X and Y coordinates are not within the image range, the line is not drawn on the image.
            </remarks>
            <returns>
            A task that completes when the component has finished the action. 
            </returns>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.DrawRectangleAsync(System.Double,System.Double,System.Int32,System.Int32,System.Int32,System.String,System.String,System.Double,System.Boolean)">
            <summary>
            Draws a rectangle on the image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <param name="x">
            Optional. Specifies the X-coordinate to draw the rectangle. Defaults to the center point of the image if not specified.
            </param>
            <param name="y">
            Optional. Specifies the Y-coordinate to draw the rectangle. Defaults to the center point of the image if not specified.
            </param>
            <param name="width">
            Optional. Specifies the width to draw the rectangle from the start point. Defaults to 100 if not specified.
            </param>
            <param name="height">
            Optional. Specifies the height to draw the rectangle from the start point. Defaults to 50 if not specified.
            </param>
            <param name="strokeWidth">
            Optional. Specifies the stroke width to draw the rectangle. Defaults to extra-small size if not specified.
            </param>
            <param name="strokeColor">
            Optional. Specifies the stroke color to draw the rectangle. Defaults to white color if not specified.
            </param>
            <param name="fillColor">
            Optional. Specifies the color to fill the rectangle. Defaults to transparent if not specified.
            </param>
            <param name="degree">Optional. Specifies the degree to rotate the rectangle. </param> 
            <param name="isSelected">Optional. Specifies to show the shape in the selected state. </param> 
            <remarks>
            If the given X and Y coordinates are not within the image range, the rectangle is not drawn on the image.
            </remarks>
            <returns>
            A task that completes when the component has finished the action. 
            </returns>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.DrawTextAsync(System.Double,System.Double,System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.String,System.Boolean,System.Int32)">
            <summary>
            Draws a text on the image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <param name="x">
            Optional. Specifies the X-coordinate to draw the text. Defaults to the center point of the image if not specified.
            </param>
            <param name="y">
            Optional. Specifies the Y-coordinate to draw the text. Defaults to the center point of the image if not specified.
            </param>
            <param name="text">
            Optional. Specifies the text to be drawn. Defaults to "Enter Text" if not specified.
            </param>
            <param name="fontFamily">
            Optional. Specifies the font family for the text to be drawn on the image. Defaults to "Arial" if not specified.
            </param>
            <param name="fontSize">
            Optional. Specifies the font size for the text to be drawn on the image. Defaults to extra-small size if not specified.
            </param>
            <param name="bold">
            Optional. Specifies the bold style for the text to be drawn. Defaults to false if not specified.
            </param>
            <param name="italic">
            Optional. Specifies the italic style for the text to be drawn. Defaults to false if not specified.
            </param>
            <param name="color">
            Optional. Specifies the text color.
            </param>
            <param name="isSelected">Optional. Specifies to show the shape in the selected state. </param> 
            <param name="degree">Optional. Specifies the degree to rotate the shape. </param> 
            <remarks>
            If the given X and Y coordinates are not within the image range, the text is not drawn on the image.
            </remarks>
            <returns>
            A task that completes when the component has finished the action. 
            </returns>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.SelectShapeAsync(System.String)">
            <summary>
            Selects a shape based on the provided shape ID in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <param name="shapeId">
            Specifies the ID of the shape to be selected.
            </param>
            <remarks>
            The ID can be obtained using the public method <see cref="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.GetShapesAsync"/>.
            </remarks>
            <returns>
            A task that completes when the component has finished the action. 
            </returns>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.DeleteShapeAsync(System.String)">
            <summary>
            Selects a shape based on the provided shape ID in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <param name="shapeId">
            Specifies the ID of the shape to be selected.
            </param>
            <remarks>
            The ID can be obtained using the public method <see cref="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.GetShapesAsync"/>.
            </remarks>
            <returns>
            A task that completes when the component has finished the action. 
            </returns>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.GetShapesAsync">
            <summary>
            Gets all the shapes inserted into the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <remarks>
            This method returns all the shapes inserted in this <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </remarks>
            <returns>
            It returns the shape collection as <c>ShapeSettings</c>.
            The available values in a shape setting include height, width, stroke color, fill color, stroke width,
            radius, text, font size, and font style.
            </returns>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.FinetuneImageAsync(Syncfusion.Blazor.ImageEditor.ImageFinetuneOption,System.Int32)">
            <summary>
            Applies color correction or adjustment to an image based on the provided parameters in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <param name="finetuneOption">
            Specifies the type of finetune to be performed on the image. This is an Enum property specified as <see cref="T:Syncfusion.Blazor.ImageEditor.ImageFinetuneOption"/>.
            </param>
            <param name="value">
            Specifies the value to be applied for finetuning the image.
            </param>
            <returns>
            A Task that completes when the component has finished the action.
            </returns>
            <remarks>
            If the given value exceeds the range specified in the <see cref="P:Syncfusion.Blazor.ImageEditor.SfImageEditor.FinetuneSettings"/>, the finetuning will not be performed.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.ApplyImageFilterAsync(Syncfusion.Blazor.ImageEditor.ImageFilterOption)">
            <summary>
            Applies a filter to the image based on the provided parameter in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <param name="imageFilterOption">
            Specifies the type of filter to be applied to the image. This is an Enum property specified as <see cref="T:Syncfusion.Blazor.ImageEditor.ImageFilterOption"/>.
            </param>
            <returns>
            A Task that completes when the component has finished the action.
            </returns>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.UndoAsync">
            <summary>
            Reverses the last action performed by the user in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <returns>
            A Task that completes when the component has finished the undo action.
            </returns>
            <remarks>
            This method can only be performed if the <see cref="P:Syncfusion.Blazor.ImageEditor.SfImageEditor.AllowUndoRedo"/> property is set to true and there is a previous action to undo.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.RedoAsync">
            <summary>
            Redoes the last user action that was undone by the user or the <see cref="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.UndoAsync"/> method in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <returns>
            A Task that completes when the component has finished the redo action.
            </returns>
            <remarks>
            This method can only be performed if the <see cref="P:Syncfusion.Blazor.ImageEditor.SfImageEditor.AllowUndoRedo"/> property is set to true and there is a previous action that was undone.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.GetImageDimensionAsync">
            <summary>
            Gets the image dimension after cropping the image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <returns>
            A <see cref="T:Syncfusion.Blazor.ImageEditor.ImageDimension"/> representing the current position and size of the image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </returns>
            <remarks>
            This method is useful for obtaining the dimensions and position of the cropped image within the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.DrawImageAsync(System.String,System.Double,System.Double,System.Int32,System.Int32,System.Boolean,System.Double,System.Double,System.Boolean)">
            <summary> 
            Draws an image annotation on the image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary> 
            <param name="data">Specifies the URL or image data of the image to be annotated. </param> 
            <param name="x"> Optional. Specifies the x-coordinate of the starting point for the image annotation. Default to center point of the image, if it is not specified. </param> 
            <param name="y"> Optional. Specifies the y-coordinate of the starting point for the image annotation. Default to center point of the image, if it is not specified. </param> 
            <param name="width"> Optional. Specifies the width of the image annotation. Default size is calculated based on the aspect ratio of the image, if it is not specified. </param> 
            <param name="height"> Optional. Specifies the height of the image annotation. Default size is calculated based on the aspect ratio of the image, if it is not specified. </param>
            <param name="isAspectRatio">Optional. If set to true, maintains the image's aspect ratio based on the width value during resizing. Default to true, if it is not specified </param>
            <param name="degree">Optional. Specifies the degree for the image annotation. Default to 0 degree of the image, if it is not specified. </param> 
            <param name="opacity">Optional. Specifies the opacity value for the image. Default to 0 degree of the image, if it is not specified. </param> 
            <param name="isSelected">Optional. Specifies to show the shape in the selected state. </param> 
            <returns>True if the image annotation was successfully drawn; otherwise, false. </returns> 
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.ImageResizeAsync(System.Int32,System.Int32,System.Boolean)">
            <summary> 
            Resize an image by adjusting its dimensions. 
            </summary> 
            <param name="width">The new width of the image. </param> 
            <param name="height">The new height of the image. </param> 
            <param name="isAspectRatio">Optional. If set to true, maintains the image's aspect ratio based on the width value during resizing. Default to true, if it is not specified </param> 
            <returns>True if the resizing operation was successful; otherwise, false. </returns>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.DrawFrameAsync(Syncfusion.Blazor.ImageEditor.FrameType,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,Syncfusion.Blazor.ImageEditor.FrameLineStyle,System.Int32)">
            <summary>
            Draws a customizable frame on the image within the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary> 
            <param name="frameType">Specifies the type of frame to be drawn on the image. </param> 
            <param name="color">Optional. Specify the color of the frame. Defaults to white ("#fff") if not specified. </param> 
            <param name="gradientColor">Optional. Specify the gradient color of the frame. Defaults to empty if not specified. </param> 
            <param name="size">Optional. Specify the size of the frame as a percentage. It can be provided as an integer percentage (e.g., 10). Defaults to 20 if not specified. </param> 
            <param name="inset">Optional. Specify the inset value for line, hook, and inset type frames, as a percentage. It can be provided as an integer percentage (e.g., 10). Defaults to 0 if not specified. </param> 
            <param name="offset">Optional. Specify the offset value for line and inset type frames, as a percentage. It can be provided as an integer percentage (e.g., 10). Defaults to 0 if not specified. </param> 
            <param name="borderRadius">Optional. Specify the border radius for line-type frames, as a percentage. It can be provided as an integer percentage (e.g., 10). Defaults to 0 if not specified. </param> 
            <param name="frameLineStyle"> Optional. Specify the type of line to be drawn for line-type frames. Default to Solid if not specified. </param> 
            <param name="lineCount">Optional. Specify the number of lines for line-type frames. Defaults to 0 if not specified. </param> 
            <returns>A task representing the asynchronous operation that completes when the frame is drawn. </returns> 
            <remarks> 
            This method allows you to add various types of frames to the image using the provided parameters. 
            Depending on the chosen frame type, different customization options are available. 
            Use this method within the context of an <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/> instance. 
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.StraightenImageAsync(System.Int32)">
            <summary>
            Straighten the image clockwise or counter clockwise based on the provided degree in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <param name="degree">
            Specifies the degree to straighten the image.
            The value must be between the range of -45 and +45.
            - If the degree is a positive value, the image is rotated clockwise.
            - If the degree is a negative value, the image is rotated counterclockwise.
            </param>
            <returns>True if the straighten was successfully drawn; otherwise, false. </returns>
            <remarks>
            The degree value should be within the range of -45 to +45 degrees for accurate straightening.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.RefreshAsync">
            <summary>
            The method is used to re-render the image editor.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.UpdateShapeAsync(Syncfusion.Blazor.ImageEditor.ShapeSettings,System.Boolean)">
            <summary> 
            This method is used to update the existing shapes by changing its height, width, color, and font styles in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/> component. 
            </summary> 
            <param name="settings">Specify the new shape settings that will be changed the existing shape�s settings. </param> 
            <param name="isSelected">Optional. Specifies to show the shape in the selected state. </param> 
            <returns> A task that completes when the component has finished the action. </returns> 
            <remarks> 
            The shape setting can be obtained from the public method 'GetShapesAsync'. 
            This method is used to change all the settings including height, width, color, font related changes to the existing shape based on the available shape id in the shape setting. 
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.CloneShapeAsync(System.String)">
             <summary> 
             Duplicates a shape based on the given shape ID in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
             </summary> 
             <param name="shapeId">Specify the ID of the shape to be cloned. </param> 
            <remarks> 
             The ID can be obtained from the public method 'GetShapesAsync'. 
            </remarks>
             <returns>A task that completes when the component has finished the clone action. </returns> 
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.EnableTextEditingAsync">
            <summary> 
            Enable text area editing in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary> 
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.CanUndoAsync">
            <summary> 
            Specifies if it's possible to undo the last recent action made in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary>
            /// /// <returns>
            A Task that returns bool when it has finished.
            </returns>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.CanRedoAsync">
            <summary> 
            Specifies if it's possible to redo the last recent action made in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary>
            /// /// <returns>
            A Task that returns bool when it has finished.
            </returns>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.GetImageFilterAsync(Syncfusion.Blazor.ImageEditor.ImageFilterOption)">
            <summary>
            Update filter to the canvas in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <param name="type">Specifies the filter options to the image.</param>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.ApplyAsync">
            <summary> 
            Applies the operations performed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>, such as annotation drawings. 
            </summary> 
            <returns> 
            A Task that represents the asynchronous operation of applying changes to the image. The task completes when the component has finished the action. 
            </returns> 
            <remarks> 
            This method applies the changes after enabling annotation drawings. It ensures that the drawn annotations are applied to the image. 
            </remarks> 
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.DiscardAsync">
            <summary> 
            Discards the operations performed in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>, such as annotation drawings. 
            </summary> 
            <returns> 
            A Task that represents the asynchronous operation of discarding changes made to the image. The task completes when the component has finished the action. 
            </returns> 
            <remarks> 
            This method discards the actions performed after enabling annotation drawings, ensuring that the drawn annotations are not applied to the image.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.EnableActiveAnnotationAsync(Syncfusion.Blazor.ImageEditor.ShapeType)">
            <summary> 
            Activates the specified annotation type for drawing in the Image Editor. 
            </summary> 
            <param name="shapeType">Specifies the type of shape to be enabled for drawing. </param> 
            <remarks> 
            This method allows users to draw shapes on the image in the Image Editor.  
            Once a shape type is enabled, users can continue drawing that shape until the drawing option is disabled. 
            </remarks> 
            <returns>void</returns>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.DisableActiveAnnotationAsync">
            <summary> 
            Deactivates the current annotation state, ending shape drawing in the Image Editor. 
            </summary> 
            <remarks> 
            This method deactivates the shape drawing option in the Image Editor.  
            When disabled, users will not be able to draw shapes until the drawing option is re-enabled. 
            </remarks> 
            <returns>void</returns>
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.BringToFrontAsync(System.String)">
             <summary> 
             Moves a shape to ahead of all the shapes based on the given shape ID in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
             </summary> 
             <param name="shapeId">Specify the ID of the shape to be moved.  
             </param> 
            <remarks> 
             The ID can be obtained from the public method 'GetShapesAsync'. 
            </remarks> 
             <returns>A task that completes when the component has finished the move action. 
             </returns> 
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.BringForwardAsync(System.String)">
             <summary> 
             Moves a shape to ahead of one shape based on the given shape ID in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.  
             </summary> 
             <param name="shapeId">Specify the ID of the shape to be moved.  
             </param> 
            <remarks> 
             The ID can be obtained from the public method 'GetShapesAsync'. 
            </remarks> 
             <returns>A task that completes when the component has finished the move action. 
             </returns>  
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.SendToBackAsync(System.String)">
             <summary> 
             Moves a shape to behind all the other shapes based on the given shape ID in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
             </summary> 
             <param name="shapeId">Specify the ID of the shape to be moved.  
             </param> 
            <remarks> 
             The ID can be obtained from the public method 'GetShapesAsync'. 
            </remarks> 
             <returns>A task that completes when the component has finished the move action. 
             </returns>  
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.SendBackwardAsync(System.String)">
             <summary> 
             Moves a shape to behind one shape based on the given shape ID in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
             </summary> 
             <param name="shapeId">Specify the ID of the shape to be moved.  
             </param> 
            <remarks> 
             The ID can be obtained from the public method 'GetShapesAsync'. 
            </remarks> 
             <returns>A task that completes when the component has finished the move action. 
             </returns> 
        </member>
        <member name="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.ClearImageAsync">
            <summary> 
            Clears the loaded image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.  
            </summary> 
            <returns> 
            A Task representing the asynchronous operation of clearing the image. It completes when the component has finished the action. 
            </returns> 
            <remarks> 
            This method clears the loaded image and updated the component user interface to its initial state (The initial user interface without loading image). 
            </remarks>  
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ImageEditorToolbarItemModel">
            <summary>
            A class that represents the item of toolbar component.
            </summary>
            <remarks>
            This class is inherit from Toolbar component's "ItemModel" property and it is used to render icon only, text only, icon and text toolbar item by specifying value to corresponding property.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorToolbarItemModel.Name">
            <summary>
            Gets or sets the name of the toolbar item.
            </summary>
            <value>
            Accepts a string value. The default value is <c>String.Empty</c>.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ImageFinetuneValue">
            <summary>
            Represents the settings for finetune an image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <remarks>
            The image finetune value include minimum, maximum, and default values of the finetune options. 
            Use the <see cref="P:Syncfusion.Blazor.ImageEditor.ImageFinetuneValue.Min"/>, <see cref="P:Syncfusion.Blazor.ImageEditor.ImageFinetuneValue.Max"/>, and <see cref="P:Syncfusion.Blazor.ImageEditor.ImageFinetuneValue.DefaultValue"/> properties to specify the minimum, maximum, and default values for each finetune setting.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageFinetuneValue.Min">
            <summary>
            Gets or sets the minimum value of the finetune settings in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value that specifies a minimum value for the finetune settings.
            </value>
            <remarks>
            This property is used to configure the minimum value of the finetune settings, such as brightness, contrast, hue, saturation, exposure, opacity, and blur.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageFinetuneValue.Max">
            <summary>
            Gets or sets the maximum value of the finetune settings in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value that specifies a maximum value for the finetune settings.
            </value>
            <remarks>
            This property is used to configure the maximum value of the finetune settings, such as brightness, contrast, hue, saturation, exposure, opacity, and blur.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageFinetuneValue.DefaultValue">
            <summary>
            Gets or sets the default value of the finetune settings in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value that specifies a default value for the finetune settings.
            </value>
            <remarks>
            This property is used to configure the default value of the finetune settings, such as brightness, contrast, hue, saturation, exposure, opacity, and blur.
            </remarks>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ImageDimension">
            <summary>
            Represents the dimension of an image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <remarks>
            The <see cref="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.GetImageDimensionAsync"/> method is used to get the image as "Dimension". 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageDimension.X">
            <summary>
            Gets or sets the x coordinate of an image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value that specifies the x-coordinates.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageDimension.Y">
            <summary>
            Gets or sets the y coordinate of an image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value that specifies the y-coordinates.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageDimension.Width">
            <summary>
            Gets or sets the width of an image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value that specifies the width of an image.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageDimension.Height">
            <summary>
            Gets or sets the height of an image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value that specifies the height of an image.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ImageEditorPoint">
            <summary>
            Represents the x and y coordinate on an image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <remarks>
            Use this property to specify <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorZoomSettings.ZoomPoint"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorPoint.X">
            <summary>
            Gets or sets the x coordinate in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value that specifies the x-coordinates.
            </value>
            <remarks>
            This property is used to get the coordinates of the current mouse pointer in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorPoint.Y">
            <summary>
            Gets or sets the y coordinate in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value that specifies the y-coordinates.
            </value>
            <remarks>
            This property is used to get the coordinates of the current mouse pointer in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </remarks>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ShapeSettings">
            <summary>
            Represents the settings of a shape in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <remarks>
            The <see cref="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.GetShapesAsync"/> method is used to get the shapes settings to perform <see cref="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.SelectShapeAsync(System.String)"/>
            and <see cref="M:Syncfusion.Blazor.ImageEditor.SfImageEditor.DeleteShapeAsync(System.String)"/>.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeSettings.ID">
            <summary>
            Gets or sets the id of the shape in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A string value that specifies the id of the shape.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeSettings.Type">
            <summary>
            Gets or sets the type of the shape in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An Enum value that specifies the type of the shape such as Rectangle, Ellipse, Line, Arrow, Text,
            and Freehand Draw.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeSettings.StartX">
            <summary>
            Gets or sets the x-coordinate of the start point in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value that specifies the x-coordinate of the start point.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeSettings.StartY">
            <summary>
            Gets or sets the y-coordinate of the start point in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value that specifies the y-coordinate of the start point.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeSettings.Width">
            <summary>
            Gets or sets the width of the shape in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value that specifies the width of the shape.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeSettings.Height">
            <summary>
            Gets or sets the height of the shape in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value that specifies the height of the shape.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeSettings.StrokeColor">
            <summary>
            Gets or sets the stroke color of the shape in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A string value that specifies the stroke color of the shape.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeSettings.FillColor">
            <summary>
            Gets or sets the fill color of the shape in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A string value that specifies the fill color of the shape.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeSettings.StrokeWidth">
            <summary>
            Gets or sets the stroke width of the shape in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A int value that specifies the stroke width of the shape.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeSettings.Radius">
            <summary>
            Gets or sets the radius of the shape in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value that specifies the radius of the shape.
            </value>
            <remarks>
            This property is available only when the ellipse shape is processed.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeSettings.Length">
            <summary>
            Gets or sets the length of the shape in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value that specifies the length of the shape.
            </value>
            <remarks>
            This property is available only when the line and arrow shape is processed.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeSettings.Text">
            <summary>
            Gets or sets the text content of the text shape in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A string value that specifies the text content of the text shape.
            </value>
            <remarks>
            This property is available only when the text shape is processed.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeSettings.FontSize">
            <summary>
            Gets or sets the font size of the text shape in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value that specifies the font size of the text shape.
            </value>
            <remarks>
            This property is available only when the text shape is processed.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeSettings.FontFamily">
            <summary>
            Gets or sets the font family of the text shape in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A string value that specifies the font family of the text shape.
            </value>
            <remarks>
            This property is available only when the text shape is processed.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeSettings.FontStyle">
            <summary>
            Gets or sets the font styles of the text shape in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A string array value that specifies the font styles of the text shape.
            </value>
            <remarks>
            This property is available only when the text shape is processed.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeSettings.Color">
            <summary>
            Gets or sets the font color of the text shape in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A string value that specifies the font color of the text shape.
            </value>
            <remarks>
            This property is available only when the text shape is processed.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeSettings.Points">
            <summary>
            Gets or sets the points of the freehand draw in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            An <see cref="T:Syncfusion.Blazor.ImageEditor.ImageEditorPoint"/> array value that specifies the points to be freehand drawn.
            </value>
            <remarks>
            This property is available only when the freehand annotation is processed.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeSettings.ImageData">
            <summary> 
            Returns the URL or image data associated with the image annotation in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary> 
            <value>The URL or image data of the image annotation. The default value is null. </value> 
            <remarks> 
            This property is relevant only for image annotations. It holds the URL or image data that corresponds to the image annotation within the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. Other annotation types such as Rectangle, 
              Line, Ellipse, Path, and Arrow do not utilize this property and will have a null value. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeSettings.Degree">
            <summary>
            Gets or sets the degree of rotated shape in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value that specifies the degree of rotated shape.
            </value>
            <remarks> 
            This property is available for the shapes including rectangle, ellipse, and image and for the other shapes the value should be null. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeSettings.Opacity">
            <summary>
            Gets or sets the opacity value of the image shape in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value that specifies the opacity value of the image shape.
            </value>
            <remarks> 
            This property is available only for the image shape and for the other shapes it should be null. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeSettings.RadiusX">
            <summary>
            Gets or sets the width radius of the ellipse shape in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value that specifies the width radius of the ellipse shape.
            </value>
            <remarks>
            This property is available for the ellipse shape and for the other shapes the value should be null.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeSettings.RadiusY">
            <summary>
            Gets or sets the height radius of the ellipse shape in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value that specifies the height radius of the ellipse shape.
            </value>
            <remarks>
            This property is available for the ellipse shape and for the other shapes the value should be null. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeSettings.EndX">
            <summary>
            Gets or sets the end X position of the line / arrow shape in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value that specifies the end X position of the line / arrow shape.
            </value>
            <remarks>
            This property is available for the arrow and line shapes and for the other shapes the value should be null. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeSettings.EndY">
            <summary>
            Gets or sets the end Y position of the line / arrow shape in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value that specifies the end Y position of the line / arrow shape.
            </value>
            <remarks>
            This property is available for the arrow and line shapes and for the other shapes the value should be null. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeSettings.ArrowHead">
            <summary>
            Gets or sets the head type of an arrow shape in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A <see cref="T:Syncfusion.Blazor.ImageEditor.ImageEditorArrowHeadType"/> value that specifies head type of arrow shape.
            </value>
            <remarks>
            This property is available for the arrow shape and for the other shapes the value should be null. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeSettings.ArrowTail">
            <summary>
            Gets or sets the tail type of an arrow shape in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A <see cref="T:Syncfusion.Blazor.ImageEditor.ImageEditorArrowHeadType"/> value that specifies tail type of arrow shape.
            </value>
            <remarks>
            This property is available for the arrow shape and for the other shapes the value should be null. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ShapeSettings.Index">
            <summary> 
            Gets or sets the index of the shape to be placed on an image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary> 
            <value> 
            An integer value that specifies the index of the shape to be placed on the image. 
            </value> 
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.CropSelectionSettings">
            <summary>
            Represents the settings of a selection in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <remarks>
            This setting is used in the events <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.OnSelectionResizeStart"/> and <see cref="P:Syncfusion.Blazor.ImageEditor.ImageEditorEvents.OnSelectionResizeEnd"/> event.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.CropSelectionSettings.Type">
            <summary>
            Gets or sets the type of the selection in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A string value that specifies the type of selection such as Custom, Circle, or ratio based selection.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.CropSelectionSettings.StartX">
            <summary>
            Gets or sets the x-coordinate of the start point of a selection in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value that specifies the x-coordinate of the start point.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.CropSelectionSettings.StartY">
            <summary>
            Gets or sets the y-coordinate of the start point of a selection in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value that specifies the x-coordinate of the start point.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.CropSelectionSettings.Width">
            <summary>
            Gets or sets the width of the selection in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value that specifies the width of the selection.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.CropSelectionSettings.Height">
            <summary>
            Gets or sets the height of the selection in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.
            </summary>
            <value>
            A double value that specifies the height of the selection.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ImageFrameSettings">
            <summary> 
            Represents the settings of a frame in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary> 
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageFrameSettings.Type">
            <summary> 
            Gets or sets the type of frame in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary> 
            <value> 
            An enumeration value that specifies the type of the frame, such as None, Mat, Bevel, Line, Inset, and Hook. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageFrameSettings.Color">
            <summary> 
            Gets or sets the color of the frame in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary> 
            <value> 
            A string value specifying the color of the frame. The color can be provided in various formats, including named colors ("red", "blue") and hexadecimal notation ("#RRGGBB").  
            The default frame color is typically white. 
            </value> 
            <remarks> 
            The frame color is used to define the outline color of the frame drawn on an image using the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. It helps distinguish the frame from the content of the image. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageFrameSettings.GradientColor">
            <summary> 
            Gets or sets the gradient color of the frame in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary> 
            <value> 
            A string value specifying the gradient color of the frame. The color can be provided in various formats, including named colors ("red", "blue") and hexadecimal notation ("#RRGGBB"). 
            The default gradient color is typically absent, resulting in a solid color frame. 
            </value> 
            <remarks> 
            The gradient color can be used to give the frame a more dynamic and visually appealing appearance. When set, the frame will transition from the primary frame color to the gradient color, creating a gradient effect. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageFrameSettings.Size">
            <summary> 
            Gets or sets the size of the frame as a percentage in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary> 
            <value> 
            An integer value specifying the size of the frame as a percentage. The size value indicates how much of the image's dimensions the frame occupies.  
            It can be provided as an integer percentage (e.g., 20). 
            The default frame size is often set to a reasonable percentage to maintain a balanced appearance. 
            </value> 
            <remarks> 
            Adjusting the frame size allows you to control the width or thickness of the frame drawn on an image using the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            Smaller percentages result in thinner frames, while larger percentages result in thicker frames. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageFrameSettings.Inset">
            <summary> 
            Gets or sets the inset value of the frame as a percentage in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary>
            <value> 
            An integer value specifying the inset of the frame as a percentage. 
            The inset value determines how far the frame is drawn inside the image boundaries.  
            It can be provided as an integer percentage (e.g., 10). The default inset value is often set to zero. 
            </value> 
            <remarks> 
            The inset value is applicable only to specific frame types such as Line, Inset, and Hook. 
            It helps create an internal margin between the frame and the image's edges. For other frame types, inset is not used. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageFrameSettings.Offset">
            <summary> 
            Gets or sets the offset value of the frame as a percentage in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary> 
            <value> 
            An integer value that specifies the offset of the frame as a percentage. 
            The offset determines how far the line is positioned from another line in the image's boundaries. 
            It can be provided as an integer percentage (e.g., 5). The default offset value is typically zero. 
            </value> 
            <remarks> 
            The offset value is relevant for specific frame types such as Line and Inset. 
            It allows you to control the position of the frame within the image. 
            The offset is measured from the edge where the frame is applied towards the center of the image. Other frame types do not use the offset property. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageFrameSettings.BorderRadius">
            <summary> 
            Gets or sets the border radius value of the frame as a percentage in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary> 
            <value> 
            An integer value that specifies the border radius of the frame. The border radius controls the curvature of the frame's corners or edges. 
            It can be provided as an integer percentage (e.g., 10). The default border radius is typically zero, resulting in sharp corners. 
            </value> 
            <remarks> 
            The BorderRadius value is applicable only to specific frame types such as Line and Bevel. 
            It allows you to round the corners or edges of the frame, giving it a softer appearance. For other frame types, the border radius property is not used. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageFrameSettings.FrameLineStyle">
            <summary> 
            Gets or sets the type of lines to be drawn for line-type frames on the image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary> 
            <value> 
            A FrameLineStyle enumeration value that specifies the type of line to be applied as a frame. The default value is Solid. 
            </value> 
            <remarks> 
            The FrameLineStyle value is applicable only to Line frames. It allows you to customize the appearance of the lines used to create the frame. Different line types can give your frame a distinct visual style. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageFrameSettings.LineCount">
            <summary> 
            Gets or sets the number of lines to be drawn on the image in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>. 
            </summary> 
            <value> 
            An integer value that specifies the number of lines to be applied as a frame. The lines are drawn parallel to the image edges.  
            Each line contributes to the frame's appearance, giving it a unique style. The default value is typically zero, resulting in no additional lines. 
            </value> 
            <remarks> 
            The LineCount value is applicable only to Line frames. It enables you to create a distinctive frame effect by adding multiple parallel lines around the image's edges. 
            </remarks> 
        </member>
        <member name="T:Syncfusion.Blazor.ImageEditor.ImageEditorDropDownItemModel">
            <summary> 
            Represents the items for the dropdown button to be rendered in the <see cref="T:Syncfusion.Blazor.ImageEditor.SfImageEditor"/>.  
            </summary> 
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorDropDownItemModel.Value">
            <summary> 
            Gets or sets the value that indicates the text content dropdown button item. 
            </summary> 
            <value> 
            A string value representing the text of the dropdown button popup item. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.ImageEditor.ImageEditorDropDownItemModel.Text">
            <summary> 
            Gets or sets the value that indicates the value of the dropdown button item. 
            </summary> 
            <value> 
            A string value that represents the dropdown popup item value. 
            </value>
        </member>
    </members>
</doc>
