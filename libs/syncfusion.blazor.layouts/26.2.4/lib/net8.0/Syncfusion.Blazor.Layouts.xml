<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.Blazor.Layouts</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.Blazor.Layouts.DashboardLayoutEvents">
            <summary>
            Specifies the DashboardLayout events.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.Parent">
            <summary>
            DashboardLayout component reference.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.Changed">
            <summary>
            Gets or sets an event callback that is raised when the panel's position are changed.
            </summary>
            <value>
            An event callback function.
            </value>
            <remarks>
            You can capture this event to detect the panel position changes.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.Created">
            <summary>
            Gets or sets an event callback that is raised when the DashboardLayout is created.
            </summary>
            <value>
            An event callback function.
            </value>
            <remarks>
            You can update panel data or perform required action when the component is created.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.Destroyed">
            <summary>
            Gets or sets an event callback that is raised when the DashboardLayout is destroyed.
            </summary>
            <value>
            An event callback function.
            </value>
            <remarks>
             Required actions can be performed once the component is destroyed.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.PanelDragging">
            <summary>
            Gets or sets an event callback that is raised when a panel is dragged continuously.
            </summary>
            <value>
            An event callback function.
            </value>
            <remarks>
            Helps to identify the panel drag action.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.OnDragStart">
            <summary>
            Gets or sets an event callback that is raised when a panel is about to drag.
            </summary>
            <value>
            An event callback function.
            </value>
            <remarks>
            Helps to identify that the panel drag action is started.Panel drag can be prevented in required cases through this event.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.OnDragStop">
            <summary>
            Gets or sets an event callback that is raised when a dragged panel is dropped.
            </summary>
            <value>
            An event callback function.
            </value>
            <remarks>
            Helps to identify that the panel drag action is stopped.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.Resizing">
            <summary>
            Gets or sets an event callback that is raised when a panel is being resized continuously.
            </summary>
            <value>
            An event callback function.
            </value>
            <remarks>
            Helps to identify that the panel is being resized.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.OnResizeStart">
            <summary>
            Gets or sets an event callback that is raised when a panel is started to resize.
            </summary>
            <value>
            An event callback function.
            </value>
            <remarks>
            Helps to identify that the panel resize action is started.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.OnResizeStop">
            <summary>
            Gets or sets an event callback that is raised when a panel resize ends.
            </summary>
            <value>
            An event callback function.
            </value>
            <remarks>
            Helps to identify that the panel resize action is stopped.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.OnWindowResize">
            <summary>
            Gets or sets an event callback that is raised when re-sizing the window.
            </summary>
            <value>
            An event callback function.
            </value>
            <remarks>
            Helps to identify that the window resize action takes place. Panels can be refreshed during window resize through this event callback.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.DashboardLayoutEvents.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.DashboardLayoutPanel">
            <summary>
            Specifies the DashboardLayoutPanel.
            </summary>
            <summary>
            DashboardLayout panel.
            </summary>
            <summary>
            Defines the DashboardLayout panel.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.GetIdValues(Syncfusion.Blazor.Layouts.DashboardLayoutPanel)">
            <summary>
            Get the panel id values.
            </summary>
            <param name="panel">panel.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.OnInitializedAsync">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.OnParametersSetAsync">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.ChildContent">
            <summary>
            Defines the ChildContent of the panels.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.HeaderTemplate">
            <summary>
            Gets or sets the HeaderTemplate of the panels.
            </summary>
            <value>
            The header template content. The default value in <c>null</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.ContentTemplate">
            <summary>
            Gets or sets the ContentTemplate of the panels.
            </summary>
            <value>
            The panel template content. The default value in <c>null</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.AllowDragging">
            <summary>
            Gets or sets the dragging panel.
            </summary>
            <value>
            `false` if dragging must be restricted. The default value in <c>true</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Col">
            <summary>
            Defines the column value where the panel to be placed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Column">
            <summary>
            Gets or sets the column value where the panel to be placed.
            </summary>
            <value>
            Accepts an integer value.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Content">
            <summary>
            Gets or sets the value that should be displayed as the panel's content.
            </summary>
            <value>
            The panel content. The default value in <c>null</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.CssClass">
            <summary>
            Gets or sets the CSS class name that can be appended with each panel element.
            </summary>
            <value>
            Custom class names can be added. The default value in <c>String.Empty</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Enabled">
            <summary>
            Gets or sets whether the panel should be enabled or not.
            </summary>
            <value>
            `false` if the panels must be disabled. The default value in <c>true</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Header">
            <summary>
            Gets or sets the value that should be displayed as the panel's header.
            </summary>
            <value>
            The header content. The default value in <c>null</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Id">
            <summary>
            Gets or sets the id of the panel.
            </summary>
            <value>
            The default value in <c>String.Empty</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.MaxSizeX">
            <summary>
            Gets or sets the maximum width of the panel in cells count.
            </summary>
            <value>
            The default value in <c>null</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.MaxSizeY">
            <summary>
            Gets or sets the maximum height of the panel in cells count.
            </summary>
            <value>
            The default value in <c>null</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.MinSizeX">
            <summary>
            Gets or sets the minimum width of the panel in cells count.
            </summary>
            <value>
            The default value in <c>1</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.MinSizeY">
            <summary>
            Gets or sets the minimum height of the panel in cells count.
            </summary>
            <value>
            The default value in <c>1</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.Row">
            <summary>
            Gets or sets a row value where the panel should be placed.
            </summary>
            <value>
            Accepts an integer value.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.SizeX">
            <summary>
            Gets or sets the width of the panel in the layout in cells count.
            </summary>
            <value>
            The default value in <c>1</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.SizeY">
            <summary>
            Gets or sets the height of the panel in the layout in cells count.
            </summary>
            <value>
            The default value in <c>1</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanel.ZIndex">
            <summary>
            Gets or sets the z-index of the panel.
            </summary>
            <value>
            The default value in <c>1000</c>.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.DashboardLayoutPanels">
            <summary>
            Specifies the DashboardLayoutPanels.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanels.ChildContent">
            <summary>
            Specifies the child content.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DashboardLayoutPanels.Panels">
            <summary>
            Specifies the Panels property.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.DashboardLayoutPanels.OnInitializedAsync">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.DashboardLayoutPanels.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.ResizableHandle">
            <summary>
            Specifies the dashboard panel’s resize handle position in the <see cref="T:Syncfusion.Blazor.Layouts.SfDashboardLayout"/> component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.ResizableHandle.SouthEast">
            <summary>
            Specifies south-east direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.ResizableHandle.SouthWest">
            <summary>
            Specifies south-west direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.ResizableHandle.NorthEast">
            <summary>
            Specifies north-east direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.ResizableHandle.NorthWest">
            <summary>
            Specifies north-west direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.ResizableHandle.North">
            <summary>
            Specifies north direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.ResizableHandle.South">
            <summary>
            Specifies south direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.ResizableHandle.East">
            <summary>
            Specifies east direction.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.ResizableHandle.West">
            <summary>
            Specifies west direction.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.ResizeArgs">
            <summary>
            Defines the resize event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeArgs.Element">
            <summary>
            Gets the current <see cref="T:Microsoft.AspNetCore.Components.ElementReference"/> target being resized.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeArgs.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
            <value>
            <c>true</c>, if the event was triggered by user interaction. Otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeArgs.Name">
            <summary>
            Gets or sets the Event name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeArgs.Id">
            <summary>
            Gets or sets the resizing panel id.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.ChangeEventArgs">
            <summary>
            Defines the change event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ChangeEventArgs.AddedPanels">
            <summary>
            Gets or sets the panel added to the DashboardLayout.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ChangeEventArgs.ChangedPanels">
            <summary>
            Gets or sets the model values of the position changed panels.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ChangeEventArgs.IsInteracted">
            <summary>
            If the event is triggered by interaction, it returns true. Otherwise, it returns false.
            </summary>
            <value>
            <c>true</c>, if the event was triggered by user interaction. Otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ChangeEventArgs.RemovedPanels">
            <summary>
            Gets or sets the panels removed from the DashboardLayout.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.DragStartArgs">
            <summary>
            Defines the dragstart event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DragStartArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to prevent the current drag action of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DragStartArgs.Element">
            <summary>
            Gets the current <see cref="T:Microsoft.AspNetCore.Components.ElementReference"/> element being dragged.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DragStartArgs.Id">
            <summary>
            Gets the dragging panel id.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.DragStopArgs">
            <summary>
            Defines the dragstop event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DragStopArgs.Element">
            <summary>
            Gets the current <see cref="T:Microsoft.AspNetCore.Components.ElementReference"/> element being dragged.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DragStopArgs.Id">
            <summary>
            Gets the dragged panel id.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.DraggedEventArgs">
            <summary>
            Defines the Drag event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DraggedEventArgs.Element">
            <summary>
            Gets the current <see cref="T:Microsoft.AspNetCore.Components.ElementReference"/> element being dragged.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DraggedEventArgs.Target">
            <summary>
            Gets the <see cref="T:Microsoft.AspNetCore.Components.ElementReference"/> element below the cell element being dragged.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.DraggedEventArgs.Id">
            <summary>
            Gets the dragging panel id.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.PanelModel">
            <summary>
            Defines the PanelModel class for Panel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.AllowDragging">
            <summary>
            Gets or sets the dragging value of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.Column">
            <summary>
            Gets or sets the column value where the panel is to be placed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.Content">
            <summary>
            Gets or sets the template value that should be displayed as the panel's content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.CssClass">
            <summary>
            Gets or sets the CSS class name that can be appended with each panel element. This is used to customize existing styles of panel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.Enabled">
            <summary>
            Gets or sets whether the panel should be enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.Header">
            <summary>
            Gets or sets the template value that should be displayed as the panel's header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.Id">
            <summary>
            Gets or sets the id of the panel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.MaxSizeX">
            <summary>
            Gets or sets the maximum width of the panel in cells count.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.MaxSizeY">
            <summary>
            Gets or sets the maximum height of the panel in cells count.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.MinSizeX">
            <summary>
            Gets or sets the minimum width of the panel in cells count.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.MinSizeY">
            <summary>
            Gets or sets the minimum height of the panel in cells count.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.Row">
            <summary>
            Gets or sets a row value where the panel should be placed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.SizeX">
            <summary>
            Gets or sets the width of the panel in the layout in cells count.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.SizeY">
            <summary>
            Gets or sets the height of the panel in the layout in cells count.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelModel.ZIndex">
            <summary>
            Gets or sets the z-index of the panel.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.PanelHeaderModel">
            <summary>
            Defines the id and header height of the panel.
            </summary>
            <exclude/>  
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelHeaderModel.Id">
            <summary>
            Gets or sets the panel id.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanelHeaderModel.Height">
            <summary>
            Gets or sets the panel header height.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.InitialClientModel">
            <summary>
            Defines the parent element offset, media query and, panel model values.
            </summary>
            <exclude/>  
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.InitialClientModel.ParentOffset">
            <summary>
            Gets or sets the parent element offset height and width.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.InitialClientModel.EnableMediaQuery">
            <summary>
            Gets or sets whether the media query is enabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.InitialClientModel.PanelHeaderModel">
            <summary>
            Gets or sets the id and header height of the panel element.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.SfDashboardLayout">
            <summary>
            The DashboardLayout is a grid structured layout component, that helps to create a dashboard with panels.
            Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,
            that allows users to easily place the panels at a desired position within the grid layout.
            </summary>
            <summary>
            Specifies the DashboardLayout component.
            </summary>
            <summary>
            Specifies the DashboardLayout component.
            </summary>
            <summary>
            Specifies the DashboardLayout component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.IsAddPanelCalled">
            <summary>
            protected variable declared.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.UpdatePanelContentHeight(Syncfusion.Blazor.Layouts.PanelModel[],System.Collections.Generic.List{Syncfusion.Blazor.Layouts.PanelHeaderModel})">
            <summary>
            Update panel position and content height after collision calculation.
            </summary>
            <param name="updatedValues">UpdatedValues.</param>
            <param name="contentId">contentId.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.UpdatedPanelsValues(Syncfusion.Blazor.Layouts.PanelModel[])">
            <summary>
            Update panel position after collision calculation.
            </summary>
            <param name="updatedValues">UpdatedValues.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.SetDragPanelHeight(System.Int32,System.Int32,System.Int32)">
            <summary>
            Update Dashboard height on dragging the panels.
            </summary>
            <param name="row"> Defines the row values.</param>
            <param name="sizeY">Defines the sizeY values.</param>
            <param name="addRows">Increments the row value.</param>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.UpdateMaximumRow(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Update Dashboard height and max row value after dropping of panels.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.CalculateSize(System.Int32[],System.Boolean,System.Boolean,System.Collections.Generic.List{Syncfusion.Blazor.Layouts.PanelHeaderModel})">
            <summary>
            Update element offset values.
            </summary>
            <param name="offsets"> Defines the Offset values.</param>
            <param name="isMediaquery">Defines the isMediaquery variable.</param>
            <param name="isResized">Defines the isResized variable.</param>
            <param name="contentId">Defines the contentId of panel.</param>
            <exclude/>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.TriggerResizeStart(System.Boolean,System.String,System.String)">
            <summary>
            Trigger Resize Event for Dashboard component.
            </summary>
            <exclude/>
            <param name="isInteracted">Defines the isInteracted variable.</param>
            <param name="idValue">Defines the idValue.</param>
            <param name="name">Defines the name attribute.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.TriggerDragStart(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            Trigger Drag start Event for dashboard component.
            </summary>
            <exclude/>
            <param name="idValue">Defines the idValue.</param>
            <param name="row"> Defines the row values.</param>
            <param name="sizeY">Defines the sizeY values.</param>
            <param name="addRows">Increments the row value.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.TriggerDragStop(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Trigger Resizing Event for dashboard component.
            </summary>
            <param name="idValue">Defines the idValue.</param>
            <param name="changedId">Defines the changedId.</param>
            <exclude/>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.TriggerDraging(System.String)">
            <summary>
            Trigger Dragging Event for dashboard component.
            </summary>
            <exclude/>
            <param name="idValue">Specifies the idValue.</param>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.TriggerChange(System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            Trigger change Event for Dashboard component.
            </summary>
            <param name="isInteracted">Specifies the isInteracted attribute.</param>
            <param name="changedId">Specifies the changedId of panel.</param>
            <exclude/>
            <returns>="Task".</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.GetIdValues(Syncfusion.Blazor.Layouts.DashboardLayoutPanel)">
            <summary>
            Update the id values for panels.
            </summary>
            <param name="panel">Specifies the panel.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.OnInitializedAsync">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.OnParametersSetAsync">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.OnAfterScriptRendered">
            <inheritdoc/>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.ID">
            <summary>
            Gets or sets the id attribute for the DashboardLayout element.
            </summary>
            <value>
            Accepts the string value.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.ChildContent">
            <summary>
            Specifies the child content.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.AllowDragging">
            <summary>
            Gets or sets a value that specifies whether the DashboardLayout permits the reordering of panels through dragging.
            </summary>
            <value>
            <c>true</c>, if the drag option can be enabled. Otherwise, <c>false</c>. The default value is <c>true</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.AllowFloating">
            <summary>
            Gets or sets a value that specifies whether the DashboardLayout panels must fill the available cells while dragging or resizing.
            </summary>
            <value>
            <c>true</c>, if the floating option can be enabled. Otherwise, <c>false</c>. The default value is <c>true</c>.
            </value>
            <remarks>
             If <see cref="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.AllowFloating" /> is set to true, then the DashboardLayout will automatically move the panels upwards to fill the empty available cells while dragging or resizing the panels.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.AllowResizing">
            <summary>
            Gets or sets a value that specifies whether the panels in DashboardLayout can be resized.
            </summary>
            <value>
            <c>true</c>, if the resizing option can be enabled. Otherwise, <c>false</c>. The default value is <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.CellAspectRatio">
            <summary>
            Gets or sets the cell aspect ratio of the panel.
            </summary>
            <value>
            A double value that representing the cell aspect ratio of panel in component. The default value is <c>1</c>.
            </value>
            <example>
            <code><![CDATA[
            <SfDashboardLayout Columns="5" CellAspectRatio="2">
              <DashboardLayoutPanels>
               <DashboardLayoutPanel Id="one" Column="0" Row="0">
                   <HeaderTemplate>Panel 1</HeaderTemplate>
               </DashboardLayoutPanel>
               <DashboardLayoutPanel Id="two" Row="1" Column="0" SizeX=1 SizeY=2>
                   <HeaderTemplate>Panel 2</HeaderTemplate>
               </DashboardLayoutPanel>
             </DashboardLayoutPanels>
            </SfDashboardLayout>      
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.CellSpacing">
            <summary>
            Gets or sets the spacing between the panels.
            </summary>
            <value>
            An array of double values that defines the spacing between panels of component. The default value is <c>{5, 5}</c>.
            </value>
            <example>
            <code><![CDATA[
            <SfDashboardLayout Columns="5" CellSpacing="@(new double[]{20 ,20 })">
              <DashboardLayoutPanels>
               <DashboardLayoutPanel Id="one" Column="0" Row="0">
                   <HeaderTemplate>Panel 1</HeaderTemplate>
               </DashboardLayoutPanel>
               <DashboardLayoutPanel Id="two" Row="1" Column="0" SizeX=1 SizeY=2>
                   <HeaderTemplate>Panel 2</HeaderTemplate>
               </DashboardLayoutPanel>
             </DashboardLayoutPanels>
            </SfDashboardLayout>      
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.Columns">
            <summary>
            Gets or sets a value that determines the number of columns to be created in the DashboardLayout.
            </summary>
            <value>
            Accepts an integer value that representing the number of columns in component. The default value is <c>1</c>.
            </value>
            <example>
            <code><![CDATA[
            <SfDashboardLayout Columns="5">
              <DashboardLayoutPanels>
               <DashboardLayoutPanel Id="one" Column="0" Row="0">
                   <HeaderTemplate>Panel 1</HeaderTemplate>
               </DashboardLayoutPanel>
               <DashboardLayoutPanel Id="two" Row="1" Column="0" SizeX=1 SizeY=2>
                   <HeaderTemplate>Panel 2</HeaderTemplate>
               </DashboardLayoutPanel>
             </DashboardLayoutPanels>
            </SfDashboardLayout>      
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.DraggableHandle">
            <summary>
            Gets or sets the draggable handle selector which will act as dragging handler for the panels.
            You can enable dragging for a particular element of panel using this property.
            </summary>
            <value>
            Accepts the string value.
            </value>
            <example>
            <code><![CDATA[
            <SfDashboardLayout Columns="5" DraggableHandle=".e-panel-header">
              <DashboardLayoutPanels>
               <DashboardLayoutPanel Id="one" Column="0" Row="0">
                   <HeaderTemplate>Panel 1</HeaderTemplate>
               </DashboardLayoutPanel>
               <DashboardLayoutPanel Id="two" Row="1" Column="0" SizeX=1 SizeY=2>
                   <HeaderTemplate>Panel 2</HeaderTemplate>
               </DashboardLayoutPanel>
             </DashboardLayoutPanels>
            </SfDashboardLayout>      
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.EnablePersistence">
            <summary>
            Gets or sets whether to persist the component's state between page reloads.
            </summary>
            <value>
            <c>true</c>, if the persistence can be enabled. Otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.EnableRtl">
            <summary>
            Gets or sets whether the right to left direction is enabled for the DashboardLayout component.
            </summary>
            <value>
            <c>true</c>, if the right to left direction can be enabled. Otherwise, <c>false</c>. The default value is <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.MediaQuery">
            <summary>
            Gets or sets the media query value where the DashboardLayout becomes stacked layout when the resolution meets.
            </summary>
            <value>
            Accepts the string value. The default value is `max-width:600px`.
            </value>
            <example>
            <code><![CDATA[
            <SfDashboardLayout Columns="5" MediaQuery=" max-width:800px">
              <DashboardLayoutPanels>
               <DashboardLayoutPanel Id="one" Column="0" Row="0">
                   <HeaderTemplate>Panel 1</HeaderTemplate>
               </DashboardLayoutPanel>
               <DashboardLayoutPanel Id="two" Row="1" Column="0" SizeX=1 SizeY=2>
                   <HeaderTemplate>Panel 2</HeaderTemplate>
               </DashboardLayoutPanel>
             </DashboardLayoutPanels>
            </SfDashboardLayout>      
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.DashboardHtmlAttributes">
            <summary>
            Used to specify additional html attributes such as styles, class, and more to the root element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.SfDashboardPanels">
            <summary>
            Defines the panels property of the DashboardLayout component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.ResizableHandles">
            <summary>
            Gets or sets the resizing handles directions used for resizing the panels.
            </summary>
            <value>
            Resize directions of the DashboardLayout panels. The default resize direction is 'south-east'.
            </value>
            <example>
            <code><![CDATA[
            <SfDashboardLayout Columns="5" AllowResizing="true" ResizableHandles="ResizableHandle.NorthEast">
              <DashboardLayoutPanels>
               <DashboardLayoutPanel Id="one" Column="0" Row="0">
                   <HeaderTemplate>Panel 1</HeaderTemplate>
               </DashboardLayoutPanel>
               <DashboardLayoutPanel Id="two" Row="1" Column="0" SizeX=1 SizeY=2>
                   <HeaderTemplate>Panel 2</HeaderTemplate>
               </DashboardLayoutPanel>
             </DashboardLayoutPanels>
            </SfDashboardLayout>      
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfDashboardLayout.ShowGridLines">
            <summary>
            Gets or sets the visibility of grid lines for panels within the DashboardLayout.
            </summary>
            <value>
            <c>true</c>, if the grid lines should be shown. Otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.MovePanelAsync(System.String,System.Int32,System.Int32)">
            <summary>
            Moves the panel to the specified row and column within the DashboardLayout.
            </summary>
            <param name="idValue">Specifies the Id value of moved panel.</param>
            <param name="rowValue">Specifies the Row value of moved panel.</param>
            <param name="colValue">Specifies the Column value of moved panel.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.RemoveAllAsync">
            <summary>
            Clears the DashboardLayout by removing all panels.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.RemovePanel(System.String)">
            <summary>
            Removes the panel from the DashboardLayout.
            idValue - Specifies the Id value of the removed panel.
            </summary>
            <param name="idValue">idValue.</param>
            <returns>="Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.RemovePanelAsync(System.String)">
            <summary>
            Removes a panel from the DashboardLayout.
            </summary>
            <param name="idValue">The Id value of the panel to be removed.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.ResizePanelAsync(System.String,System.Int32,System.Int32)">
            <summary>
            Resize the panel in the DashboardLayout.
            </summary>
            <param name="idValue">Specifies the Id value of the panel to be resized.</param>
            <param name="sizeXValue">Specifies the desired width (SizeX) of resize panel.</param>
            <param name="sizeYValue">Specifies the desired height (SizeY) of resize panel.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.Serialize">
            <summary>
            Retrieves the panels from the DashboardLayout as a collection of PanelModel objects.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.AddPanel(Syncfusion.Blazor.Layouts.PanelModel)">
            <summary>
            Allows to add a panel to the Dashboardlayout.
            panel - Specifies the added panel.
            </summary>
            <param name="panel">panel.</param>
            <returns>="Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.AddPanelAsync(Syncfusion.Blazor.Layouts.PanelModel)">
            <summary>
            Allows to add a panel to the Dashboardlayout.
            </summary>
            <param name="panel">The panel to be added.</param>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.Refresh">
            <summary>
            Refreshes the DashboardLayout component.
            </summary>
            <returns>"Task".</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfDashboardLayout.RefreshAsync">
            <summary>
            Updates and refreshes the DashboardLayout component.
            </summary>
            <returns><see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.SplitterEvents">
            <summary>
            Configure the event handlers to handle the events with Splitter component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.Parent">
            <summary>
            The splitter is a layout user interface (UI) component that splits the layout into multiple panes with resizable and collapsible support.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.OnCollapse">
            <summary>
            Gets or sets the event callback that will be invoked on the pane collapse action.
            </summary>
            <example>
            <code><![CDATA[
            <SfSplitter Height="240px" Width="100%">
            <SplitterEvents OnCollapse="@OnCollapseHandler" />
              <SplitterPanes>
                   <SplitterPane Collapsible=true>
                      <ContentTemplate>
                          <div> Left Pane</div>
                      </ContentTemplate>
                   </SplitterPane>
                   <SplitterPane Collapsible=true>
                      <ContentTemplate>
                          <div> Right Pane</div>
                      </ContentTemplate>
                   </SplitterPane>
               </SplitterPanes>
            </SfSplitter>
             @code{
              private void OnCollapseHandler(BeforeExpandEventArgs args)
                {
                    if (someCondition)
                    {
                        args.Cancel = true; // Cancel the collapse operation if needed
                    }
                    else
                    {
                        // Perform additional logic
                    }
                }
             }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.OnExpand">
            <summary>
            Gets or sets the event callback that will be invoked on expanding the panes.
            </summary>
            <example>
            <code><![CDATA[
            <SfSplitter Height="240px" Width="100%">
            <SplitterEvents OnExpand="@OnExpandeHandler" />
              <SplitterPanes>
                   <SplitterPane Collapsible=true>
                      <ContentTemplate>
                          <div> Left Pane</div>
                      </ContentTemplate>
                   </SplitterPane>
                   <SplitterPane Collapsible=true>
                      <ContentTemplate>
                          <div> Right Pane</div>
                      </ContentTemplate>
                   </SplitterPane>
               </SplitterPanes>
            </SfSplitter>
             @code{
              private void OnExpandeHandler(BeforeExpandEventArgs args)
                {
                    if (someCondition)
                    {
                        args.Cancel = true; // Cancel the collapse operation if needed
                    }
                    else
                    {
                        // Perform additional logic
                    }
                }
             }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.Collapsed">
            <summary>
            Gets or sets the event callback that will be invoked when the panes get collapsed.
            </summary>
            <example>
            <code><![CDATA[
            <SfSplitter Height="240px" Width="100%">
            <SplitterEvents OnExpand="@CollapseHandler" />
              <SplitterPanes>
                   <SplitterPane Collapsible=true>
                      <ContentTemplate>
                          <div> Left Pane</div>
                      </ContentTemplate>
                   </SplitterPane>
                   <SplitterPane Collapsible=true>
                      <ContentTemplate>
                          <div> Right Pane</div>
                      </ContentTemplate>
                   </SplitterPane>
               </SplitterPanes>
            </SfSplitter>
             @code{
              private void CollapseHandler(ExpandedEventArgs args)
                {
                    // Perform additional logic
                }
             }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.Created">
            <summary>
            Gets or sets the event callback that will be invoked when the component is created.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.Expanded">
            <summary>
            Gets or sets the event callback that will be invoked when the panes get expanded.
            </summary>
            <example>
            <code><![CDATA[
            <SfSplitter Height="240px" Width="100%">
            <SplitterEvents Expanded="@ExpandedHandler" />
              <SplitterPanes>
                   <SplitterPane Collapsible=true>
                      <ContentTemplate>
                          <div> Left Pane</div>
                      </ContentTemplate>
                   </SplitterPane>
                   <SplitterPane Collapsible=true>
                      <ContentTemplate>
                          <div> Right Pane</div>
                      </ContentTemplate>
                   </SplitterPane>
               </SplitterPanes>
            </SfSplitter>
             @code{
              private void ExpandedHandler(ExpandedEventArgs args)
                {
                    // Perform additional logic
                }
             }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.OnResizeStart">
            <summary>
            Gets or sets the event callback that will be invoked when the split pane is started to resize.
            </summary>
             <example>
            <code><![CDATA[
            <SfSplitter Height="240px" Width="100%">
            <SplitterEvents OnResizeStart="@OnResizeHandler" />
              <SplitterPanes>
                   <SplitterPane>
                      <ContentTemplate>
                          <div> Left Pane</div>
                      </ContentTemplate>
                   </SplitterPane>
                   <SplitterPane>
                      <ContentTemplate>
                          <div> Right Pane</div>
                      </ContentTemplate>
                   </SplitterPane>
               </SplitterPanes>
            </SfSplitter>
             @code{
              private void OnResizeHandler(ResizeEventArgs args)
                {
                    args.Cancel = true; // Perform additional logic
                }
             }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.OnResizeStop">
            <summary>
            Gets or sets the event callback that will be invoked when the resizing of split pane is stopped.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.Destroyed">
            <summary>
            Gets or sets the event callback that will be invoked when the splitter is destroyed with its elements.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterEvents.Resizing">
            <summary>
            Gets or sets the event callback that will be invoked when a split pane is being resized.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SplitterEvents.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            /// <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.SplitterPane">
            <summary>
            Configure each pane and its properties to handle the pane behavior.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.ChildContent">
            <summary>
            Gets or sets the content of the splitter pane element.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.ContentTemplate">
            <summary>
            Gets or sets the template for the content within the <see cref="T:Syncfusion.Blazor.Layouts.SplitterPane"/> component.
            </summary>
            <value>
            A <see cref="T:Microsoft.AspNetCore.Components.RenderFragment"/> that represents the custom content template.
            </value>
            <remarks>
            The content template is a customizable area within the Splitter where you can define custom content.
            By providing a RenderFragment, you can create complex layouts or embed other components within the Splitter's panes.
            </remarks>
            <example>
            <code><![CDATA[
            <SfSplitter Height="240px" Width="100%">
              <SplitterPanes>
                   <SplitterPane>
                      <ContentTemplate>
                          <div> Left Pane</div>
                      </ContentTemplate>
                   </SplitterPane>
                   <SplitterPane>
                      <ContentTemplate>
                          <div> Right Pane</div>
                      </ContentTemplate>
                   </SplitterPane>
               </SplitterPanes>
            </SfSplitter>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.Collapsed">
            <summary>
            Gets or sets a value indicating whether the pane is initially collapsed within the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component.
            </summary>
            <value>
            <c>true</c> if the pane is initially collapsed; otherwise, <c>false</c>.
            </value>
            <remarks>
            When a pane is collapsed, its content is hidden, and only a minimal representation of the pane remains visible.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.CollapsedChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.Collapsible">
            <summary>
            Gets or sets a value indicating whether the pane is collapsible in the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component.
            </summary>
            <value>
            <c>true</c> if the pane is collapsible; otherwise, <c>false</c>.
            </value>
            <remarks>
            When a pane is collapsible, users can interact with a control, typically a button or an icon, to collapse or expand the pane.
            
            By setting this property to <c>true</c>, you enable collapsible behavior for the pane. When set to <c>false</c>,
            the pane cannot be collapsed or expanded manually.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.Content">
            <summary>
            Gets or sets the content of the <see cref="T:Syncfusion.Blazor.Layouts.SplitterPane"/> within the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component.
            </summary>
            <value>
            A string representing the content to be displayed within the pane.
            </value>
            <example>
            <code><![CDATA[
            <SfSplitter Height="240px" Width="100%">
              <SplitterPanes>
                   <SplitterPane Content="<div>The ASP.NET Scheduler,facilitates almost all calendar features, thus allowing users to manage their time efficiently </div>">
                   </SplitterPane>
                   <SplitterPane Content="<div>The ASP.NET DataGrid control, or DataTable is a feature-rich control used to display data in a tabular format.</div>">
                   </SplitterPane>
               </SplitterPanes>
            </SfSplitter>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.CssClass">
            <summary>
            Gets or sets a CSS class string to customize the appearance of the <see cref="T:Syncfusion.Blazor.Layouts.SplitterPane"/> component.
            </summary>
            <value>
            Accepts a CSS class string separated by space to customize the appearance. The default value is <c>String.Empty</c>.
            </value>
            <remarks>
            Use this property to apply custom styling to the <see cref="T:Syncfusion.Blazor.Layouts.SplitterPane"/>  component. You can
            define your own CSS classes and use them here to control the visual appearance
            of the component.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.Max">
            <summary>
            Gets or sets the maximum size of the <see cref="T:Syncfusion.Blazor.Layouts.SplitterPane"/> within the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component.
            </summary>
            <value>
            A string representing the maximum size of the pane. This can be specified using CSS units such as pixels (px), percentages (%).
            </value>
            <remarks>
            The maxsize property defines the maximum allowable size for the pane. This limits the expansion of the pane
            beyond the specified maximum size.
            </remarks>
            <example>
            <code><![CDATA[
            <SfSplitter Height="240px" Width="100%">
              <SplitterPanes>
                   <SplitterPane Max="200px">
                      <ContentTemplate>
                          <div> Left Pane</div>
                      </ContentTemplate>
                   </SplitterPane>
                   <SplitterPane>
                      <ContentTemplate>
                          <div> Right Pane</div>
                      </ContentTemplate>
                   </SplitterPane>
               </SplitterPanes>
            </SfSplitter>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.MaxChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.Min">
            <summary>
            Gets or sets the minimum size of the <see cref="T:Syncfusion.Blazor.Layouts.SplitterPane"/> within the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component.
            </summary>
            <value>
            A string representing the minimum size of the pane. This can be specified using CSS units such as pixels (px), percentages (%).
            </value>
            <remarks>
            The minSize property defines the minimum allowable size for the pane. This prevents the pane from being
            resized to a size smaller than the specified minimum size.
            </remarks>
            <example>
            <code><![CDATA[
            <SfSplitter Height="240px" Width="100%">
              <SplitterPanes>
                   <SplitterPane Min="200px">
                      <ContentTemplate>
                          <div> Left Pane</div>
                      </ContentTemplate>
                   </SplitterPane>
                   <SplitterPane>
                      <ContentTemplate>
                          <div> Right Pane</div>
                      </ContentTemplate>
                   </SplitterPane>
               </SplitterPanes>
            </SfSplitter>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.MinChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.Resizable">
            <summary>
            Gets or sets a value indicating whether the pane is resizable within the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component.
            </summary>
            <value>
            <c>true</c> if the pane is resizable; otherwise, <c>false</c>.
            </value>
            <remarks>
            When a pane is resizable, users can interact with its edges to adjust its size. This allows them to
            customize the layout by making panes larger or smaller as needed.
            
            By default, the pane is resizable. Setting this property to <c>false</c> will prevent users from resizing the pane.
            
            You can combine this property with the <see cref="P:Syncfusion.Blazor.Layouts.SplitterPane.Min"/> and <see cref="P:Syncfusion.Blazor.Layouts.SplitterPane.Max"/> properties to define
            the resizing behavior more precisely.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.Size">
            <summary>
            Gets or sets the size of the <see cref="T:Syncfusion.Blazor.Layouts.SplitterPane"/> within the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component.
            </summary>
            <value>
            A string representing the size of the pane. This can be specified using CSS units such as pixels (px), percentages (%).
            </value>
            <remarks>
            The size property defines the initial size of the pane. The value determines the width or height of the pane,
            depending on the <see cref="T:Syncfusion.Blazor.Layouts.Orientation"/> of the Splitter.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.SizeChanged">
            <summary>
            Gets or sets a callback of the bound value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPane.Visible">
            <summary>
            Gets or sets a value indicating whether the pane is visible within the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component.
            </summary>
            <value>
            <c>true</c> if the pane is visible; otherwise, <c>false</c>.
            </value>
            <remarks> If this property is set to `false`, the pane element will not be shown in the DOM. This property can be used to provide conditional pane rendering in Splitter. </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SplitterPane.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SplitterPane.OnParametersSetAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SplitterPane.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SplitterPane.Dispose(System.Boolean)">
            <summary>
            Dispose the unmanaged resources.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.SplitterPanes">
            <summary>
            Configure one or more panes to construct different layouts.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SplitterPanes.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SplitterPanes.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender"> Set to true if this is the first time OnAfterRender(Boolean) has been invoked.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SplitterPanes.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SplitterPanes.Dispose(System.Boolean)">
            <summary>
            Dispose the unmanaged resources.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterPanes.ChildContent">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.SplitterTemplates">
            <summary>
            Configure each pane and its properties to handle the pane behavior.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SplitterTemplates.Separator">
            <summary>
            Specifies the separator icon that can be displayed in the Splitter separator.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SplitterTemplates.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SplitterTemplates.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SplitterTemplates.Dispose(System.Boolean)">
            <summary>
            Dispose the unmanaged resources.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.SfSplitter">
            <summary>
            The splitter is a layout user interface (UI) component that splits the layout into multiple panes with resizable and collapsible support.
            </summary>
            <example>
            <code><![CDATA[
            <SfSplitter>
              <SplitterPanes>
                   <SplitterPane>
                      <ContentTemplate>
                          <div> Left Pane</div>
                      </ContentTemplate>
                   </SplitterPane>
                   <SplitterPane>
                      <ContentTemplate>
                          <div> Right Pane</div>
                      </ContentTemplate>
                   </SplitterPane>
               </SplitterPanes>
            </SfSplitter>
            ]]></code>
            </example>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.OnParametersSetAsync">
            <summary>
            Method invoked when the component has received parameters from its parent.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender"> Set to true if this is the first time OnAfterRender(Boolean) has been invoked.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.ID">
            <summary>
            Gets or sets the unique identifier for <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component.
            </summary>
            <value>
            Accepts a string value. The default value is <c>String.Empty</c>.
            </value>
            <remarks>
            You can specify only unique value.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.ChildContent">
            <summary>
            Sets the content for panes of the Splitter.
            </summary>
            <value>
            Accepts a RenderFragment that defines the content of the UI element.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.CssClass">
            <summary>
            Gets or sets a CSS class string to customize the appearance of the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component.
            </summary>
            <value>
            Accepts a CSS class string separated by space to customize the appearance. The default value is <c>String.Empty</c>.
            </value>
            <remarks>
            Use this property to apply custom styling to the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/>  component. You can
            define your own CSS classes and use them here to control the visual appearance
            of the component.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.EnableReversePanes">
            <summary>
            Gets or sets a value indicating whether the order of splitter panes should be reversed.
            </summary>
            <value>
            <c>true</c>, if the splitter panes are reordered. Otherwise, <c>false</c>.
            </value>
            <remarks>
            When set to <c>true</c>, the order of the panes within the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component will be reversed.
            This means that the right-most or bottom-most pane will appear as the first pane, and the other
            panes will follow in reverse order.
            
            Reversing the pane order can be useful in scenarios where you want to present content in the opposite
            direction, such as creating layouts that flow from right to left or from bottom to top.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.EnableRtl">
            <summary>
            Gets or sets a value indicating whether right-to-left (RTL) mode is enabled for the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component.
            </summary>
            <value>
            <c>true</c> if RTL mode is enabled; otherwise, <c>false</c>.
            </value>
            <remarks>
            When RTL mode is enabled, the content of the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component will be presented in a right-to-left
            direction. This affects the positioning and alignment of the splitter panes and other content.
            
            Enabling RTL mode can be useful when designing applications for languages that are written from
            right to left, such as Arabic, Hebrew, or Persian.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.Enabled">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component is enabled.
            </summary>
            <value>
            <c>true</c> if the component is enabled; otherwise, <c>false</c>.
            </value>
            <remarks>
            When the component is enabled, user interactions and behaviors associated with the
            Splitter, such as resizing panes, are allowed. When disabled, these interactions are
            restricted and the component becomes non-interactive.
            
            By default, the component is enabled. You can set this property to <c>false</c> to prevent
            user interactions temporarily, if needed.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.EnablePersistence">
            <summary>
            Gets or sets a value indicating whether persistence of the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component's state is enabled.
            </summary>
            <value>
            <c>true</c> if persistence is enabled; otherwise, <c>false</c>.
            </value>
            <remarks>
            When persistence is enabled, the state of the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component is saved and restored across page reloads or navigations. This allows the
            component to remember its previous state and provide a consistent user experience.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.Height">
            <summary>
            Gets or sets the height of the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component.
            </summary>
            <value>
            Accepts the string value. The default value is <c>100%</c>.
            </value>
            <example>
            <code><![CDATA[
            <SfSplitter Height="240px" Width="100%">
              <SplitterPanes>
                   <SplitterPane>
                      <ContentTemplate>
                          <div> Left Pane</div>
                      </ContentTemplate>
                   </SplitterPane>
                   <SplitterPane>
                      <ContentTemplate>
                          <div> Right Pane</div>
                      </ContentTemplate>
                   </SplitterPane>
               </SplitterPanes>
            </SfSplitter>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.Orientation">
            <summary>
            Gets or sets the orientation of the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component.
            </summary>
            <value>
            An enum value representing the orientation of the Splitter. Possible values are <see cref="F:Syncfusion.Blazor.Layouts.Orientation.Horizontal"/> and <see cref="F:Syncfusion.Blazor.Layouts.Orientation.Vertical"/>.
            </value>
            <remarks>
            The orientation determines whether the Splitter will arrange its panes horizontally or vertically.
            
            - <see cref="F:Syncfusion.Blazor.Layouts.Orientation.Horizontal"/>: Panes are arranged side by side horizontally.
            - <see cref="F:Syncfusion.Blazor.Layouts.Orientation.Vertical"/>: Panes are arranged one above the other vertically.
            
            Choose the appropriate orientation based on your desired layout and design.
            </remarks>
            <example>
            <code><![CDATA[
            <SfSplitter Orientation="Orientation.Vertical">
              <SplitterPanes>
                   <SplitterPane>
                      <ContentTemplate>
                          <div> Left Pane</div>
                      </ContentTemplate>
                   </SplitterPane>
                   <SplitterPane>
                      <ContentTemplate>
                          <div> Right Pane</div>
                      </ContentTemplate>
                   </SplitterPane>
               </SplitterPanes>
            </SfSplitter>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.SeparatorSize">
            <summary>
            Gets or sets the size of the separators between panes in the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component.
            </summary>
            <value>
            The size of the separators, specified as a double value.
            </value>
            <remarks>
            The separator size determines the width of the space between adjacent panes within the Splitter component.
            
            Example:
            - Setting SeparatorSize to 10 will create a 10-pixel wide separator between adjacent panes.
            </remarks>
            <example>
            <code><![CDATA[
            <SfSplitter SeparatorSize="10" Height="240px" Width="100%">
              <SplitterPanes>
                   <SplitterPane>
                      <ContentTemplate>
                          <div> Left Pane</div>
                      </ContentTemplate>
                   </SplitterPane>
                   <SplitterPane>
                      <ContentTemplate>
                          <div> Right Pane</div>
                      </ContentTemplate>
                   </SplitterPane>
               </SplitterPanes>
            </SfSplitter>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.Width">
            <summary>
            Gets or sets the width of the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component.
            </summary>
            <value>
            Accepts the string value. The default value is <c>100%</c>.
            </value>
            <remarks>
            The value can be either in pixel or percentage format.
            </remarks>
            <example>
            <code><![CDATA[
            <SfSplitter Height="240px" Width="100%">
              <SplitterPanes>
                   <SplitterPane>
                      <ContentTemplate>
                          <div> Left Pane</div>
                      </ContentTemplate>
                   </SplitterPane>
                   <SplitterPane>
                      <ContentTemplate>
                          <div> Right Pane</div>
                      </ContentTemplate>
                   </SplitterPane>
               </SplitterPanes>
            </SfSplitter>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfSplitter.HtmlAttributes">
            <summary>
            You can add the additional Html attributes such as id, title, etc., to the splitter element.
            </summary>
            <value>
            A dictionary of additional HTML attributes for the root element of the component.
            </value>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.CollapseAsync(System.Double)">
            <summary>
            Collapses the specified pane at the given index asynchronously in the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <param name="index"> The index of the pane to be collapsed.</param>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.ExpandAsync(System.Double)">
            <summary>
            Expands the specified pane at the given index asynchronously in the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component.
            </summary>
            <param name="index"> The index of the pane to be expanded.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.AddPaneAsync(Syncfusion.Blazor.Layouts.SplitterPane,System.Int32)">
            <summary>
             Adds a new pane asynchronously with the specified properties and index in the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component.
            </summary>
            <param name="paneProperties"> The properties of the pane to be added.</param>
            <param name="index">The index at which the pane should be added.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.RemovePaneAsync(System.Int32)">
            <summary>
            Removes the pane at the specified index asynchronously from the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component.
            </summary>
            <param name="index">The index of the pane to be removed.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.ToggleAsync(System.Collections.Generic.List{System.Double},System.Collections.Generic.List{System.Double})">
            <summary>
            Toggles the expansion and collapse of panes asynchronously in the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component based on provided indices.
            </summary>
            <remarks> This method allows us to collapse and expand the multiple panes from the application end with a single method call. </remarks>
            <param name="expandIndices"> The list of indices for panes to be expanded.</param>
            <param name="collapseIndices"> The list of indices for panes to be collapsed. </param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <seealso cref="F:Syncfusion.Blazor.Layouts.SplitterPane.collapsible"/>
            <seealso cref="F:Syncfusion.Blazor.Layouts.SplitterPane.collapsed"/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.CreatedEvent">
            <summary>
            Method invoked after component has been created.
            </summary>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.ResizeStartEvent(Syncfusion.Blazor.Layouts.ResizeEventArgs)">
            <summary>
            Method invoked before resizing the separator.
            </summary>
            <param name="args"> Specifies the resize start event arguments.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.ResizingEvent(Syncfusion.Blazor.Layouts.ResizingEventArgs)">
            <summary>
            Method invoked while resizing the separator.
            </summary>
            <param name="args"> Specifies the resize event arguments.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.SplitterResizeInfo(Syncfusion.Blazor.Layouts.SplitterResizeInfoArgs)">
            <summary>
            Method invoked after resized.
            </summary>
            <param name="args"> Specifies the resize event arguments.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.OnCollapseEvent(System.Int32,Syncfusion.Blazor.Layouts.BeforeExpandEventArgs)">
            <summary>
            Method invoked before collapsing the pane.
            </summary>
            <param name="index"> Specifies the collapsed pane index.</param>
            <param name="args"> Specifies the collapse event arguments.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.OnExpandEvent(Syncfusion.Blazor.Layouts.BeforeExpandEventArgs)">
            <summary>
            Method invoked before expanding the pane.
            </summary>
            <param name="args"> Specifies the expand event arguments.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.CollapsedEvent(Syncfusion.Blazor.Layouts.ExpandedEventArgs)">
            <summary>
            Method invoked after collapsed the pane.
            </summary>
            <param name="args"> Specifies the collapse event arguments.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.UpdateCollapsed(System.Int32,System.Boolean)">
            <summary>
            Method invoked for updating the collapsed property.
            </summary>
            <param name="index"> Specifies the updated pane index.</param>
            <param name="status"> Specifies the corresponding pane collapsed state.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfSplitter.ExpandedEvent(Syncfusion.Blazor.Layouts.ExpandedEventArgs)">
            <summary>
            Method invoked after expanding the pane.
            </summary>
            <param name="args"> Specifies the expanded event args.</param>
            <returns>A System.Threading.Tasks.Task representing any asynchronous operation.</returns>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.Orientation">
            <summary>
            Represents the orientation of the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.Orientation.Horizontal">
            <summary>
            Indicates a horizontal orientation, where panes are arranged side by side.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.Orientation.Vertical">
            <summary>
            Indicates a vertical orientation, where panes are arranged one above the other.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.BeforeExpandEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.Layouts.SplitterEvents.OnCollapse"/> and <see cref="P:Syncfusion.Blazor.Layouts.SplitterEvents.OnExpand"/> event being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.BeforeExpandEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to cancel an action in the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component.
            </summary>
            <value>
            <c>true</c> to cancel the action; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.BeforeExpandEventArgs.Element">
            <summary>
            Gets the root element of the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component.
            </summary>
            <value>
            The DOM element representing the root element of splitter.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.BeforeExpandEventArgs.Event">
            <summary>
            Gets the original event arguments when you trigger the event.
            </summary>
            <value>
            The original event arguments for the event that was triggered.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.BeforeExpandEventArgs.Index">
            <summary>
            Gets an array of indices representing the order of expaned panes.
            </summary>
            <value>
            Accepts an array of integer value.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.BeforeExpandEventArgs.Pane">
            <summary>
            Gets the pane elements.
            </summary>
            <value>
            A list of DOM elements representing the panes of the Splitter.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.BeforeExpandEventArgs.Name">
            <summary>
            Gets the name of the event.
            </summary>
            <value>
            Accepts the string value.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.BeforeExpandEventArgs.Separator">
            <summary>
            Gets the corresponding split-bar element.
            </summary>
            <value>
            The DOM element representing the corresponding split-bar for the Splitter.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.ExpandedEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.Layouts.SplitterEvents.Collapsed"/> and <see cref="P:Syncfusion.Blazor.Layouts.SplitterEvents.Expanded"/>  event being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ExpandedEventArgs.Element">
            <summary>
            Gets the root element of the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component.
            </summary>
            <value>
            The DOM element representing the root element of splitter.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ExpandedEventArgs.Event">
            <summary>
            Gets the original event arguments when you trigger the event.
            </summary>
            <value>
            The original event arguments for the event that was triggered.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ExpandedEventArgs.Index">
            <summary>
            Gets an array of indices representing the order of expaned panes.
            </summary>
            <value>
            Accepts an array of integer value.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ExpandedEventArgs.Pane">
            <summary>
            Gets the pane elements.
            </summary>
            <value>
            A list of DOM elements representing the panes of the Splitter.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ExpandedEventArgs.PaneSizes">
            <summary>
            Gets an array of pane size when it resizes.
            </summary>
            <value>
            Accepts an array of double value that representing the size of panes.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ExpandedEventArgs.Name">
            <summary>
            Gets the name of the event.
            </summary>
            <value>
            Accepts the string value.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ExpandedEventArgs.Separator">
            <summary>
            Gets the corresponding split-bar element.
            </summary>
            <value>
            The DOM element representing the corresponding split-bar for the Splitter.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.ResizeEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.Layouts.SplitterEvents.OnResizeStart"/> event being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether to cancel the resize action.
            </summary>
            <value>
            <c>true</c> to cancel the resize action; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeEventArgs.Element">
            <summary>
            Gets the root element of the <see cref="T:Syncfusion.Blazor.Layouts.SfSplitter"/> component.
            </summary>
            <value>
            The DOM element representing the root of the Splitter component.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeEventArgs.Event">
            <summary>
            Gets the original event arguments when you trigger the event.
            </summary>
            <value>
            The event arguments associated with the event.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeEventArgs.Index">
            <summary>
            Gets an array of indices representing the order of expaned panes.
            </summary>
            <value>
            Accepts an array of integer value.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeEventArgs.Name">
            <summary>
            Gets the name of the event.
            </summary>
            <value>
            Accepts the string value.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeEventArgs.Pane">
            <summary>
            Gets the corresponding resizing pane.
            </summary>
            <value>
            A list of DOM elements representing the resizing pane.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizeEventArgs.Separator">
            <summary>
            Gets the resizing panes separator element.
            </summary>
            <value>
            The DOM element representing the separator of the resizing panes.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.ResizingEventArgs">
            <summary>
            Provides information about an <see cref="P:Syncfusion.Blazor.Layouts.SplitterEvents.Resizing"/> and <see cref="P:Syncfusion.Blazor.Layouts.SplitterEvents.OnResizeStop"/> event being raised.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizingEventArgs.Element">
            <summary>
            Gets the root element of the Splitter.
            </summary>
            <value>
            The DOM element representing the root of the Splitter.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizingEventArgs.Event">
            <summary>
            Gets the original event arguments when you trigger the event.
            </summary>
            <value>
            The event arguments associated with the event.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizingEventArgs.Index">
            <summary>
            Gets an array of indices representing the order of expaned panes.
            </summary>
            <value>
            Accepts an array of integer value.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizingEventArgs.Name">
            <summary>
            Gets the name of the event.
            </summary>
            <value>
            Accepts the string value.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizingEventArgs.Pane">
            <summary>
            Gets the corresponding resizing pane.
            </summary>
            <value>
            A list of DOM elements representing the resizing pane.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizingEventArgs.PaneSize">
            <summary>
            Gets the pane size when it resizes.
            </summary>
            <value>
            Accepts an array of double value.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.ResizingEventArgs.Separator">
            <summary>
            Gets the resizing panes separator element.
            </summary>
            <value>
            The DOM element representing the separator of the resizing panes.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.SplitterResizeInfoArgs">
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.PanePropertiesModel">
            <summary>
            Interface for a class PaneProperties.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanePropertiesModel.Collapsed">
            <summary>
            Specifies whether a pane is collapsed on the initial rendering of the splitter.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanePropertiesModel.Collapsible">
            <summary>
            Specifies whether a pane is capable to collapse.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanePropertiesModel.Content">
            <summary>
            Specifies the content of the split pane.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanePropertiesModel.CssClass">
            <summary>
            Specifies the CSS class names that defines specific user-defined styles and themes
            to be appended on the corresponding pane of the Splitter.
            It is used to customize the Splitter component panes.
            One or more custom CSS classes can be specified to the Splitter panes.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanePropertiesModel.Max">
            <summary>
            Specifies the maximum size of a pane. The pane cannot be resized more than the specified maximum limit.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanePropertiesModel.Min">
            <summary>
            Specifies the minimum size of a pane. The pane cannot be resized less than the specified minimum size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanePropertiesModel.Resizable">
            <summary>
            Specifies the value whether a pane is resizable or not. By default, the Splitter panes are resizable.
            You can disable resize functionality for any specific panes using this property.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.PanePropertiesModel.Size">
            <summary>
            Configures the properties for each pane. For horizontal splitter, the size act as width.
            For vertical splitter, the size act as height.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.Internal.PaneSetting">
            <summary>
            Specifies PaneSettings value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.Internal.PaneSetting.Collapsed">
            <summary>
            Specifies whether a pane is collapsed on the initial rendering of the splitter.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.Internal.PaneSetting.Max">
            <summary>
            Specifies the maximum size of a pane. The pane cannot be resized more than the specified maximum limit.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.Internal.PaneSetting.Min">
            <summary>
            Specifies the minimum size of a pane. The pane cannot be resized less than the specified minimum size.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.Internal.PaneSetting.Size">
            <summary>
            Configures the properties for each pane. For horizontal splitter, the size act as width.
            For vertical splitter, the size act as height.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.Internal.Pane">
            <summary>
            Defines the splitter pane.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.Internal.Pane.PaneIndex">
            <summary>
            Specifies the current pane index.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.Internal.Pane.PaneSetting">
            <summary>
            Defines the PaneSettings.
            </summary>
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.Internal.Pane.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.Internal.Pane.Dispose(System.Boolean)">
            <summary>
            Dispose the unmanaged resources.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.Internal.Panes">
            <summary>
            Used to render the panes.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.Internal.Panes.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.Internal.Panes.Dispose(System.Boolean)">
            <summary>
            Dispose the unmanaged resources.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.Internal.Separator">
            <summary>
            Class for create the separator.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.Internal.Separator.PaneIndex">
            <summary>
            Defines the current pane index.
            </summary>
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.Internal.Separator.PaneSetting">
            <summary>
            Defines the current pane PaneSettings value.
            </summary>
            <exclude/>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.SfTimeline">
            <summary> 
            The Blazor Timeline component presents a series of events or activities in chronological order, allowing users to track the progression of time.
            </summary>
            <remarks>
            Timeline items can be populated by specifying <see cref="T:Syncfusion.Blazor.Layouts.TimelineItem"/> within <see cref="T:Syncfusion.Blazor.Layouts.SfTimeline"/> tag directive.
            </remarks>
            <example>
            In the below code example, a basic Timeline component is initialized with <see cref="T:Syncfusion.Blazor.Layouts.TimelineItem"/> tag directive.
            <code><![CDATA[ 
            <SfTimeline>
                <TimelineItems>
                    <TimelineItem></TimelineItem>
                    <TimelineItem></TimelineItem>
                    <TimelineItem></TimelineItem>
                    <TimelineItem></TimelineItem>
                </TimelineItems>
            </SfTimeline>
            ]]></code>
            </example>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfTimeline.UpdateChildProperty(Syncfusion.Blazor.Layouts.TimelineItem)">
            <summary>
            Updates the Timeline with list of items from the TimelineItem tag directive when they are rendered.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfTimeline.UpdateItems(System.Collections.Generic.List{Syncfusion.Blazor.Layouts.TimelineItem})">
            <summary>
            Updates the Items list with the list provided from the TimelineItems tag directive.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfTimeline.OnParametersSetAsync">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.SfTimeline.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfTimeline.Alignment">
            <summary>
            Gets or sets the alignment of the item content in relation to the <see cref="T:Syncfusion.Blazor.Layouts.SfTimeline"/> component.
            </summary>
            <value>
            A value indicates the alignment of timeline items. The default value is <see cref="F:Syncfusion.Blazor.Layouts.TimelineAlignment.After"/>.
            </value>
            <remarks>
            Use this property to control the display of item content appear before or after each item in the <see cref="T:Syncfusion.Blazor.Layouts.SfTimeline"/> component.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfTimeline.ID">
            <summary>
            Sets id attribute for the timeline element.
            </summary>
            <value>
            Accepts the string value.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfTimeline.CssClass">
            <summary>
            Gets or sets the custom CSS class to customize the <see cref="T:Syncfusion.Blazor.Layouts.SfTimeline"/> component.
            </summary>
            <value>
            A string representing the CSS class to be applied. The default value is an empty string.
            </value>
            <remarks>
            You can use this property to apply custom styles to the <see cref="T:Syncfusion.Blazor.Layouts.SfTimeline"/> component by specifying a CSS class.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfTimeline.Orientation">
            <summary>
            Gets or sets the orientation of the <see cref="T:Syncfusion.Blazor.Layouts.SfTimeline"/> component.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.Blazor.Layouts.TimelineOrientation"/> enumeration defines the possible orientations for the <see cref="T:Syncfusion.Blazor.Layouts.SfTimeline"/> component.
            You can set this property to control whether the timeline is displayed horizontally or vertically.
            </remarks>
            <value>
            A <see cref="T:Syncfusion.Blazor.Layouts.TimelineOrientation"/> value representing the orientation of the <see cref="T:Syncfusion.Blazor.Layouts.SfTimeline"/>.
            The default value is <see cref="F:Syncfusion.Blazor.Layouts.TimelineOrientation.Vertical"/>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfTimeline.Reverse">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Syncfusion.Blazor.Layouts.SfTimeline"/> items are rendered in reverse order.
            </summary>
            <value>
            <c>true</c> if the items are rendered in reverse order; otherwise, <c>false</c>. The default value is <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfTimeline.Template">
             <summary>
             Gets or sets a template that defines the appearance of each item in the <see cref="T:Syncfusion.Blazor.Layouts.SfTimeline"/> component.
             </summary>
             <value>
             The template content. The default value is <c>null</c>.
             </value>
             <remarks>
             The <see cref="P:Syncfusion.Blazor.Layouts.SfTimeline.Template"/> allows you to define a custom template for rendering each step.
             Use the template’s context parameter to access <see cref="P:Syncfusion.Blazor.Layouts.TimelineItemContext.Item"/> and <see cref="P:Syncfusion.Blazor.Layouts.TimelineItemContext.ItemIndex"/> properties.
             </remarks>
             <example>
             <code><![CDATA[
            <SfTimeline>
                <ChildContent>
                    <TimelineItems>
                        <TimelineItem IconCss = "e-icons e-circle-info"></TimelineItem>
                        <TimelineItem IconCss = "e-icons e-circle-add"></TimelineItem>
                        <TimelineItem IconCss = "e-icons e-circle-check"></TimelineItem>
                        <TimelineItem IconCss = "e-icons e-circle-close"></TimelineItem>
                    </TimelineItems>
                </ChildContent>
                <Template>
                    <div class="e-connector">
                        <span class="e-indicator @context.Item.IconCss"></span>
                    </div>
                </Template>
            </SfTimeline>
             ]]></code>
             </example>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfTimeline.Items">
            <summary>
            Gets or sets the list of items in timeline.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfTimeline.ChildContent">
            <summary>
            Gets or sets a value that indicates the child content for the Timeline including HTML element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfTimeline.Created">
            <summary>
            Gets or sets an event callback that is raised when the <see cref="T:Syncfusion.Blazor.Layouts.SfTimeline"/> rendering is completed.
            </summary>
            <value>
            An event call back function.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.SfTimeline.ItemRendered">
            <summary>
            Gets or sets an event callback that is raised when a timeline item in the <see cref="T:Syncfusion.Blazor.Layouts.SfTimeline"/> component is rendered.
            </summary>
            <value>
            An event callback function that is triggered when a item is rendered within the Timeline.
            </value>
            <remarks>
            Subscribe to this event to perform additional actions or apply custom styling after a item has been rendered.
            It provides an opportunity to dynamically modify the appearance or behavior of individual items during the rendering process.
            </remarks>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.TimelineAlignment">
            <summary>
            Specifies the position of timeline items in relation to the <see cref="T:Syncfusion.Blazor.Layouts.SfTimeline"/> component.
            </summary>
            <list type="bullet">
                <item>
                    <term>Before</term>
                    <description>Displays item content to the top and opposite content to the bottom when the Timeline is in a horizontal orientation, or the content to the left and opposite content to the right when the Timeline is in a vertical orientation.</description>
                </item>
                <item>
                    <term>After</term>
                    <description>Displays item content to the bottom and opposite content to the top when the Timeline is in a horizontal orientation, or the content to the right and opposite content to the left when the Timeline is in a vertical orientation.</description>
                </item>
                <item>
                    <term>Alternate</term>
                    <description>Displays item content alternatively, regardless of the Timeline's orientation.</description>
                </item>
                <item>
                    <term>AlternateReverse</term>
                    <description>Displays item content in alternate reverse, regardless of the Timeline's orientation.</description>
                </item>
            </list>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.TimelineAlignment.Before">
            <summary>
            Displays item content to the top and opposite content to the bottom when the Timeline is in a horizontal orientation, or the item content to the left and opposite content to the right when the Timeline is in a vertical orientation.
            </summary>
            <value>Specifies the position to display items content on the top in a horizontal orientation, or on the left in a vertical orientation.</value>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.TimelineAlignment.After">
            <summary>
            Displays item content to the bottom and opposite content to the top when the Timeline is in a horizontal orientation, or the content to the right and opposite content to the left when the Timeline is in a vertical orientation.
            </summary>
            <value> Specifies the position to display items content on the bottom in a horizontal orientation, or on the right in a vertical orientation.</value>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.TimelineAlignment.Alternate">
            <summary>
            Displays item content alternatively, regardless of the Timeline's orientation.
            </summary>
            <value>Specifies the item content to be displayed alternatively. </value>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.TimelineAlignment.AlternateReverse">
            <summary>
            Displays item content in alternate reverse, regardless of the Timeline's orientation.
            </summary>
            <value> Specifies the item content to be in reverse alternative. </value>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.TimelineOrientation">
            <summary>
            Represents the orientation options for the <see cref="T:Syncfusion.Blazor.Layouts.SfTimeline"/> component.
            </summary>
            <list type="bullet">
                <item>
                    <term>Horizontal</term>
                    <description>The items are arranged horizontally.</description>
                </item>
                <item>
                    <term>Vertical</term>
                    <description>The items are arranged vertically.</description>
                </item>
            </list>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.TimelineOrientation.Horizontal">
            <summary>
            Represents a horizontal orientation for the <see cref="T:Syncfusion.Blazor.Layouts.SfTimeline"/> component.
            </summary>
            <value>Specifies the orientation indicating that the timeline items are arranged horizontally.</value>
        </member>
        <member name="F:Syncfusion.Blazor.Layouts.TimelineOrientation.Vertical">
            <summary>
            Represents a vertical orientation for the <see cref="T:Syncfusion.Blazor.Layouts.SfTimeline"/> component.
            </summary>
            <value>Specifies the orientation indicating that the timeline items are arranged vertically.</value>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.TimelineRenderedEventArgs">
            <summary>
            Represents event arguments for Timeline rendered event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.TimelineRenderedEventArgs.Index">
            <summary>
            Gets the item data associated with the rendered timeline item.
            </summary>
            <value>
            An <see cref="T:Syncfusion.Blazor.Layouts.SfTimeline"/> to the current item element that is being rendered.
            </value> 
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.TimelineRenderedEventArgs.Item">
            <summary>
            Gets the index of the rendered current item. 
            </summary>
            <value>
            It represents the index of the rendered item.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.TimelineItemContext">
            <summary>
            Represents the context of <see cref="P:Syncfusion.Blazor.Layouts.SfTimeline.Template"/>, <see cref="P:Syncfusion.Blazor.Layouts.TimelineItem.Content"/> and <see cref="P:Syncfusion.Blazor.Layouts.TimelineItem.OppositeContent"/>  which is used to render the content of the item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.TimelineItemContext.Item">
            <summary>
            Gets the item data associated with the rendered timeline item.
            </summary>
            <value>
            An <see cref="T:Syncfusion.Blazor.Layouts.SfTimeline"/> to the current item element that is being rendered.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.TimelineItemContext.ItemIndex">
            <summary>
            Gets the index of the rendered current item.
            </summary>
            <value>
            It represents the index of the rendered item.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.TimelineItem">
            <summary>
            A class that represents items of <see cref="T:Syncfusion.Blazor.Layouts.SfTimeline"/> component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.TimelineItem.Parent">
            <summary>
            Indicates the TimelineItems component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.TimelineItem.BaseParent">
            <summary>
            Indicates the SfTimeline component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.TimelineItem.DotCss">
            <summary>
            Gets or sets the CSS class for the icon associated with the <see cref="T:Syncfusion.Blazor.Layouts.TimelineItem" />.
            </summary>
            <value>
            A string representing the CSS class for the icon. The default value is an empty string.
            </value>
            <remarks>
            The icon CSS class is used to style the icon displayed for the timeline item. If specified, it determines the visual representation of the item.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.TimelineItem.Content">
             <summary>
             Gets or sets the custom content template for rendering individual items in the <see cref="T:Syncfusion.Blazor.Layouts.SfTimeline"/> component.
             </summary>
             <value>
             The template content. The default value is <c>null</c>.
             </value>
             <remarks>
             The <see cref="T:Syncfusion.Blazor.Layouts.TimelineItem"/> allows you to define a custom content template for rendering each item.
             Use the content’s context parameter to access <see cref="P:Syncfusion.Blazor.Layouts.TimelineItemContext.Item"/> and <see cref="P:Syncfusion.Blazor.Layouts.TimelineItemContext.ItemIndex"/> properties.
             </remarks> 
             <example>
             <code><![CDATA[
             <SfTimeline>
                <TimelineItems>
                    <TimelineItem>
                        <Content>Ordered</Content>
                    </TimelineItem>
                    <TimelineItem>
                        <Content>Processing</Content>
                    </TimelineItem>
                    <TimelineItem>
                        <Content>Shipped</Content>
                    </TimelineItem>
                    <TimelineItem>
                        <Content>Delivered</Content>
                    </TimelineItem>
                </TimelineItems>
            </SfTimeline>
             ]]></code>
             </example>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.TimelineItem.OppositeContent">
             <summary>
             Gets or sets the custom opposite text content template for rendering individual items in the <see cref="T:Syncfusion.Blazor.Layouts.SfTimeline"/> component.
             </summary>
             <value>
             The template content. The default value is <c>null</c>.
             </value>
             <remarks>
             The <see cref="T:Syncfusion.Blazor.Layouts.TimelineItem"/> allows you to define a custom opposite text content template for rendering each item.
             Use the oppositeContent’s context parameter to access <see cref="P:Syncfusion.Blazor.Layouts.TimelineItemContext.Item"/> and <see cref="P:Syncfusion.Blazor.Layouts.TimelineItemContext.ItemIndex"/> properties.
             </remarks>
             <example>
             <code><![CDATA[
             <SfTimeline>
                <TimelineItems>
                    <TimelineItem>
                        <Content>Ordered</Content>
                        <OppositeContent>10:30 am</OppositeContent>
                    </TimelineItem>
                    <TimelineItem>
                        <Content>Processing</Content>
                        <OppositeContent>11:30 am</OppositeContent>
                    </TimelineItem>
                    <TimelineItem>
                        <Content>Shipped</Content>
                        <OppositeContent>12:30 am</OppositeContent>
                    </TimelineItem>
                    <TimelineItem>
                        <Content>Delivered</Content>
                        <OppositeContent>01:30 am</OppositeContent>
                    </TimelineItem>
                </TimelineItems>
            </SfTimeline>
             ]]></code>
             </example>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.TimelineItem.CssClass">
            <summary>
            Gets or sets the custom CSS class for customize the appearance of timeline item.
            </summary>
            <value>
            A string representing the CSS class to be applied to the item. The default value is an empty string.
            </value>
            <remarks>
            You can use this property to apply custom styles to individual items within the Timeline component by specifying a CSS class.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.TimelineItem.Disabled">
            <summary>
            Gets or sets a value indicating whether the timeline item is disabled.
            </summary>
            <value>
            <c>true</c> if the item is disabled; otherwise, <c>false</c>. The default value is <c>false</c>.
            </value>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.TimelineItem.OnAfterRender(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:Syncfusion.Blazor.Layouts.TimelineItems">
            <summary>
            Represents a collection of <see cref="T:Syncfusion.Blazor.Layouts.TimelineItem"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.Layouts.TimelineItems.ChildContent">
            <exclude/>
            <summary>
            Gets or sets the child content for the TimelineItem (Child) from the Timeline(Parent) .
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.TimelineItems.UpdateChildProperty(Syncfusion.Blazor.Layouts.TimelineItem)">
            <summary>
            Updates the Timeline with list of items from the TimelineItem tag directive when they are rendered.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.Layouts.TimelineItems.RemoveChildProperty(Syncfusion.Blazor.Layouts.TimelineItem)">
            <summary>
            Updates the Timeline with list of items from the TimelineItem tag directive when they are removed.
            </summary>
        </member>
    </members>
</doc>
