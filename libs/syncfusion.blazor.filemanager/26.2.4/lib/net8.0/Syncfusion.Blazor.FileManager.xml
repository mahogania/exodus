<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.Blazor.FileManager</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.Blazor.FileManager.SortOrder">
            <summary>
            Defines the sorting order of the folders and files.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.SortOrder.Ascending">
            <summary>
            Indicates that the folders and files are sorted in the ascending order in FileManager component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.SortOrder.Descending">
            <summary>
            Indicates that the folders and files are sorted in the descending order.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.SortOrder.None">
            <summary>
            Indicates that the folders and files are not sorted.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.ViewType">
            <summary>
            Defines the view type of the FileManager.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.ViewType.LargeIcons">
            <summary>
            To display the folders and files in the large icon view.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.ViewType.Details">
            <summary>
            To display the folders and files in the details view.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.TextAlign">
            <summary>
            Defines alignments of text.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.TextAlign.Left">
            <summary>
            Represents the text alignment as left. The text content will be shown in the left side.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.TextAlign.Right">
            <summary>
            Represents the text alignment as Right. The text content will be shown in the right side.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.TextAlign.Center">
            <summary>
            Represents the text alignment as Center. The text content will be shown at the center.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.TextAlign.Justify">
            <summary>
            Represents the text alignment as Justify. The text will be aligned along the left margin.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FilterType">
            <summary>
            Specifies the filter type for Search settings of the File Manager.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.FilterType.Contains">
            <summary>
            Search the folders or files name which contains the typed characters.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.FilterType.StartsWith">
            <summary>
            Search the folders or files name which starts with the typed characters.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.FilterType.EndsWith">
            <summary>
            Search the folders or files name which ends with the typed characters.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.ClipMode">
            <summary>
            Defines the cell content's overflow mode. The available modes are
             `Clip` -  Truncates the cell content when it overflows its area.
             `Ellipsis` -  Displays ellipsis when the cell content overflows its area.
             `EllipsisWithTooltip` - Displays ellipsis when the cell content overflows its area
            also it will display tooltip while hover on ellipsis applied cell.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.ClipMode.Clip">
            <summary>
            Truncates the cell content when it overflows its area.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.ClipMode.Ellipsis">
            <summary>
            Displays ellipsis when the cell content overflows its area.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.FileManager.ClipMode.EllipsisWithTooltip">
            <summary>
            Displays ellipsis when the cell content overflows its area.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.AccessPermission">
            <summary>
            Represents the class for File Access Permission.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.AccessPermission.Copy">
            <summary>
            Gets or sets a value indicating whether the current item is allowed to be copied.
            </summary>
            <remarks>
            This property determines whether the current item has the necessary permissions to be copied.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.AccessPermission.Download">
            <summary>
            Gets or sets a value indicating whether the current item is allowed to be downloaded.
            </summary>
            <remarks>
            This property determines whether the current item has the necessary permissions to be downloaded.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.AccessPermission.Write">
            <summary>
            Gets or sets a value indicating whether the current item have write permission.
            </summary>
            <remarks>
            This property determines whether the current item has the necessary write permissions.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.AccessPermission.WriteContents">
            <summary>
            Gets or sets a value indicating whether the current item have WriteContents permission.
            </summary>
            <remarks>
            This property determines whether the current item has the necessary write permissions.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.AccessPermission.Read">
            <summary>
            Gets or sets a value indicating whether the current item have read permission.
            </summary>
            <remarks>
            This property determines whether the current item has the necessary read permissions.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.AccessPermission.Upload">
            <summary>
            Gets or sets a value indicating whether the current item has permission to be uploaded.
            </summary>
            <remarks>
            This property determines whether the current item has the necessary upload permissions.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.AccessPermission.Message">
            <summary>
            Gets or sets the message associated with the current item's permissions.
            </summary>
            <remarks>
            This property returns the message associated with the current item's permissions.
            </remarks>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileManagerResponse`1">
            <summary>
            Represents the class for FileManager Response data.
            </summary>
            <typeparam name="T">Specifies the TValue of the FileManager.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerResponse`1.CWD">
            <summary>
            Gets or sets the details of the current directory.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerResponse`1.Files">
            <summary>
            Gets or sets the details of the files/folders in the current directory.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerResponse`1.Error">
            <summary>
             Gets or sets the details of an error that occurred with the response.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerResponse`1.Details">
            <summary>
            Gets or sets the details of a file or folder.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent">
            <summary>
            Represents the class for FileManager Directory content.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.Path">
            <summary>
            Gets or sets the path for FileManager component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.Action">
            <summary>
            Gets or sets the corresponding File Operation name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.NewName">
            <summary>
            Gets or sets the new name value for a Rename operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.Names">
            <summary>
            Gets or sets the value of selected items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.Name">
            <summary>
            Gets or sets the value of selected item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.Size">
            <summary>
            Gets or sets the size of selected item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.PreviousName">
            <summary>
            Gets or sets the previous name value for a Rename operation.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.DateModified">
            <summary>
            Gets or sets the date modified value of a file item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.DateCreated">
            <summary>
            Gets or sets the date created value of a file item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.HasChild">
            <summary>
            Gets or sets a value indicating whether a file item has a child or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.IsFile">
            <summary>
            Gets or sets a value indicating whether the file item is file or folder.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.Type">
            <summary>
            Gets or sets the type of the file item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.Id">
            <summary>
            Gets or sets the id of the file item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.FilterPath">
            <summary>
            Gets or sets the filter path of the file item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.FilterId">
            <summary>
            Gets or sets the filter id of the file item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.ParentId">
            <summary>
            Gets or sets the parent id of the file item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.TargetPath">
            <summary>
            Gets or sets the target path of the file item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.RenameFiles">
            <summary>
            Gets or sets the renamed item file names.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.CaseSensitive">
            <summary>
            Gets or sets a value indicating whether the file item is case sensitive or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.SearchString">
            <summary>
            Gets or sets the search string for a file item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.ShowHiddenItems">
            <summary>
            Gets or sets a value indicating whether the user has permission to view hidden items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.Data">
            <summary>
            Gets or sets an array of data for file items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.TargetData">
            <summary>
            Gets or sets the target data for file items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDirectoryContent.Permission">
            <summary>
            Gets or sets the access permission for file items.
            </summary>
            <remarks>
            This property allows the user to get or set the access permission for file items.
            </remarks>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.DownloadData`1">
            <summary>
            Represents the class for DownloadData.
            </summary>
            <typeparam name="TValue">Specifies the TValue of the FileManager.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.DownloadData`1.Path">
            <summary>
            Gets or sets the path in which the download operation is performed.
            </summary>
            <remarks>
            The users can retrive the path of download operation here.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.DownloadData`1.Names">
            <summary>
            Gets or sets an array of downloading file names.
            </summary>
            <remarks>
            This property allows the user to get or set an array of downloading file names.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.DownloadData`1.DownloadFileDetails">
            <summary>
            Gets or sets the file details of the downloading files.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.BeforeDownloadEventArgs`1">
            <summary>
            Represents the class for BeforeDownload event arguments.
            </summary>
            <remarks>
            The Download operation is handled by using form submit and not by using Http request, so it is not possible to pass the HttpClientInstance here. 
            However, you can send custom values from client to server for Download operation by preventing our default download operation using args.Cancel in BeforeDownload event.
            Then you can trigger the customized download operation using an interop call where you can pass custom values to server side.
            </remarks>
            <typeparam name="TValue">Specifies the TValue of the FileManager.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforeDownloadEventArgs`1.Cancel">
            <summary>
            'true' if the download operation must be cancelled. Otherwise,false.
            </summary>
            <remarks>
            This allows the users to cancel the download of specific files or folders in required cases.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforeDownloadEventArgs`1.DownloadData">
            <summary>
            Gets or sets the data to be sent to the server when downloading files from the FileManager.
            </summary>
            <remarks>
            The <see cref="T:Syncfusion.Blazor.FileManager.DownloadData`1"/> class encapsulates the data required to perform a download operation on the FileManager. This property should be set to an instance of the <see cref="T:Syncfusion.Blazor.FileManager.DownloadData`1"/> class that specifies the file(s) to be downloaded, as well as any additional parameters that may be required by the server.
            When this property is set, the FileManager will send a request to the server to initiate the download. The server should respond with the requested file(s) in the appropriate format (e.g., as a byte array or as a file stream). The FileManager will then download the file(s) and provide them to the user for download.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforeDownloadEventArgs`1.HttpClientInstance">
            <summary>
            Gets or sets the HttpClient instance through which http request for the file providers are sent.
            </summary>
            <remarks>
            The users can pass the required JWT token or authentication token with this instance.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforeDownloadEventArgs`1.FileStream">
            <summary> 
            Gets or sets the file stream to be downloaded from the server. 
            </summary> 
            <value> 
            The file stream to download. 
            </value> 
            <remarks> 
            The users can pass the file stream to be downloaded from the server. 
            </remarks>  
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforeDownloadEventArgs`1.DownloadFileName">
            <summary> 
            Gets or sets the file name to be downloaded from the server. 
            </summary> 
            <value> 
            The file name to be downloaded. 
            </value> 
            <remarks> 
            The users can pass the file name to be downloaded from the server. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforeDownloadEventArgs`1.UseFormPost">
            <summary>        
            Gets or sets a value whether the download perform through form submit method or using HTTP client instance.
            </summary>
            <value>        
            <b>true</b> perform download operation using form submit method; otherwise perform download using HTTP client instance, <b>false</b>. The default value is <b>true</b>.
            </value> 
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.BeforeImageLoadEventArgs`1">
            <summary>
            Represents the class for BeforeImageLoad event arguments.
            </summary>
            <remarks>
            Custom header cannot be passed in GetImage request since it is processed using query string parameter.
            </remarks>
            <typeparam name="TValue">Specifies the TValue of the FileManager.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforeImageLoadEventArgs`1.FileDetails">
            <summary>
            Gets or sets the current rendering image item details as an array of JSON object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforeImageLoadEventArgs`1.ImageUrl">
            <summary>
            Gets or sets the URL of an image, along with any custom attributes that should be sent to the server.
            </summary>
            <remarks>
            The <see cref="P:Syncfusion.Blazor.FileManager.BeforeImageLoadEventArgs`1.ImageUrl"/> property is used to specify the URL of an image that should be displayed in the FileManager. 
            You can also include any custom attributes that should be sent to the server along with the image request, such as authentication tokens or session IDs. 
            The server can then use these attributes to customize the image response or perform additional validation before returning the image data.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforeImageLoadEventArgs`1.FileStream">
            <summary> 
            Gets or sets the image file stream to be loaded. 
            </summary> 
            <value> 
            The image file stream. 
            </value> 
            <remarks> 
            The users can pass the image file stream to be loaded with preview. 
            </remarks>  
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.BeforePopupOpenCloseEventArgs">
            <summary>
            Represents the class for BeforePopupOpenClose event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforePopupOpenCloseEventArgs.Cancel">
            <summary>
            Gets or sets a value indicating whether the FileManager should prevent the dialog from opening.
            </summary>
            <remarks>
            When the <see cref="P:Syncfusion.Blazor.FileManager.BeforePopupOpenCloseEventArgs.Cancel"/> property is set to <c>true</c>, the FileManager will prevent the dialog from opening. 
            This can be useful in situations where you want to disable file uploads or perform custom validation before the dialog is opened.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforePopupOpenCloseEventArgs.PopupName">
             <summary>
             Gets or sets the name of the current FileManager dialog action.
             </summary>
             <remarks>
             Returns the following actions name
             <list type="bullet">
             <item><description>Upload</description></item>
             <item><description>Create Folderr</description></item>
             <item><description>Image Preview</description></item>
             <item><description>File Details</description></item>
             <item><description>Rename</description></item>
            <item><description>Delete</description></item> 
             <item><description>Duplicate Items</description></item>
             <item><description>Errors</description></item>
             </list>
             </remarks>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.BeforeSendEventArgs">
            <summary>
            Represents the class for BeforeSend event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforeSendEventArgs.Action">
             <summary>
             Gets or sets the name of the AJAX action that will be performed by the FileManager.
             </summary>
             <remarks>
             The <see cref="P:Syncfusion.Blazor.FileManager.BeforeSendEventArgs.Action"/> property specifies the name of the AJAX action that is performed by the FileManager when the user performs an action such as uploading a file, renaming a file, or deleting a file. 
             This property is set automatically by the FileManager when the user interacts with the interface, but can also be set manually in custom code.
             Returns the following actions name
             <list type="bullet">
             <item><description>Upload</description></item>
             <item><description>Create Folderr</description></item>
             <item><description>Image Preview</description></item>
             <item><description>File Details</description></item>
             <item><description>Rename</description></item>
            <item><description>Delete</description></item> 
             <item><description>Duplicate Items</description></item>
             <item><description>Errors</description></item>
             </list>
             </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforeSendEventArgs.AjaxSettings">
            <summary>
            Gets or sets the AJAX settings for the FileManager.
            </summary>
            <remarks>
            The <see cref="P:Syncfusion.Blazor.FileManager.BeforeSendEventArgs.AjaxSettings"/> property is used to specify the AJAX settings for the FileManager. These settings include details such as the URL to which the FileManager should send AJAX requests, 
            the HTTP method to use for these requests (e.g. POST or GET), and any additional headers or parameters that should be included with the requests.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforeSendEventArgs.CustomData">
            <summary>
            Gets or sets the custom data to be sent to the server with each AJAX request.
            </summary>
            <remarks>
            The <see cref="P:Syncfusion.Blazor.FileManager.BeforeSendEventArgs.CustomData"/> property is used to specify custom data that should be sent to the server with each AJAX request made by the FileManager. 
            This data can be used by the server-side code to customize the behavior of the FileManager or perform additional processing on the uploaded files.
            To set the custom data for the FileManager, create a new <see cref="T:System.Collections.Generic.Dictionary`2"/> object and add the desired key-value pairs. Then, assign this object to the <see cref="P:Syncfusion.Blazor.FileManager.BeforeSendEventArgs.CustomData"/> property of the FileManager.
            Note that the keys and values in the <see cref="P:Syncfusion.Blazor.FileManager.BeforeSendEventArgs.CustomData"/> dictionary must be serializable, since they will be sent to the server as part of the AJAX request.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforeSendEventArgs.HttpClientInstance">
            <summary>
            Gets or sets the HttpClient instance through which http request for the file providers are sent.
            </summary>
            <remarks>
            The users can pass the required JWT token or authentication token with this instance.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.BeforeSendEventArgs.Cancel">
            <summary>
            Gets or sets a value that indicates whether to cancel the corresponding AJAX request.
            </summary>
            <remarks>
            'true' if the AJAX request to server must be cancelled; otherwise 'false'
            </remarks>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.ReadEventArgs`1">
            <summary> 
            Provides information about the <see cref="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.OnRead"/> event callback. 
            </summary> 
            <typeparam name="TValue">Specifies the TValue of FileManager events.</typeparam> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ReadEventArgs`1.Path">
            <summary>  
            Gets the path for the FileManager component.  
            </summary>  
            <value>  
            Represents the relative or absolute path of the directory.  
            </value>  
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ReadEventArgs`1.Folder">
            <summary>  
            Gets the item details of the directory where the read action is executed.  
            </summary>  
            <value>  
            Represents the item details of the read directory.  
            </value>  
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ReadEventArgs`1.Response">
             <summary> 
             Gets or sets the read action result. 
             </summary> 
             <value> 
             Represents the read action result. 
             </value> 
            <remarks> 
             To map the file action response to render flat data in the component. 
             </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ReadEventArgs`1.Cancel">
            <summary> 
            Gets or sets a value indicating whether to cancel the corresponding read action. 
            </summary> 
            <value> 
            'true' if the read action must be cancelled; otherwise 'false'. 
            </value> 
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.ItemsDeleteEventArgs`1">
            <summary> 
            Provides information about the <see cref="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.ItemsDeleting"/> event callback. 
            </summary> 
            <typeparam name="TValue">Specifies the TValue of FileManager events.</typeparam> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemsDeleteEventArgs`1.Path">
            <summary>  
            Gets the path for the FileManager component.  
            </summary>  
            <value>  
            Represents the relative or absolute path of the directory.  
            </value>  
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemsDeleteEventArgs`1.Files">
            <summary> 
            Gets the details of the file or folder in which the delete action is executed. 
            </summary> 
            <value> 
            Represents the file details of the item to be deleted. 
            </value> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemsDeleteEventArgs`1.Response">
            <summary> 
            Gets or sets the delete action result. 
            </summary> 
            <value> 
            Represents the delete action result. 
            </value> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemsDeleteEventArgs`1.Cancel">
            <summary> 
            Gets or sets a value indicating whether to cancel the corresponding delete action. 
            </summary> 
            <value> 
            'true' if the delete action must be cancelled; otherwise 'false'. 
            </value> 
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FolderCreateEventArgs`1">
            <summary> 
            Provides information about the <see cref="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.FolderCreating"/> event callback. 
            </summary> 
            <typeparam name="TValue">Specifies the TValue of FileManager events.</typeparam> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FolderCreateEventArgs`1.Path">
            <summary>  
            Gets the path for the FileManager component.  
            </summary>  
            <value>  
            Represents the relative or absolute path of the directory.  
            </value>  
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FolderCreateEventArgs`1.ParentFolder">
            <summary> 
            Gets the parent folder details in which the new folder is created. 
            </summary> 
            <value> 
            Represents the folder details within which the new folder will be created. 
            </value> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FolderCreateEventArgs`1.FolderName">
            <summary> 
            Gets or sets the newly created folder name. 
            </summary> 
            <value> 
            Represents the created folder name. 
            </value> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FolderCreateEventArgs`1.Response">
            <summary> 
            Gets or sets the folder creation action result. 
            </summary> 
            <value> 
            Represents the folder creation action result. 
            </value> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FolderCreateEventArgs`1.Cancel">
            <summary> 
            Gets or sets a value indicating whether to cancel the corresponding new folder creation. 
            </summary> 
            <value> 
            'true' if the new folder creation must be cancelled; otherwise 'false'. 
            </value> 
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.SearchEventArgs`1">
            <summary> 
            Provides information about the <see cref="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.Searching"/> event callback. 
            </summary> 
            <typeparam name="TValue">Specifies the TValue of FileManager events.</typeparam> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SearchEventArgs`1.Path">
            <summary>  
            Gets the path for the FileManager component.  
            </summary>  
            <value>  
            Represents the relative or absolute path of the directory.  
            </value>  
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SearchEventArgs`1.SearchText">
            <summary> 
            Gets or sets the search text for a file item. 
            </summary> 
            <value> 
            Represents the search text for a file or folder. 
            </value> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SearchEventArgs`1.Response">
            <summary> 
            Gets or sets the search action response. 
            </summary> 
            <value> 
            Represents the search action response. 
            </value> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SearchEventArgs`1.Cancel">
            <summary> 
            Gets or sets a value indicating whether to cancel the corresponding search operation. 
            </summary> 
            <value> 
            'true' if the search action must be cancelled; otherwise 'false'. 
            </value> 
            <remarks> 
            Default search can be prevented using this option and custom searching can be performed. 
            </remarks> 
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.SearchedEventArgs`1">
            <summary> 
            Provides information about the <see cref="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.Searched"/> event callback. 
            </summary> 
            <typeparam name="TValue">Specifies the TValue of FileManager events.</typeparam> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SearchedEventArgs`1.SearchResult">
            <summary> 
            Gets the current search action result. 
            </summary> 
            <value> 
            Represents the current search action result. 
            </value> 
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.ItemRenameEventArgs`1">
            <summary> 
            Provides information about the <see cref="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.ItemRenaming"/> event callback. 
            </summary> 
            <typeparam name="TValue">Specifies the TValue of FileManager events.</typeparam> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemRenameEventArgs`1.Path">
            <summary>  
            Gets the path for the FileManager component.  
            </summary>  
            <value>  
            Represents the relative or absolute path of the directory.  
            </value>  
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemRenameEventArgs`1.NewName">
            <summary> 
            Gets or sets the new name of a file or folder. 
            </summary> 
            <value> 
            Represents the new name of a file or folder. 
            </value> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemRenameEventArgs`1.ShowFileExtension">
            <summary> 
            Gets or sets a value indicating whether to show file extensions. 
            </summary> 
            <value> 
            Represents a value indicating whether to show file extensions. 
            </value> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemRenameEventArgs`1.File">
            <summary> 
            Gets the details of the file or folder in which the rename action is executed. 
            </summary> 
            <value> 
            Represents the details of item to be renamed. 
            </value> 
            <remarks> 
            The old name of the renaming file can be retrieved here. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemRenameEventArgs`1.Response">
            <summary> 
            Gets or sets the rename action result. 
            </summary> 
            <value> 
            Represents the rename action result. 
            </value> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemRenameEventArgs`1.Cancel">
            <summary> 
            Gets or sets a value indicating whether to cancel the corresponding rename action. 
            </summary> 
            <value> 
            'true' if the rename action must be cancelled; otherwise 'false'. 
            </value> 
            <remarks> 
            Rename action for specific files can be restricted using this option. 
            </remarks> 
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.ItemsMoveEventArgs`1">
            <summary> 
            Provides information about the <see cref="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.ItemsMoving"/> event callback. 
            </summary> 
            <typeparam name="TValue">Specifies the TValue of FileManager events.</typeparam> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemsMoveEventArgs`1.Path">
            <summary>  
            Gets the path for the FileManager component.  
            </summary>  
            <value>  
            Represents the relative or absolute path of the directory.  
            </value>  
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemsMoveEventArgs`1.IsCopy">
            <summary>  
            Gets whether the copy action is performed in the FileManager component.  
            </summary>  
            <value>  
            ‘true’ if the copy action takes place; ‘false’ if it is a cut action. 
            </value>  
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemsMoveEventArgs`1.TargetPath">
            <summary> 
            Gets or sets the target path of the file item where the file item is intended to be moved 
            </summary> 
            <value> 
            Represents the target path of the file item. 
            </value> 
            <remarks> 
            This property provides the destination path for the cut or copied item to be moved. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemsMoveEventArgs`1.Files">
            <summary> 
            Gets the file or folder details in which the cut or copy action is executed. 
            </summary> 
            <value> 
            Represents the file or folder details of cut or copy action. 
            </value> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemsMoveEventArgs`1.TargetData">
            <summary> 
            Gets or sets the complete item data of the target folder to which the item is being moved. 
            </summary> 
            <value> 
            Represents the target data for files or folders. 
            </value> 
            <remarks> 
                The complete details of target item can be retrieved here. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemsMoveEventArgs`1.Response">
            <summary> 
            Gets or sets the move action result. 
            </summary> 
            <value> 
            Represents the move action result. 
            </value> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemsMoveEventArgs`1.Cancel">
            <summary> 
            Gets or sets a value indicating whether to cancel the corresponding move action. 
            </summary> 
            <value> 
            'true' if the moving action must be cancelled; otherwise 'false'. 
            </value> 
            <remarks> 
            Moving action can be prevented here for specific file or folders using this option. 
            </remarks> 
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.ItemsUploadEventArgs`1">
            <summary> 
            Provides information about the <see cref="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.ItemsUploading"/> event callback. 
            </summary> 
            <typeparam name="TValue">Specifies the TValue of FileManager events.</typeparam> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemsUploadEventArgs`1.Path">
            <summary> 
            Gets the path in which the upload operation is performed. 
            </summary> 
            <value>  
            Represents the relative or absolute path of the directory.  
            </value> 
            <remarks> 
            Users can retrieve the path of the upload operation here. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemsUploadEventArgs`1.Folder">
            <summary> 
            Gets the folder details within which the file or folder is to be uploaded. 
            </summary> 
            <value> 
            Represents the folder details to which the new items are uploaded. 
            </value> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemsUploadEventArgs`1.CustomData">
            <summary> 
            Gets or sets the custom data to be sent to the server with each Http Client request. 
            </summary> 
            <remarks> 
            The CustomData property is used to specify custom data that should be sent to the server with each Http Client request made by the FileManager. 
            This data can be used by the server-side code to customize the behavior of the FileManager or perform additional processing on the uploaded files. 
            To set the custom data for the FileManager, create a new <see cref="T:System.Collections.Generic.Dictionary`2"/> object and add the desired key-value pairs. Then, assign this object to the CustomData property of the FileManager. 
            Note that the keys and values in the CustomData dictionary must be serializable, since they will be sent to the server as part of the Http Client request. This is applicable only when using  <see cref= "T:Syncfusion.Blazor.FileManager.FileManagerAjaxSettings"/> 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemsUploadEventArgs`1.Cancel">
            <summary> 
            Gets or sets a value indicating whether to cancel the corresponding upload action. 
            </summary> 
            <value> 
            'true' if the upload action to the server must be cancelled; otherwise 'false'. 
            </value> 
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.ItemsDeletedEventArgs`1">
            <summary> 
            Provides information about the <see cref="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.ItemsDeleted"/> event callback. 
            </summary> 
            <typeparam name="TValue">Specifies the TValue of FileManager events.</typeparam> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemsDeletedEventArgs`1.Files">
            <summary> 
            Gets the deleted file or folder details 
            </summary> 
            <value> 
            The deleted file or folder. 
            </value> 
            <remarks> 
            This allows the users to obtain the deleted item details.  
            </remarks> 
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FolderCreatedEventArgs`1">
            <summary> 
            Provides information about the <see cref="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.FolderCreated"/> event callback. 
            </summary> 
            <typeparam name="TValue">Specifies the TValue of FileManager events.</typeparam> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FolderCreatedEventArgs`1.Folder">
            <summary> 
            Gets the created folder details 
            </summary> 
            <value> 
            The created folder. 
            </value> 
            <remarks> 
            This allows the users to obtain the created folder details.  
            </remarks> 
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.ItemRenamedEventArgs`1">
            <summary> 
            Provides information about the <see cref="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.ItemRenamed"/> event callback. 
            </summary> 
            <typeparam name="TValue">Specifies the TValue of FileManager events.</typeparam> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemRenamedEventArgs`1.File">
            <summary> 
            Gets the renamed file details 
            </summary> 
            <value>
            The renamed file. 
            </value> 
            <remarks> 
            This allows the users to obtain the renamed item details.  
            </remarks> 
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.ItemsMovedEventArgs`1">
            <summary> 
            Provides information about the <see cref="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.ItemsMoved"/> event callback. 
            </summary> 
            <typeparam name="TValue">Specifies the TValue of FileManager events.</typeparam> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemsMovedEventArgs`1.Files">
            <summary> 
            Gets the moved file or folder details 
            </summary> 
            <value> 
            The file or folder moved to another path. 
            </value> 
            <remarks> 
            This allows the users to obtain the moved file or folder details.  
            </remarks> 
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.ItemsUploadedEventArgs`1">
            <summary> 
            Provides information about the <see cref="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.ItemsUploaded"/> event callback. 
            </summary> 
            <typeparam name="TValue">Specifies the TValue of FileManager events. </typeparam> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemsUploadedEventArgs`1.Path">
            <summary> 
            Gets the path in which the upload operation is performed. 
            </summary> 
            <value>  
            Represents the relative or absolute path of the directory.  
            </value> 
            <remarks> 
            Users can retrieve the path of the upload operation here. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemsUploadedEventArgs`1.Files">
            <summary> 
            Gets the list of the uploaded files or folders details from the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component. 
            </summary> 
            <value>  
            List of uploaded files or folders.  
            </value> 
            <remarks> 
            User can retrieve the uploaded files or folders details from the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemsUploadedEventArgs`1.IsSelected">
            <summary> 
            Gets or sets a value indicating whether the uploaded file can be selected after the upload action will be completed successfully 
            and rendered within the FileManager component. 
            </summary> 
            <value> 
            `true`, if the uploaded file will be selected. The default value is `false`. 
            </value> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ItemsUploadedEventArgs`1.AutoDialogClose">
            <summary>         
            Gets or sets a value whether the upload file dialog will be closed automatically or not after the upload action gets completed. 
            </summary> 
            <value>         
            <b>true</b> if the upload dialog will be closed automatically; otherwise, <b>false</b>. The default value is <b>false</b>. 
            </value>     
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.ErrorDetails">
            <summary>
            Represents the class for Error Details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ErrorDetails.Code">
            <summary>
            Gets or sets the error code associated with the error.
            </summary>
            <remarks>
            The error code is a unique identifier for the error that occurred. This code can be used to look up more information about the error in a database or documentation.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ErrorDetails.Message">
            <summary>
            Gets or sets the error message associated with the error.
            </summary>
            <remarks>
            The error message is a human-readable description of the error that occurred. This message can be displayed to the user or used for logging purposes.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ErrorDetails.FileExists">
            <summary>
            Gets or sets a list of file or folder names that already exist in the current path and caused the error.
            </summary>
            <remarks>
            If the error occurred because a file or folder already exists in the current path, the names of those files or folders will be included in this list. If the error did not occur because of a duplicate name, this list will be empty.
            </remarks>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FailureEventArgs">
            <summary>
            Represents the class for Failure event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FailureEventArgs.Action">
            <summary>
            Gets or sets the name of the AJAX action that is failed.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FailureEventArgs.Error">
            <summary>
            Gets or sets the details of the error that occurred during the AJAX action.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileDetails">
            <summary>
            Represents the class for File details.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileDetails.Created">
            <summary>
            Gets or sets the file item created value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileDetails.IsFile">
            <summary>
            Gets or sets a value that indicates whether the file item is a file or folder.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileDetails.Location">
            <summary>
            Gets or sets the file item location.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileDetails.Modified">
            <summary>
            Gets or sets the modified details of file item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileDetails.MultipleFiles">
            <summary>
            Gets or sets a value indicating whether the file item contains more than one value.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileDetails.Name">
            <summary>
            Gets or sets the file item name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileDetails.Permission">
            <summary>
            Gets or sets the permission of the file item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileDetails.Size">
            <summary>
            Gets the size of file item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileDragEventArgs`1">
            <summary>
            Represents the class for Drag Event arguments.
            </summary>
            <typeparam name="TValue">Specifies the TValue of the FileManager.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileDragEventArgs`1.Cancel">
            <summary>
            'true' if the file dragging must be cancelled; Otherwise, 'false'.
            </summary>
            <remarks>
            This option allows users to prevent dragging of any particular file or folder in required scenarios.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileDragEventArgs`1.FileDetails">
            <summary>
            Gets the dragged file details as an array of JSON object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileDragEventArgs`1.Left">
            <summary>
            Gets the horizontal position (in pixels) Client X value of target element.
            </summary>
            <remarks>
            This value is returned internally by the FileManager component
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileDragEventArgs`1.Top">
            <summary>
            Gets the vertical position (in pixels) Client Y value of target element.
            </summary>
            <remarks>
            This value is returned internally by the FileManager component
            </remarks>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileLoadEventArgs`1">
            <summary>
            Represents the class for FileLoad event arguments.
            </summary>
            <typeparam name="TValue">Specifies the TValue of the FileManager.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileLoadEventArgs`1.FileDetails">
            <summary>
            Gets the current rendering item details as JSON object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileLoadEventArgs`1.Module">
            <summary>
            Gets the name of the rendering module in FileManager.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileOpenEventArgs`1">
            <summary>
            Represents the class for FileOpen event arguments.
            </summary>
            <typeparam name="TValue">Specifies the TValue of the FileManager.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileOpenEventArgs`1.Cancel">
            <summary>
            'true' if the file open action must be cancelled. Otherwise, 'false'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileOpenEventArgs`1.FileDetails">
            <summary>
            Gets the currently selected item as JSON object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileOpenEventArgs`1.Module">
            <summary>
            Gets the name of the target module in FileManager.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileSelectEventArgs`1">
            <summary>
            Represents the class for FileSelect event arguments.
            </summary>
            <typeparam name="TValue">Specifies the TValue of the FileManager.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileSelectEventArgs`1.Action">
            <summary>
            Gets the name of action like select or unselect.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileSelectEventArgs`1.FileDetails">
            <summary>
            Gets the currently selected item as JSON object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileSelectEventArgs`1.IsInteracted">
            <summary>
            Gets or sets whether the event is triggered by interaction or not.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileSelectionEventArgs`1">
            <summary>
            Represents the class for FileSelection event arguments.
            </summary>
            <typeparam name="TValue">Specifies the TValue of the FileManager.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileSelectionEventArgs`1.Action">
            <summary>
            Gets the name of action like select or unselect.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileSelectionEventArgs`1.Cancel">
            <summary>
            'true' if the selection must be cancelled; Otherwise 'false'
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileSelectionEventArgs`1.FileDetails">
            <summary>
            Gets the currently selected item as JSON object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileSelectionEventArgs`1.IsInteracted">
            <summary>
            Gets or sets whether event is triggered by interaction or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileSelectionEventArgs`1.Event">
            <summary>
            Gets the Mouse Event
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.MenuClickEventArgs`1">
            <summary>
            Represents the class for MenuClick event arguments.
            </summary>
            <typeparam name="TValue">Specifies the TValue of the FileManager.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuClickEventArgs`1.Cancel">
            <summary>
            'true' if the menu click must be cancelled; Otherwise, 'false'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuClickEventArgs`1.FileDetails">
            <summary>
            Gets or sets the currently selected folder or file items as an array of JSON object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuClickEventArgs`1.Item">
            <summary>
            Gets the currently clicked context menu item as JSON object.
            </summary>
            <remarks>
            This allows the users to perform customizations based on the item clicked.
            </remarks>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.MenuOpenEventArgs`1">
            <summary>
            Represents the class for MenuOpen event arguments.
            </summary>
            <typeparam name="TValue">Specifies the TValue of the FileManager.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuOpenEventArgs`1.Cancel">
            <summary>
            'true' if the context menu opening on file or folder must be cancelled; Otherwise,'false'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuOpenEventArgs`1.Element">
            <summary>
            Gets the current context menu element.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuOpenEventArgs`1.FileDetails">
            <summary>
            Gets or sets the target folder or file item as an array of JSON object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuOpenEventArgs`1.IsSubMenu">
            <summary>
            Gets whether the current context menu is sub-menu or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuOpenEventArgs`1.Items">
            <summary>
            Gets the current context menu items as JSON object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuOpenEventArgs`1.MenuType">
            <summary>
            Gets the current context menu type based on current target.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.PopupOpenCloseEventArgs">
            <summary>
            Represents the class for PopupOpenClose event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.PopupOpenCloseEventArgs.PopupName">
            <summary>
            Gets the dialog name associated with the current action.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.SuccessEventArgs`1">
            <summary>
            Provides information about the <see cref="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.OnSuccess"/> event callback.
            </summary>
            <typeparam name="TValue">Specifies the TValue of FileManager events.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SuccessEventArgs`1.Action">
            <summary>
            Gets the name of the current success AJAX action in the FileManager component.
            </summary>
            <remarks>
            This property can only be set internally by the component.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SuccessEventArgs`1.Result">
            <summary>
            Gets or sets the AJAX details that are sent to server.
            </summary>
            <remarks>
            This allows the users to obtain response here.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SuccessEventArgs`1.UploadResult">
            <summary>
            Gets the result of the upload operation.
            </summary>
            <remarks>
            This property can only be set internally by the component.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SuccessEventArgs`1.IsSelected">
            <summary>
            Gets or sets a value indicating whether the uploaded file can be selected after the upload action will be completed successfully
            and rendered within the FileManager component.
            </summary>
            <value>
            `true`, if the uploaded file will be selected. The default value is `false`.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SuccessEventArgs`1.AutoDialogClose">
            <summary>        
            Gets or sets a value whether the upload file dialog will be closed automatically or not after the upload action gets completed.
            </summary>
            <value>        
            <b>true</b> if the upload dialog will be closed automatically; otherwise, <b>false</b>. The default value is <b>false</b>.
            </value>    
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.ToolbarClickEventArgs`1">
            <summary>
            Represents the class for ToolbarClick event arguments.
            </summary>
            <typeparam name="TValue">Specifies the TValue of the FileManager.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolbarClickEventArgs`1.Cancel">
            <summary>
            'true' if the toolbar click must be cancelled; Otherwise, 'false'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolbarClickEventArgs`1.FileDetails">
            <summary>
            Gets the currently selected folder or file items as an array of JSON object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolbarClickEventArgs`1.Item">
            <summary>
            Gets the currently clicked toolbar item as JSON object.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.ToolBarItemModel">
            <summary>
            Represents the class for a Toolbar item model.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.Click">
            <summary>
            Gets or sets an event callback that is raised when a toolbar item is clicked.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.Align">
             <summary>
             Gets or sets the location for aligning Toolbar items on the Toolbar. Each command will be aligned according to the `align` property.
            </summary>
            <remarks>
             Possible values are:
             - Left: To align commands to the left side of the Toolbar.
             - Center: To align commands at the center of the Toolbar.
             - Right: To align commands to the right side of the Toolbar.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.CssClass">
            <summary>
            Gets or sets single/multiple classes (separated by space) to be used for customization of commands.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.Disabled">
            <summary>
            Gets or sets a value that denotes whether an item should be disabled or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.HtmlAttributes">
            <summary>
            Gets or sets the htmlAttributes used to add custom attributes to Toolbar command.
            Supports HTML attributes such as style, class, etc.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.Id">
            <summary>
            Gets or sets the unique ID to be used with button or input element of Toolbar items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.Overflow">
            <summary>
            Gets or sets the Toolbar command display area when an element's content is too large to fit available space.
            </summary>
            <remarks>
            This is applicable only to `popup` mode. Possible values are:
            - Show:  Always shows the item as the primary priority on the Toolbar.
            - Hide: Always shows the item as the secondary priority on the popup.
            - None: No priority for display, and as per normal order moves to popup when content exceeds.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.PrefixIcon">
            <summary>
            Gets or sets single/multiple classes separated by space used to specify an icon for the button.
            The icon will be positioned before the text content if text is available, otherwise the icon alone will be rendered.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.ShowAlwaysInPopup">
            <summary>
            Gets or sets the priority of items to display it in popup always.
            It allows to maintain toolbar item on popup always but it does not work for toolbar priority items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.ShowTextOn">
            <summary>
            Gets or sets where the button text will be displayed on popup mode of the Toolbar.
            </summary>
            <remarks>
            Possible values are:
            - Toolbar:  Text will be displayed on Toolbar only.
            - Overflow: Text will be displayed only when content overflows to popup.
            - Both: Text will be displayed on popup and Toolbar.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.SuffixIcon">
            <summary>
            Gets or sets single/multiple classes separated by space used to specify an icon for the button.
            The icon will be positioned after the text content if text is available.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.Template">
            <summary>
            Gets or sets the HTML element/element ID as a string that can be added as a Toolbar command.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.Name">
            <summary>
            Gets or sets the custom tool name.
            </summary>
            <value>
            Accepts a string value. The default value is <c>String.Empty</c>.
            </value>
            <remarks>
            To map the Template, use the same 'Name' property in the tags and items list.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.Text">
            <summary>
            Gets or sets the text to be displayed on the Toolbar button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.TooltipText">
            <summary>
            Gets or sets the text to be displayed on hovering the Toolbar button.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.Type">
            <summary>
            Gets or sets the types of command to be rendered in the Toolbar.
            </summary>
            <remarks>
            Supported types are:
            - Button: Creates the Button control with its given properties like text, prefixIcon, etc.
            - Separator: Adds a horizontal line that separates the Toolbar commands.
            - Input: Creates an input element that is applicable to template rendering with Syncfusion components like DropDownList,
            AutoComplete, etc.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.Visible">
            <summary>
            Gets or sets a value that denotes whether an item should be hidden or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolBarItemModel.Width">
            <summary>
            Gets or sets the width of the Toolbar button commands.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuItemModel.ChildContent">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuItemModel.IconCss">
            <summary>
            Gets or sets the class/multiple classes separated by a space for the menu item that is used to include an icon.
            Menu item can include font icon and sprite image.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuItemModel.Id">
            <summary>
            Gets or sets the id for menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuItemModel.Items">
            <summary>
            Gets or sets the sub menu items that is the array of MenuItem.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuItemModel.Separator">
            <summary>
            Gets or sets the separator between menu items. Separator are either horizontal or vertical lines used to group menu items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuItemModel.Disabled">
            <summary>
            Gets or sets a value to enable or disable the menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuItemModel.Hidden">
            <summary>
            Gets or sets a value to hide or show the menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuItemModel.Text">
            <summary>
            Gets or sets the text for menu item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuItemModel.Url">
            <summary>
            Gets or sets the URL for menu item that creates the anchor link to navigate to the url provided.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.MenuItemModel.HtmlAttributes">
            <summary>
            Gets or sets the additional HTML attributes such as style, title etc., to the menu item
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.ToolbarCreateEventArgs">
            <summary>
            Represents the class for ToolbarCreate event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ToolbarCreateEventArgs.Items">
            <summary>
            Gets or sets an array of items that is used to configure toolbar content.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.ActionEventArgs">
            <summary>
            Represents the class that denotes an event of the current action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ActionEventArgs.Name">
            <summary>
            Gets or sets the Event name.
            </summary>
            <remarks>
            This is set internally from the FileManager.
            </remarks>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.UploadListCreateArgs">
            <summary>
            Represents the class for UploadListCreate event arguments.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.UploadListCreateArgs.FileInfo">
            <summary>
            Gets or sets the current rendering file item data as file object.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.UploadListCreateArgs.Index">
            <summary>
            Gets the index of the file item in the file list.
            </summary>
            <remarks>
            This allows users to find the index of file(selected to upload) and this is set internally.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.UploadListCreateArgs.IsPreload">
            <summary>
            Gets or sets whether the file is preloaded.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.ValidationMessages">
            <summary>
            Represents the class for min / max size validation messages.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ValidationMessages.MaxSize">
            <summary>
            Gets or sets the maximum file size validation message, if selected file size is greater than specified maxSize property.
            </summary>
            <remarks>
            If a maxSize property is specified and user selects a file with a size greater than that, this property will contain the validation message to be displayed to the user.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.ValidationMessages.MinSize">
            <summary>
            Gets or sets the minimum file size validation message, if selected file size is less than the specified minSize property.
            </summary>
            <remarks>
            If a minSize property is specified and user selects a file with a size less than that, this property will contain the validation message to be displayed to the user.
            </remarks>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileManagerAjaxSettings">
            <summary>
            Defines the Ajaxsettings for the filemanager component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerAjaxSettings.DownloadUrl">
            <summary>
            Specifies URL to download the files from server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerAjaxSettings.GetImageUrl">
            <summary>
            Specifies URL to get the images from server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerAjaxSettings.UploadUrl">
            <summary>
            Specifies URL to upload the files to server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerAjaxSettings.Url">
            <summary>
            Specifies URL to read the files from server.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerAjaxSettings.HttpClientInstance">
            <summary>
            Gets or sets HttpClient instance to be used by FileManager.
            </summary>
            <value>
            The HttpClient instance. The default instance has a timeout of 3 minutes.
            </value>
            <remarks>
            Use this property to bind the globally injected <code>HttpClient</code> instance from your application to the FileManager component. 
            This approach ensures the use of a single HTTP client instance throughout your application. 
            </remarks>
            <example>
            <code><![CDATA[
            @inject HttpClient httpClient;
            <SfFileManager TValue = "FileManagerDirectoryContent" >
                < FileManagerAjaxSettings HttpClientInstance="@httpClient" Url="/api/SampleData/FileOperations" DownloadUrl="/api/SampleData/Download" UploadUrl="/api/SampleData/Upload" GetImageUrl="/api/SampleData/GetImage" />
            </ SfFileManager >
            ]]></code>
            </example>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerAjaxSettings.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerAjaxSettings.Dispose(System.Boolean)">
            <summary>
            Dispose unmanaged resources in the component.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileManagerColumn">
            <summary>
            Defines the columns settings for the each column in details view of filemanager component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.AllowResizing">
            <summary>
            Allows to disables or enables resize option of a particular column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.AllowSorting">
            <summary>
            Allows to disables or enables sorting option of a particular column.
            By default all columns are sortable.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.CustomAttributes">
            <summary>
            The CSS styles and attributes of the content cells of a particular column can be customized.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.Field">
            <summary>
            Defines the field name of column which is mapped with mapping name of DataSource.
            The bounded columns can be sort, filter and group etc.,
            The `Field` name must be a valid JavaScript identifier,
            the first character must be an alphabet and should not contain spaces and special characters.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.Format">
            <summary>
            It is used to change display value with the given format and does not affect the original data.
            Gets the format from the user which can be standard or custom.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.HeaderTemplate">
            <summary>
            Defines the column template as string or HTML element ID which is used to add customized element in the column header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.HeaderText">
            <summary>
            Defines the header text of column which is used to display in column header.
            If `HeaderText` is not defined, then field name value will be assigned to header text.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.HeaderTextAlign">
            <summary>
            Define the alignment of column header which is used to align the text of column header.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.HideAtMedia">
            <summary>
            Column visibility can change based on Media Queries.
            HideAtMedia accepts only valid Media Queries.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.MaxWidth">
            <summary>
            Defines the maximum width of the column in pixel or percentage, which will restrict resizing beyond this pixel or percentage.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.MinWidth">
            <summary>
            Defines the minimum width of the column in pixels or percentage.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.Template">
            <summary>
            Defines the column template that renders customized element in each cell of the column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.TextAlign">
            <summary>
            Defines the alignment of the column in both header and content cells.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.Type">
            <summary>
            Defines the data type of the column.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.Width">
            <summary>
            Defines the width of the column in pixels or percentage.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumn.SortComparer">
            <summary>
            Gets or sets the custom sort comparer object to implement own sorting logic.
            </summary>
            <value>
            Name of sort comparer object to be executed. The default value is null.
            </value>
            <remarks>
            Custom sort comparer class should be implemented in the interface [IComparer](https://learn.microsoft.com/en-us/dotnet/api/system.collections.generic.icomparer-1?view=net-8.0).
            Custom sort comparer can be used to modify the default sorting logic for details view in File Manager.
            </remarks> 
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerColumn.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerColumn.Dispose(System.Boolean)">
            <summary>
            Dispose unmanaged resources in the component.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileManagerColumns">
            <summary>
            Defines the columns settings for the details view of filemanager component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerColumns.ChildContent">
            <exclude/>
            <summary>
            Update child content from parent component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerColumns.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerColumns.Dispose(System.Boolean)">
            <summary>
            Dispose unmanaged resources in the component.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileManagerContextMenuSettings">
            <summary>
            Defines the context menu settings for the filemanager component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerContextMenuSettings.File">
            <summary>
            Specifies the array of string that is used to configure file items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerContextMenuSettings.Folder">
            <summary>
            An array of string that is used to configure folder items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerContextMenuSettings.Layout">
            <summary>
            An array of string that is used to configure layout items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerContextMenuSettings.Visible">
            <summary>
            Enables or disables the ContextMenu.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerContextMenuSettings.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerContextMenuSettings.OnParametersSetAsync">
            <summary>
            Method invoked when any changes in component state occurs.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerContextMenuSettings.Dispose(System.Boolean)">
            <summary>
            Dispose unmanaged resources in the component.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileManagerCustomToolbarItem">
            <summary>
            Represents a collection of <see cref="T:Syncfusion.Blazor.FileManager.FileManagerCustomToolbarItem"/> in File Manager component.
            </summary>
            <remarks>
            In the example below, a custom File Manager toolbar item has been added using <see cref="T:Syncfusion.Blazor.FileManager.FileManagerCustomToolbarItem"/> tag directive.
            To render the Template with required order in toolbar items, use the same 'Name' property in the tags and items list. 
            </remarks>
            <example>
            <code><![CDATA[ 
            <SfFileManager TValue="FileManagerDirectoryContent">
            <FileManagerAjaxSettings Url = "https://ej2-aspcore-service.azurewebsites.net/api/FileManager/FileOperations"
            UploadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Upload"
            DownloadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Download"
            GetImageUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/GetImage">
            </FileManagerAjaxSettings>
            <FileManagerToolbarSettings ToolbarItems="@Items"> 
            <FileManagerCustomToolbarItems>
            <FileManagerCustomToolbarItem Name="CustomCheck">
            <Template>
            <SfButton CssClass="e-tbar-btn-text e-tbar-ddb-text" Content="Zoom In"></SfButton>
            </Template>
            </FileManagerCustomToolbarItem>
            </FileManagerCustomToolbarItems>
            </FileManagerToolbarSettings>
            </SfFileManager>
            @code {
            private List<ToolBarItemModel> Items = new List<ToolBarItemModel>()
            {
            new ToolBarItemModel() { Name="NewFolder"},
            new ToolBarItemModel() { Name = "Upload"},
            new ToolBarItemModel() { Name = "Cut"},
            new ToolBarItemModel() { Name = "Copy"},
            new ToolBarItemModel() { Name = "Paste"},
            new ToolBarItemModel() { Name = "Delete"},
            new ToolBarItemModel() { Name = "Download"},
            new ToolBarItemModel() { Name = "Reaname"},
            new ToolBarItemModel() { Name = "SortBy"},
            new ToolBarItemModel() { Name = "Refresh"},
            new ToolBarItemModel() { Name = "Selection"},
            new ToolBarItemModel() { Name = "View"},
            new ToolBarItemModel() { Name = "Details"},
            new ToolBarItemModel() {  Name = "CustomCheck", TooltipText ="Check"},
            new ToolBarItemModel() {  Name = "CustomUncheck", Text = "Uncheck", TooltipText ="Uncheck", PrefixIcon="e-icons e-check-box" },
            };
            }
            ]]></code> 
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerCustomToolbarItem.Name">
            <summary>
            Gets or sets the custom tool name.
            </summary>
            <value>
            Accepts a string value. The default value is <c>String.Empty</c>.
            </value>
            <remarks>
            To render the Template with required order in toolbar items, use the same 'Name' property in the tags and items list.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerCustomToolbarItem.Template">
            <summary>
            Gets or sets the template to customize the toolbar item.
            </summary>
            <value>
            This value can be used to define custom HTML or Razor markup to be rendered as the content of the component.
            </value>
            <remarks>
            The ContentTemplate is a RenderFragment that allows developers to customize the appearance and content of the component. 
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerCustomToolbarItem.OnInitializedAsync">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerCustomToolbarItem.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileManagerCustomToolbarItems">
            <summary>
            Represents a collection of <see cref="T:Syncfusion.Blazor.FileManager.FileManagerCustomToolbarItems"/> in File Manager component.
            </summary>
            <remarks>
            In the example below, a custom File Manager toolbar item has been added using <see cref="T:Syncfusion.Blazor.FileManager.FileManagerCustomToolbarItems"/> tag directive.
            </remarks>
            <example>
            <code><![CDATA[ 
            <SfFileManager TValue="FileManagerDirectoryContent">
            <FileManagerAjaxSettings Url = "https://ej2-aspcore-service.azurewebsites.net/api/FileManager/FileOperations"
            UploadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Upload"
            DownloadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Download"
            GetImageUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/GetImage">
            </FileManagerAjaxSettings>
            <FileManagerToolbarSettings ToolbarItems="@Items"> 
            <FileManagerCustomToolbarItems>
            <FileManagerCustomToolbarItem Name="CustomCheck">
            <Template>
            <SfButton CssClass="e-tbar-btn-text e-tbar-ddb-text" Content="Zoom In"></SfButton>
            </Template>
            </FileManagerCustomToolbarItem>
            </FileManagerCustomToolbarItems>
            </FileManagerToolbarSettings>
            </SfFileManager>
            @code {
            private List<ToolBarItemModel> Items = new List<ToolBarItemModel>()
            {
            new ToolBarItemModel() { Name="NewFolder"},
            new ToolBarItemModel() { Name = "Upload"},
            new ToolBarItemModel() { Name = "Cut"},
            new ToolBarItemModel() { Name = "Copy"},
            new ToolBarItemModel() { Name = "Paste"},
            new ToolBarItemModel() { Name = "Delete"},
            new ToolBarItemModel() { Name = "Download"},
            new ToolBarItemModel() { Name = "Reaname"},
            new ToolBarItemModel() { Name = "SortBy"},
            new ToolBarItemModel() { Name = "Refresh"},
            new ToolBarItemModel() { Name = "Selection"},
            new ToolBarItemModel() { Name = "View"},
            new ToolBarItemModel() { Name = "Details"},
            new ToolBarItemModel() {  Name = "CustomCheck", TooltipText ="Check"},
            new ToolBarItemModel() {  Name = "CustomUncheck", Text = "Uncheck", TooltipText ="Uncheck", PrefixIcon="e-icons e-check-box" },
            };
            }
            ]]></code> 
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerCustomToolbarItems.ChildContent">
            <summary>
            Gets or sets the child content for the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerCustomToolbarItems.OnInitializedAsync">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerCustomToolbarItems.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileManagerDetailsViewSettings">
            <summary>
            Defines the Details view settings of the FileManager component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDetailsViewSettings.ChildContent">
            <exclude/>
            <summary>
            Update child content from parent component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDetailsViewSettings.ColumnResizing">
            <summary>
            If `ColumnResizing` is set to true, Grid columns can be resized.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerDetailsViewSettings.Columns">
            <summary>
            Specifies the customizable details view.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerDetailsViewSettings.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerDetailsViewSettings.Dispose(System.Boolean)">
            <summary>
            Dispose unmanaged resources in the component.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileManagerEvents`1">
            <summary>
            Represents the FileManagerEvents component.
            </summary>
            <typeparam name="TValue">TValue.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.BeforeDownload">
            <summary>
            Gets or sets an event callback that will be invoked before sending the download request to the server.
            </summary>
            <value> An event callback </value>
            <remarks>
            This callback can be used to capture the download file details. Additionally, the download operation can be canceled or a custom download can be initiated from this event.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.BeforeImageLoad">
            <summary>
            Gets or sets an event callback that will be invoked before sending the image request to the server.
            </summary>
            <value> An event callback </value>
            <remarks>
            This callback can be used to pass additional attributes that are required to load the image through the event.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.BeforePopupClose">
            <summary>
            Gets or sets an event callback that will be invoked before the dialog is closed.
            </summary>
            <value> An event callback </value>
            <remarks>
            This callback can be used to capture the dialog closing action and perform any necessary actions before the dialog is closed.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.BeforePopupOpen">
            <summary>
            Gets or sets an event callback that will be invoked before the dialog is opened.
            </summary>
            <value> An event callback </value>
            <remarks>
            This callback can be used to perform any necessary actions, such as refreshing the dialog content or making content changes, before the dialog is opened.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.OnSend">
            <summary>
            Gets or sets an event callback that will be invoked before sending the HttpClient request to the server.
            </summary>
            <value> An event callback </value>
            <remarks>
            This callback can be used to pass any additional data, such as JWT token, along with the HttpClient request.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.OnRead">
            <summary>
            Gets or sets an event callback that will be invoked when the initial data is set and when the sub folders data are read.
            </summary>
            <value>An event callback.</value>
            <remarks>
            Use this event to assign local objects as <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> response or file data. This event will be raised whenever the read action takes place after the delete, rename, folder creation, cut, copy, and paste action occurs and when sub folders are opened.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.ItemsDeleting">
            <summary> 
            Gets or sets an event callback that will be invoked before the delete operation takes place. 
            </summary> 
            <value>An event callback.</value> 
            <remarks> 
            This callback can be used to cancel delete operations for specific files or folders, or to show a spinner at the time of the delete action. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.ItemsDeleted">
            <summary> 
            Gets or sets an event callback that will be invoked when the file or folder is deleted successfully. 
            </summary> 
            <value>An event callback.</value> 
            <remarks> 
            This callback can be used to retrieve the details of deleted files or folders. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.FolderCreating">
            <summary> 
            Gets or sets an event callback that will be invoked before the folder is being created. 
            </summary> 
            <value>An event callback. </value> 
            <remarks> 
            This callback can be used to restrict the creation of folders using the cancel option based on application use cases. 
            </remarks>       
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.FolderCreated">
            <summary> 
            Gets or sets an event callback that will be invoked when the new folder is created successfully. 
            </summary> 
            <value>An event callback.</value> 
            <remarks> 
            This callback can be used to get the details of the newly created folder. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.Searching">
            <summary> 
            Gets or sets an event callback that will be invoked when the character is entered in input box for searching files or folders. 
            </summary> 
            <value> An event callback </value> 
            <remarks> 
            This callback can be used to get the search string as well as the search results based on the entered text. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.Searched">
            <summary> 
            Gets or sets an event callback that will be invoked when the search action is completed. 
            </summary> 
            <value> An event callback </value> 
            <remarks> 
            This callback can be used to get the search results and process it based on application scenario. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.ItemRenaming">
            <summary> 
            Gets or sets an event callback that will be invoked when the file or folder is being renamed. 
            </summary> 
            <value> An event callback </value> 
            <remarks> 
            This callback can be used to prevent the rename operation of specific file or folder using cancel argument 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.ItemRenamed">
            <summary> 
            Gets or sets an event callback that will be invoked when the file or folder is renamed successfully. 
            </summary> 
            <value> An event callback </value> 
            <remarks> 
            This callback can be used to get the renamed file or folder details 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.ItemsMoving">
            <summary> 
            Gets or sets an event callback that will be invoked when the file or folder is being cut or copied for the reason to be pasted in another path. 
            </summary> 
            <value> An event callback </value> 
            <remarks> 
            This callback can be used to cancel the moving of specific file or folder through cancel operation. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.ItemsMoved">
            <summary> 
            Gets or sets an event callback that will be invoked when the file or folder is being pasted to the destination path. 
            </summary> 
            <value> An event callback </value> 
            <remarks> 
            This callback can be used to get the details of pasted folder         
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.ItemsUploading">
            <summary> 
            Gets or sets an event callback that will be invoked when the file or folder upload begins. 
            </summary> 
            <value> An event callback </value> 
            <remarks> 
            This callback can be used to get the details of the file or folder to be uploaded. The upload of specific type of files can be prevented here using `cancel` option. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.ItemsUploaded">
            <summary> 
            Gets or sets an event callback that will be invoked when the file or folder is uploaded successfully. 
            </summary> 
            <value> An event callback </value> 
            <remarks> 
            This callback can be used to get the details of the uploaded file or folder.       
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.Created">
            <summary>
            Gets or sets an event callback that will be invoked when the FileManager component is created.
            </summary>
            <value> An event callback </value>
            <remarks>
            This callback can be used to perform necessary actions once the component will be rendered.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.Destroyed">
            <summary>
            Gets or sets an event callback that will be invoked when the FileManager component is destroyed.
            </summary>
            <value> An event callback </value>
            <remarks> This callback can be used to perform necessary actions once the component is destroyed. </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.OnError">
            <summary>
            Gets or sets an event callback that will be invoked when the AJAX request fails.
            </summary>
            <value> An event callback </value>
            <remarks>
            This callback can be used to capture the error details of the file operation failures and take any necessary actions.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.OnFileDragStart">
            <summary>
            Gets or sets an event callback that will be invoked when the file or folder dragging is started.
            </summary>
            <value> An event callback </value>
            <remarks>
            This callback allows to capture the drag start of the file or folder and can be used to prevent dragging of required folders.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.OnFileDragStop">
            <summary>
            Gets or sets an event callback that will be invoked before the file or folder is dropped at the target.
            </summary>
            <value> An event callback </value>
            <remarks> 
            This callback allows to prevent the drop of file or folder in required cases. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.FileDropped">
            <summary>
            Gets or sets an event callback that will be invoked after a file or folder has been dropped.
            </summary>
            <value> An event callback </value>
            <remarks>
            This callback can be used to capture the drop of a file or folder and perform any necessary actions.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.OnFileLoad">
            <summary>
            Gets or sets an event callback that will be invoked before the file or folder is rendered.
            </summary>
            <value> An event callback </value>
            <remarks>
            This callback allows capturing the file load event and performing any necessary actions before the file or folder is rendered.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.OnFileOpen">
            <summary>
            Gets or sets an event callback that will be invoked before the file or folder is opened.
            </summary>
            <value> An event callback </value>
            <remarks>
            This callback can be used to prevent opening of any particular file or folder in required cases.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.FileSelected">
            <summary>
            Gets or sets an event callback that will be invoked when the file or folder is selected or unselected.
            </summary>
            <value> An event callback </value>
            <remarks>
            This callback allows to capture the selected or unselected file details.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.FileSelection">
            <summary>
            Gets or sets an event callback that will be invoked before a file or folder is selected.
            </summary>
            <value>An event callback.</value>
            <remarks>
            This callback is used to prevent the selection of a file or folder in certain cases, or to perform actions before a file or folder is selected.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.OnMenuClick">
            <summary>
            Gets or sets an event callback that will be invoked when the context menu item is clicked.
            </summary>
            <value> An event callback </value>
            <remarks>
            This callback allows to perform required actions when the context menu item is clicked.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.MenuOpened">
            <summary>
            Gets or sets an event callback that will be invoked before the context menu is opened.
            </summary>
            <value> An event callback that can be used to modify or customize the context menu items. </value>
            <remarks>
            This callback is triggered before the context menu is opened and allows customization of the menu items.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.PopupClosed">
            <summary>
            Gets or sets an event callback that will be invoked when the dialog is closed.
            </summary>
            <value> An event callback </value>
            <remarks>
            This callback allows to perform required actions after the dialog closes.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.PopupOpened">
            <summary>
            Gets or sets an event callback that will be invoked when the dialog is opened.
            </summary>
            <value> An event callback </value>
            <remarks>
            This callback allows performing required actions after the dialog opens, such as setting focus to a specific element or loading data dynamically.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.OnSuccess">
            <summary>
            Gets or sets an event callback that will be invoked when the HttpClient request is successful.
            </summary>
            <value>An event callback.</value>
            <remarks>
            This callback allows obtaining the result of a successful request action.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.ToolbarItemClicked">
            <summary>
            Gets or sets an event callback that will be invoked when a toolbar item is clicked.
            </summary>
            <value> An event callback </value>
            <remarks>
            This callback allows obtaining details of the clicked toolbar item and performing required actions.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.ToolbarCreated">
            <summary>
            Gets or sets an event callback that will be invoked before creating the toolbar of the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <value>An event callback that customizes the existing toolbar items and includes custom toolbar items.</value>
            <remarks>
            Use this callback to customize the toolbar of the FileManager component, including the existing toolbar items and the custom ones that are added.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerEvents`1.UploadListCreated">
            <summary>
            Gets or sets an event callback that will be invoked before rendering each file item in the upload dialog box.
            </summary>
            <value> An event callback to customize the file item details in the upload dialog. </value>
            <remarks>
            Use this callback to modify the appearance or behavior of individual file items in the upload dialog.
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerEvents`1.OnInitialized">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerEvents`1.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileManagerNavigationPaneSettings">
            <summary>
            Defines the navigation pane settings for the filemanager component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerNavigationPaneSettings.MaxWidth">
            <summary>
            Specifies the maximum width of navigation pane.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerNavigationPaneSettings.MinWidth">
            <summary>
            Specifies the minimum width of navigation pane.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerNavigationPaneSettings.SortOrder">
            <summary>
            Gets or sets a value that indicates how to sort the folders in the navigation pane of the file manager component.
            </summary>
            <value>
            One of the <see cref="P:Syncfusion.Blazor.FileManager.FileManagerNavigationPaneSettings.SortOrder"/> enumeration. The default value is <see cref="F:Syncfusion.Blazor.FileManager.SortOrder.Ascending"/>
            </value>
            <remarks>
            If the <c>SortOrder</c> is <c>Ascending</c>, the folders are sorted in ascending order.
            If the <c>SortOrder</c> is <c>Descending</c>, the folders are sorted in descending order.
            If the <c>SortOrder</c> is <c>None</c>, the folders are not sorted.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerNavigationPaneSettings.Visible">
            <summary>
            Enables or disables the visibility of the navigation pane.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerNavigationPaneSettings.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerNavigationPaneSettings.OnParametersSetAsync">
            <summary>
            Method invoked when any changes in component state occurs.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerNavigationPaneSettings.Dispose(System.Boolean)">
            <summary>
            Dispose unmanaged resources in the component.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileManagerSearchSettings">
            <summary>
            Defines the search settings for the filemanager component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerSearchSettings.AllowSearchOnTyping">
            <summary>
            Enables or disables the allowSearchOnTyping.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerSearchSettings.FilterType">
            <summary>
            Specifies the filter type while searching the content. The available filter types are:
             `Contains`
             `StartsWith`
             `EndsWith`.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerSearchSettings.FilterDelay">
            <summary>
            Gets or sets the delay time (in milliseconds) before starting the search operation based on the filter value in the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component. A value of 0 indicates no delay.
            </summary>
            <value>
            An integer representing the delay time (in milliseconds) before filtering starts. A value of 0 means no delay.
            </value>
            <remarks>
            By default, the filter query is sent to the server after 500ms of the last input entered in the search box. Setting a delay value here will introduce a delay before filtering starts.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerSearchSettings.IgnoreCase">
            <summary>
            If ignoreCase is set to false, searches files that match exactly,
            else searches files that are case insensitive(uppercase and lowercase letters treated the same).
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerSearchSettings.Placeholder">
            <summary>
            Gets or sets the placeholder value to the search input of the File Manager component.
            </summary>
            <value>
            Accepts a string. The default value is <c>Null</c>.
            </value>
            <remarks>
            The search input displays the default placeholder text value as "Search + current selected folder name".
            </remarks>    
            <example>
            In the below code example, the placeholder value sets a "Search More Files.." in the FileManager component.
            <code><![CDATA[
            <SfFileManager TValue="FileManagerDirectoryContent">
            <FileManagerSearchSettings Placeholder="Search More Files.."></FileManagerSearchSettings>
            </SfFileManager>
            ]]></code>
            </example>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerSearchSettings.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerSearchSettings.OnParametersSetAsync">
            <summary>
            Method invoked when the component parameter changed.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerSearchSettings.Dispose(System.Boolean)">
            <summary>
            Dispose unmanaged resources in the component.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileManagerToolbarSettings">
            <summary>
            Defines the toolbar settings for the filemanager component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerToolbarSettings.Items">
            <summary>
            An array of string or object that is used to configure the toolbar items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerToolbarSettings.Visible">
            <summary>
            Enables or disables the visibility of toolbar in the file manager component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerToolbarSettings.ToolbarItems">
            <summary>
            Gets or sets the items to be rendered in the File Manager toolbar.
            </summary>
            <remarks>
            If not specified, then default toolbar items such as ‘New Folder’, ‘SortBy’, ‘Upload’, ‘Refresh’, ‘View’, ‘Details’  will be rendered in the File Manager toolbar. 
            Customizations such as  setting icon, tooltip text can be done here for the required toolbar item.
            </remarks>
            <example>
            <code><![CDATA[ 
            <SfFileManager TValue="FileManagerDirectoryContent">
            <FileManagerAjaxSettings Url = "https://ej2-aspcore-service.azurewebsites.net/api/FileManager/FileOperations"
            UploadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Upload"
            DownloadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Download"
            GetImageUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/GetImage">
            </FileManagerAjaxSettings>
            <FileManagerToolbarSettings ToolbarItems="@Items"> </FileManagerToolbarSettings>
            </SfFileManager>
            @code {
            private List<ToolBarItemModel> Items = new List<ToolBarItemModel>()
            {
            new ToolBarItemModel() { Name="NewFolder"},
            new ToolBarItemModel() { Name = "Upload"},
            new ToolBarItemModel() { Name = "Cut"},
            new ToolBarItemModel() { Name = "Copy"},
            new ToolBarItemModel() { Name = "Paste"},
            new ToolBarItemModel() { Name = "Delete"},
            new ToolBarItemModel() { Name = "Download"},
            new ToolBarItemModel() { Name = "Reaname"},
            new ToolBarItemModel() { Name = "SortBy"},
            new ToolBarItemModel() { Name = "Refresh"},
            new ToolBarItemModel() { Name = "Selection"},
            new ToolBarItemModel() { Name = "View"},
            new ToolBarItemModel() { Name = "Details"},
            new ToolBarItemModel() {  Name = "CustomCheck", Text = "Check", TooltipText ="Check", PrefixIcon="e-icons e-check-box" },
            new ToolBarItemModel() {  Name = "CustomUncheck", Text = "Uncheck", TooltipText ="Uncheck", PrefixIcon="e-icons e-check-box" },
            };
            }
            ]]></code> 
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerToolbarSettings.ChildContent">
            <summary>
            Gets or sets the child content for the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerToolbarSettings.OnInitializedAsync">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerToolbarSettings.OnParametersSetAsync">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerToolbarSettings.Dispose(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.FileManagerUploadSettings">
            <summary>
            Defines the upload settings for the filemanager component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerUploadSettings.AllowedExtensions">
            <summary>
            Specifies the extensions of the file types allowed in the file manager component and pass the extensions with comma separators.
            For example, if you want to upload specific image files, pass allowedExtensions as ".jpg,.png".
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerUploadSettings.AutoClose">
            <summary>
            Defines whether to close the upload dialog after uploading all the files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerUploadSettings.AutoUpload">
            <summary>
            By default, the FileManager component initiates automatic upload when the files are added in upload queue.
            If you want to manipulate the files before uploading to server, disable the autoUpload property.
            The buttons "upload" and "clear" will be hided from file list when the autoUpload property is true.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerUploadSettings.MaxFileSize">
            <summary>
            Specifies the maximum allowed file size to be uploaded in bytes.
            The property is used to make sure that you cannot upload too large files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerUploadSettings.MinFileSize">
            <summary>
            Specifies the minimum file size to be uploaded in bytes.
            The property is used to make sure that you cannot upload empty files and small files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerUploadSettings.DropArea">
            <summary>
            Gets or sets the selectors for target elements to perform file uploads with drag and drop interactions.
            </summary>
            <value> Accepts a string value that denotes the selector where the file has to be dropped. The default value is layout area of the corresponding File Manager. </value>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.FileManagerUploadSettings.DirectoryUpload">
            <summary>
            Gets or sets a boolean value that indicates whether the directory (folder) can be browsed and uploaded in the FileManager component.
            </summary>
            <value>
            <c>true</c> if the FileManager component allows browsing and uploading of directories (folders); otherwise, <c>false</c>.
            </value>
            <remarks>
            Enabling directory upload allows users to upload directories (folders) by selecting the directory upload option in the toolbar or by dragging and dropping directories into the file manager. When directories are uploaded, all files and subdirectories within them are also uploaded.
            Note that directory (folder) upload is only supported by the following file system providers:
            <list type="bullet">
            <item><description>Physical provider</description></item>
            <item><description>NodeJS provider</description></item>
            <item><description>Azure provider</description></item>
            <item><description>Amazon S3 provider</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerUploadSettings.OnInitializedAsync">
            <summary>
            Method invoked when the component is ready to start.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.FileManagerUploadSettings.Dispose(System.Boolean)">
            <summary>
            Dispose unmanaged resources in the component.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.Internal.IFileManager">
            <summary>
            Interface for SfFileManager.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.IFileManager.UpdateChildProperties(System.String,System.Object,System.Boolean,System.Boolean)">
            <summary>
            This method updates the child properties of file manager.
            </summary>
            <param name="key">Specifies the key parameter.</param>
            <param name="propValue">Specifies the property value parameter.</param>
            <param name="isDynamicPropUpdate">Specifies the parameter to check dynamic property update.</param>
            <param name="isVisibleChanged">Specifies the paramter to check the visibility.</param>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.IFileManager.ID">
            <summary>
            Get or sets the ID value of the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> element.
            </summary>
            <value>
            Accepts the string value.
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1">
            <summary>
            This class contains the methods for breadcrumbar functionalities.
            </summary>
            <typeparam name="TValue">Generic Type parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1.Parent">
            <summary>
            Specifies the instance object of the parent component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1.ID">
            <summary>
            This `ID` property is used to set Id for breadcrumbar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1.SearchID">
            <summary>
            This `SearchID` property is used to set search id for input.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1.CurrentDirectory">
            <summary>
            This `CurrentDirectory` property is used to set current directory.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1.RootDirectoryName">
            <summary>
            This `RootDirectoryName` property is used to root directory name.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1.Dispose(System.Boolean)">
            <summary>
            Dispose unmanaged resources in the component.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1.OnParametersSetAsync">
            <summary>
            Method invoked when any changes in component state occurs.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1.GetRootAttribute(System.String,System.Boolean)">
            <summary>
            Adds attribute for each li in bread crumb bar.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1.GetFileList">
            <summary>
            Obtains the files list from the response data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1.OnChange(Syncfusion.Blazor.Inputs.InputEventArgs)">
            <summary>
            Search input change event handler to perform search operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1.GetSearchString(System.String)">
            <summary>
            Get string for search settings.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1.BreadCrumbClick(System.String)">
            <summary>
            Breadcrumb click handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerBreadCrumbBar`1.BreadCrumbKeyDown(System.String,Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
            <summary>
            Bread crumb keyboard interaction handler.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1">
            <summary>
            This class holds contextmenu operations required functionalities.
            </summary>
            <typeparam name="TValue">Generic TValue parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1.CssClass">
            <summary>
            The `CssClass` property is used to add a user-preferred class name in the root element of the context menu.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1.ID">
            <summary>
            The `ID` property is used to set id for context menu.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1.MenuItemsValue">
            <summary>
            The `MenuItemsValue` property is to set menu item values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1.FileManagerContextMenuIsLayout">
            <summary>
            The `isLayout` property is to check the layout of filemanager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1.FileManagerContextMenuType">
            <summary>
            The `type` property is to set type for context menu.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1.GetMenuID(System.String)">
            <summary>
            Return the id of each menu item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1.GetItemPrefixIcon(System.String)">
            <summary>
            Return the prefix icon for the item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1.BeforeMenuOpen(Syncfusion.Blazor.Navigations.BeforeOpenCloseMenuEventArgs{Syncfusion.Blazor.Navigations.MenuItem})">
            <summary>
            Updating the menu items before close.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1.OpenContextMenu(System.Double,System.Double,Syncfusion.Blazor.FileManager.Internal.MenuOpenModel)">
            <summary>
            Opening the context menu and updating the menu items based target.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1.GetItemLocaleValue(System.String)">
            <summary>
            Return the locale value for each item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1.GetMenuItems">
            <summary>
            Returns the menu Items.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1.SortByClick(System.String,Syncfusion.Blazor.FileManager.SortOrder)">
            <summary>
            Sortby menu item click handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1.OnItemSelect(Syncfusion.Blazor.Navigations.MenuEventArgs{Syncfusion.Blazor.Navigations.MenuItem})">
            <summary>
            Item select event handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerContextMenu`1.Dispose(System.Boolean)">
            <summary>
            Dispose unmanaged resources in the component.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.Internal.FileManagerDialog`1">
            <summary>
            This class holds filemanager dialog operations.
            </summary>
            <typeparam name="TValue">Generic type paramater.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerDialog`1.DialogName">
            <summary>
            The `DialogName` property is used set dialog name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerDialog`1.ID">
            <summary>
            The `Id` property is used set id.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerDialog`1.CssClass">
            <summary>
            The `CssClass` property is used set custom class in the root element of Dialog.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerDialog`1.ResponseData">
            <summary>
            The `ResponseData` property is used set response data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerDialog`1.Dispose(System.Boolean)">
            <summary>
            Dispose unmanaged resources in the component.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1">
            <summary>
            This class contains file items operations functionalities.
            </summary>
            <typeparam name="TValue">Specifies the TValue parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.FileManager">
            <summary>
            Instance object of the FileManager component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.FileName">
            <summary>
            This `FileName` property is used to file name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.IconClass">
            <summary>
            This `IconClass` property is used set icon class for file items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.IsFile">
            <summary>
            This `IsFile` property is used to check the file or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.IsSelected">
            <summary>
            This `IsSelected` property is used to set a file in selected state.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.DataUId">
            <summary>
            This `DataUId` property is used to set data UID for file item.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.Data">
            <summary>
            This `Data` property is used to set data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.Dispose(System.Boolean)">
            <summary>
            Dispose unmanaged resources in the component.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.GetClass">
            <summary>
            Returns the class to be added for each file item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.IsImage">
            <summary>
            Returns whether the current file item is an image or not.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.GetAttributes">
            <summary>
            Returns the attributes to be added for each file item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.GetSrcLink(`0)">
            <summary>
            Returns the image source link for image files.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.OnDoubleClick(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Double click event hander to perform folder navigation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.CheckBoxClicked(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Click event handler for checkbox.
            </summary>.
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerFileItems`1.UpdateSelected(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Click event handler for updating the selected item.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1">
            <summary>
            This class contains file manager's grid functionalities.
            </summary>
            <typeparam name="TValue">Specifies the TValue parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.Data">
            <summary>
            This `Data` property is used to set data to details view.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.ComponentDispose(System.Boolean)">
            <summary>
            Dispose unmanaged resources in the component.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.GetIconClass(`0)">
            <summary>
            Returns the icon class for the record.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.GetTextValue(System.String)">
            <summary>
            Returns the file text value (with or without extension).
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.GetDirection">
            <summary>
            Returns sorting direction.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.OnRecordClick(Syncfusion.Blazor.Grids.RecordClickEventArgs{`0})">
            <summary>
            Record click event handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.OnRowSelected(Syncfusion.Blazor.Grids.RowSelectEventArgs{`0})">
            <summary>
            Row selected event handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.OnRowDeselect(Syncfusion.Blazor.Grids.RowDeselectEventArgs{`0})">
            <summary>
            Row Deselect event handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.SortData(System.String)">
            <summary>
            Sorts Grid data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.OnRecordDoubleClick(Syncfusion.Blazor.Grids.RecordDoubleClickEventArgs{`0})">
            <summary>
            Grid double click event handler for folder navigation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.RemoveSelection(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Boolean)">
            <summary>
            Removes the selection of files.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.OnUnSelection(Syncfusion.Blazor.Grids.RowDeselectEventArgs{`0})">
            <summary>
            Trigger FileSelect Event.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.OnSelection(Syncfusion.Blazor.Grids.RowSelectingEventArgs{`0})">
            <summary>
            Trigger FileSelect Event.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.GetRowDataByIndex(System.Int32)">
            <summary>
            Returns the selected row data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.UpdateSelection">
            <summary>
            Updates the grid selection based on the selected items.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.RowDataBound(Syncfusion.Blazor.Grids.RowDataBoundEventArgs{`0})">
            <summary>
            Row Data bound event handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerGridView`1.Created">
            <summary>
            Created event handler to update the seleted rows.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1">
            <summary>
            This class contains the treeview in filemanager functionalities.
            </summary>
            <typeparam name="TValue">TValue.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.ResponseData">
            <summary>
            This `ResponseData` property is used to set response data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.TreeViewId">
            <summary>
            The `TreeViewId` property is used set id.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.Dispose(System.Boolean)">
            <summary>
            Dispose unmanaged resources in the component.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.SetRootLevelData">
            <summary>
            Constructs data for tree view based on file manager response data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.UpdatePathDetails">
            <summary>
            Updates the path details.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.OnInitializedAsync">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.SetSortOrder(Syncfusion.Blazor.FileManager.SortOrder)">
            <summary>
            Updates the sort order property of navigation pane.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.GetAttributes(`0)">
            <summary>
            Returns the attributes for tree view.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.RemoveSelection">
            <summary>
            Updated selection in the grid control.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.NodeSelecting(Syncfusion.Blazor.Navigations.NodeSelectEventArgs)">
            <summary>
            Node selection event handler to navigate folder.
            </summary>
            <param name="args">Specifies node select event arguments.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.OnNodeExpanding(Syncfusion.Blazor.Navigations.NodeExpandEventArgs)">
            <summary>
            Node expanding event handler to expand tree node.
            </summary>
            <param name="args">Specifies the node expanding arguments.</param>
            <returns>Tasks.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.UpdateSelectedNode(`0,System.Boolean)">
            <summary>
            Updated the selected of treeview based on folder navigation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.OnRender(Syncfusion.Blazor.Navigations.NodeRenderEventArgs{Syncfusion.Blazor.FileManager.Internal.InternalData})">
            <summary>
            Triggers on each node renders in treeview.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.RemoveTreeData(System.Collections.Generic.List{`0})">
            <summary>
            Removes the data from data source on folder delete.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.UpdateHasChild(System.String)">
            <summary>
            Updates the has child property for each node.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.RenameTreeData(`0,System.String)">
            <summary>
            Renames the node text on folder rename.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerTreeView`1.AddTreeData(System.Collections.Generic.List{`0},System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds new data on creating a new folder.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.Internal.FileManagerVirtualLayout`1">
            <summary>
            This class contains the methods for virtualization functionalities.
            </summary>
            <typeparam name="TValue">Generic Type parameter.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerVirtualLayout`1.FileManager">
            <summary>
            Specifies the instance object of the FileManager component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.FileManagerVirtualLayout`1.FileResponse">
            <summary>
            Specifies the read operations response data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerVirtualLayout`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerVirtualLayout`1.OnNormalScroll(System.Double,System.Boolean)">
            <summary>
            Update the items for current view while scroling.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.Internal.FileManagerVirtualLayout`1.Dispose(System.Boolean)">
            <summary>
            Dispose unmanaged resources in the Syncfusion Blazor component.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.Internal.PersistenceValues">
            <summary>
            Interface for persistence values.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.PersistenceValues.View">
            <summary>
            Gets or sets the view of the File Manager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.PersistenceValues.Path">
            <summary>
            Gets or sets the path of the File Manager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.PersistenceValues.SelectedItems">
            <summary>
            Gets or sets the selected items of the File Manager.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.Internal.InternalData">
            <summary>
            Interface for Internal data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.InternalData.Id">
            <summary>
            Gets or sets the id of file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.InternalData.ParentId">
            <summary>
            Gets or sets the parent id of file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.InternalData.Attributes">
            <summary>
            Gets or sets the attributes of file or folder.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.InternalData.HasChild">
            <summary>
            Gets or sets the haschild field for folder.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.InternalData.Selected">
            <summary>
            Gets or sets the selection for file or folder.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.InternalData.IconCSS">
            <summary>
            Gets or sets the icon css for file or folder.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.InternalData.Expanded">
            <summary>
            Gets or sets the expanded field for file or folder.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.InternalData.Text">
            <summary>
            Gets or sets the text for file or folder.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.Internal.RequestData`1">
            <summary>
            Interface for request data.
            </summary>
            <typeparam name="T">Type param.</typeparam>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.RequestData`1.Action">
            <summary>
            Gets or sets the file action.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.RequestData`1.Names">
            <summary>
            Gets or sets the file or folder names.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.RequestData`1.Name">
            <summary>
            Gets or sets the file or folder name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.RequestData`1.NewName">
            <summary>
            Gets or sets the file or folder new name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.RequestData`1.RenameFiles">
            <summary>
            Gets or sets the rename for file or folder.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.RequestData`1.SearchString">
            <summary>
            Gets or sets the search string to find files.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.RequestData`1.CaseSensitive">
            <summary>
            Gets or sets the search case sensitive.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.RequestData`1.Data">
            <summary>
            Gets or sets the file or folder data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.RequestData`1.TargetData">
            <summary>
            Gets or sets the target data.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.RequestData`1.Path">
            <summary>
            Gets or sets the path.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.RequestData`1.TargetPath">
            <summary>
            Gets or sets the target path.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.RequestData`1.ShowHiddenItems">
            <summary>
            Gets or sets the show hidden items.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.RequestData`1.ShowFileExtension">
            <summary>
            Gets or sets a value which determines whether to show or hide the file extension in the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <value>
            <c>true</c>, if the file extension should be shown; otherwise, <c>false</c>. The default value is <c>true</c>.
            </value>
            <remarks> 
            A boolean value that indicates whether the file extension should be shown.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.RequestData`1.CustomData">
            <summary>
            Gets or sets the custom data.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.Internal.MenuOpenModel">
            <summary>
            Interface for MenuOpenModel.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.MenuOpenModel.IsFile">
            <summary>
            It is used to check Menu open option for file.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.MenuOpenModel.IsFolder">
            <summary>
            It is used to check Menu open option for folder.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.MenuOpenModel.IsLayout">
            <summary>
            It is used to check Menu open option for layout.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.MenuOpenModel.IsTree">
            <summary>
            It is used to check Menu open option for tree.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.MenuOpenModel.RowIndex">
            <summary>
            It is used to check Menu open option for grid row.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.Internal.MenuOpenModel.TargetID">
            <summary>
            Gets or sets the id of the target item on which the context menu is opened.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.FileManager.SfFileManager`1">
            <summary>
            This class hold constants of file manager.
            </summary>
            <summary>
            The SfFileManager is a graphical user interface component for managing the file system that allows the users to perform most common file operations
            like accessing, editing, and sorting the files and folders.
            </summary>
            <typeparam name="TValue"> The generic type parameter.</typeparam>
            <summary>
            The SfFileManager is a graphical user interface component for managing the file system that allows the users to perform most common file operation like accessing, editing, and sorting the files and folders.
            </summary>
            <summary> 
            The Blazor FileManager component is a graphical user interface component for managing the file system that allows users to perform most common file operations like accessing, editing, and sorting files or folders.
            This component also provides easy navigation for browsing folders to select a file or folder from the file system. .
            </summary> 
            <example> 
            A Blazor FileManager component with file operations.
            <code><![CDATA[ 
            <SfFileManager TValue="FileManagerDirectoryContent">
            <FileManagerAjaxSettings Url = "https://ej2-aspcore-service.azurewebsites.net/api/FileManager/FileOperations"
            UploadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Upload"
            DownloadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Download"
            GetImageUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/GetImage">
            </FileManagerAjaxSettings>
            </SfFileManager>
            ]]></code> 
            </example> 
            <summary>
            This class holds the public methods that required to execute the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> functionalities.
            </summary>
            <summary>
            This class holds the methods for file manager operation functionalities.
            </summary>
            <summary>
            This class contains the toolbar operation functionalities of filemanager.
            </summary>
            <summary>
            This class contains the filemanager utitility functionalities.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.accessor">
            <summary>
            Gets or sets the fast reflection accessor to reflect the data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetItemPrefixIcon(System.String,Syncfusion.Blazor.FileManager.ViewType)">
            <summary>
            return the prefix icon for each item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetValue(System.String,`0)">
            <summary>
            Return the required Data from the Ttype.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.SetValue(`0,System.String,System.Object)">
            <summary>
            Sets the value to Data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.FileType(`0)">
            <summary>
            Returns the icon class for listbase data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetPermission(`0)">
            <summary>
            Returns the permission data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetDataKey(`0)">
            <summary>
            Generates the data key for each file data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetClass">
            <summary>
            Returns class to be added to the root element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetProperties">
            <summary>
            Returns class to be added to the root element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetDataId(`0)">
            <summary>
            Generates unique data id for each file data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetDataWithId(System.String)">
            <summary>
            Returns the data for the provided unique id.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.SetDataWithId(System.String,`0)">
            <summary>
            Returns the data for the provided unique id.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.ReRenderComponent">
            <summary>
            Rerenders the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.CheckItemOnClick(System.String,System.String[])">
            <summary>
            Getting the item clicked based on locale value.
            </summary>
            <param name="text"> Specifies item text.</param>
            <param name="items"> Specifies item details.</param>
            <returns>string.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.UpdateSelectedItems(System.Collections.Generic.List{`0},Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Boolean)">
            <summary>
            Updates the selected items of the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.UpdateSorting(System.String,Syncfusion.Blazor.FileManager.SortOrder)">
            <summary>
            Sorts data based on the field value.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.ChangePath(System.String)">
            <summary>
            Updates the path during navigation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.OnSplitterClick(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Click event handler for splitter.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.DialogClose(System.Boolean,System.String,System.Boolean)">
            <summary>
            Closes the dialog after performing operations.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.UpdateDataKey(System.String,System.String,System.String,`0)">
            <summary>
            Updates the data key for each file data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.OpenContextMenu(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
            <summary>
            Finds the exact target and opens the context menu.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.OnVirtualScroll(System.Double,System.Boolean)">
            <summary>
            Performs virtual scrolling.
            </summary>
            <param name="listDiff">Specifies the number of rows.</param>
            <param name="isScrollingDown">Specifies the scrolling direction.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.FileManagerShowDialog">
            <summary>
            Performs idevice upload operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.ChangeMobileMultiSelection(System.String)">
            <summary>
            Performs mobile multiselection opertaion.
            </summary>
            <param name="dataId">Specifies the data id parameter.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.PerformTreeViewKeyboardAction(System.String)">
            <exclude/>
            <summary>
            Performs keyboard actions.
            </summary>
            <param name="action">Specifies the action parameter.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.PerformKeyboardAction(System.String)">
            <exclude/>
            <summary>
            Performs keyboard actions.
            </summary>
            <param name="action">Specifies the action parameter.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.IsImage(`0)">
            <summary>
            Returns whether the file is image or not.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.ComponentDispose">
            <summary>
            Dispose unmanaged resources in the component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.UpdateViewData(`0,System.Boolean)">
            <summary>
            Updates the data on file navigation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.SetLocalStorage(System.String,System.String)">
            <summary>
            Update the Persistence value to local storage.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.SerializeModel">
            <summary>
            Updating the persisting values to our component properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.SetCurrentDirectoryPermission">
            <summary>
            Returns the permission for current directory.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.UploadRetry(System.String)">
            <summary>
            Retry upload operation when issue occurs on file upload.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.DragStartCall(System.Double,System.Double,System.String)">
            <summary>
            Server call for drag start operation.
            </summary>
            <param name="left"> Specifies the left coordinates.</param>
            <param name="top"> Specifies the top coordinates.</param>
            <param name="dragDataId">Specifies the drag data id.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.DraggingCall(System.Double,System.Double)">
            <summary>
            Server call for drag start operation.
            </summary>
            <param name="left"> Specifies the left coordinates.</param>
            <param name="top"> Specifies the top coordinates.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.DragStopCall(System.String,System.String,System.String,System.String,System.Boolean,System.Double,System.Double)">
            <summary>
            Server call for drag stop operation.
            </summary>
            <param name="dragDataId">Specifies the drag data id.</param>
            <param name="dropDataId">Specifies the drop data id.</param>
            <param name="targetModule">Specifies the target module.</param>
            <param name="activeModule">Specifies the active module.</param>
            <param name="isLayout">Specifies layout parameter.</param>
            <param name="left"> Specifies the left coordinates.</param>
            <param name="top"> Specifies the top coordinates.</param>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.OnInitializedAsync">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.OnParametersSetAsync">
            <summary>
            Method invoked when any changes in component state occurs.
            </summary>
            <returns>Task.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.OnAfterRenderAsync(System.Boolean)">
            <summary>
            Method invoked after each time the component has been rendered.
            </summary>
            <param name="firstRender">Set to true for the first time component rendering; otherwise gets false.</param>
            <returns>Task.</returns>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.ID">
            <summary>
            Get or sets the ID value of the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> element.
            </summary>
            <value>
            Accepts the string value.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.ChildContent">
            <exclude/>
            <summary>
            Gets or sets the content to display within a <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.FileAjaxSettings">
            <summary>
            Gets or sets the AJAX settings of the FileManager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.AllowDragAndDrop">
            <summary>
            Gets or sets a value that indicates whether the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> allows drag and drop of files.
            </summary>
            <value>
            <c>true</c>, if the drag and drop operation is allowed; otherwise, <c>false</c>. The default value is <c>false</c>.
            </value>
            <remarks>
            Set this property to true to allow users to drag and drop files into the FileManager. When the property is set to true, users can drag and drop files from their local machine or from another location in the FileManager.  
            By default, the drag and drop operation only supports single file upload. 
            To enable directory upload, set the 'DirectoryUpload' property in the 'UploadSettings' property to true. 
            When enabled, users can drag and drop a folder containing multiple files, which will upload all of the files within the folder to the FileManager.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.AllowMultiSelection">
            <summary>
            Gets or sets a value that indicates whether multi-selection of files or folders is enabled in the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <value>
             <c>true</c> if multi-selection is enabled; otherwise, <c>false</c>.The default value is <c>true</c>.
            </value>
            <remarks>
            When multi-selection is enabled, users can select multiple files or folders in the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component
            by holding down the CTRL key and clicking on the files or folders they want to select. Consecutive files or folders can be selected
            by holding down the SHIFT key and clicking on the initial and final files or folders of the range to be selected.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.ShowItemCheckBoxes">
            <summary>
            Gets or sets a boolean value that determines whether to display checkboxes in the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <value>
             <c>true</c> if checkboxes are shown for files or folders on hover; otherwise, <c>false</c>.The default value is <c>true</c>.
            </value>
            <remarks>
            When this property is enabled, checkboxes are shown for files or folders on hover in the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component which allows selection of multiple files or folders.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.FileManagerContextMenuSettings">
            <summary>
            Specifies the context menu settings of the FileManager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.CssClass">
            <summary>
            Gets or sets one or more CSS classes that can be used to customize the appearance of the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <value>
            A string that contains one or more CSS class names separated by spaces. The default value is `String.Empty`.
            </value>
            <remarks>
            When one or more CSS classes are applied to the CssClass property, the associated styles will be used to modify the appearance of the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component's element.
            </remarks>
            <example>
            <code><![CDATA[
            <SfFileManager TValue="FileManagerDirectoryContent" CssClass="e-custom e-files">
            <FileManagerAjaxSettings Url = "https://ej2-aspcore-service.azurewebsites.net/api/FileManager/FileOperations"
            UploadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Upload"
            DownloadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Download"
            GetImageUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/GetImage">
            </FileManagerAjaxSettings>
            </SfFileManager>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.FileManagerDetailsViewSettings">
            <summary>
            Specifies the details view settings of the FileManager component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.EnableHtmlSanitizer">
            <summary>
            Specifies whether to allow rendering of untrusted HTML values in the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <value>
            <c>true</c>, to enable the HTML sanitizer; otherwise, <c>false</c>. The default value is <c>true</c>.
            </value>
            <remarks>
            While enable this property, it sanitize suspected untrusted strings and script, and update in the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.EnablePersistence">
            <summary>
            Gets or sets whether to persist the state of the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component between page reloads.
            </summary>
            <value>
            <c>true</c>, if the persistence can be enabled; otherwise, <c>false</c>.
            </value>
            <remarks>
            If enabled, the following FileManager properties will persist:
            <list type="bullet">
            <item><description>The previous view of the FileManager.</description></item>
            <item><description>The previous path of the FileManager.</description></item>
            <item><description>The previous selected items in the FileManager.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.ShowTooltip">
            <summary>
            Gets or sets a value that indicates whether to show tooltips for various UI elements in the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <value>
            <c>true</c> to show tooltips; otherwise, <c>false</c>. The default value is <c>true</c>.
            </value>
            <remarks>
            Tooltips will be displayed for toolbar items, navigation pane, and folders when this property is enabled.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.EnableRtl">
            <summary>
            Gets or sets whether the right to left direction is enabled for the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <value>
            <c>true</c>, if the right to left direction can be enabled; otherwise, <c>false</c>. The default value is <c>false</c>.
            </value>
            <remarks>
            When set to <c>true</c>, the layout of the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component will be rendered from right to left.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.EnableVirtualization">
            <summary>
            Gets or sets a value that enables/disables the virtualization feature of the File Manager.
            When enabled, the File Manager will only load a subset of files and folders based on the size of the view port, with the rest being loaded dynamically as the user scrolls vertically through the list.
            This can improve performance when dealing with a large number of files and folders, as it reduces the initial load time and memory usage.
            </summary>
            <value>
            <c>true</c>, if the virtual scrolling can be enabled; otherwise, <c>false</c>. The default value is <c>false</c>.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.Height">
            <summary>
            Gets or sets the height value of the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <value>
            Accepts the string value that accepts different formats such as px, percentage, pt, rem, or em. The default value is <c>400px</c>.
            </value>
            <remarks>
            Use this property to set the height of the component based on your application layout.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.FileManagerLocale">
            <summary>
            Overrides the global culture and localization value for this component. Default global culture is 'en-US'.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.FileManagerNavigationPaneSettings">
            <summary>
            Specifies the navigation pane settings of the FileManager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.Path">
            <summary>
            Gets or sets the current path of the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <value>
            Accepts the string value. The default value is <c>/</c>.
            </value>
            <remarks>
            The component updates its path property for each file operation, such as opening a folder or uploading a file.
            Use this property to retrieve or set the current path of the FileManager component.
            </remarks>
            <example>
            <code><![CDATA[
            <SfFileManager TValue="FileManagerDirectoryContent" Path="/Pictures/Food/">
            <FileManagerAjaxSettings Url = "https://ej2-aspcore-service.azurewebsites.net/api/FileManager/FileOperations"
            UploadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Upload"
            DownloadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Download"
            GetImageUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/GetImage">
            </FileManagerAjaxSettings>
            </SfFileManager>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.PopupTarget">
            <summary>
            Gets or sets the target element in which the FileManager's dialog will be displayed.
            The default value is null, which refers to the FileManager element itself.
            </summary>
            <value>
            Accepts a string value representing the CSS selector for the target element.
            </value>
            <remarks>
            Use this property to specify a different element to contain the FileManager's dialog, 
            for example if you need to place the dialog within a specific container element.
            The target element should have the appropriate attributes and styles to properly display the dialog.
            If the target element is not found, the dialog will be displayed within the FileManager element.
            </remarks>
            <example>
            <code><![CDATA[
            <SfFileManager TValue="FileManagerDirectoryContent" PopupTarget=".container">
            <FileManagerAjaxSettings Url = "https://ej2-aspcore-service.azurewebsites.net/api/FileManager/FileOperations"
            UploadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Upload"
            DownloadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Download"
            GetImageUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/GetImage">
            </FileManagerAjaxSettings>
            </SfFileManager>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.RootAliasName">
            <summary>
            Gets or sets the alias name for the root folder in the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <value>
            Accepts a string value representing the alias name for the root folder.
            </value>
            <remarks>
            Use this property to specify a custom alias name for the root folder in the FileManager component.
            By default, the root folder is displayed as the parent folder.
            If a custom alias name is specified, the FileManager will display the root folder with the specified name instead.
            </remarks>
            <example>
            <code><![CDATA[
            <SfFileManager TValue="FileManagerDirectoryContent" RootAliasName="RootFolder">
            <FileManagerAjaxSettings Url = "https://ej2-aspcore-service.azurewebsites.net/api/FileManager/FileOperations"
            UploadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Upload"
            DownloadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Download"
            GetImageUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/GetImage">
            </FileManagerAjaxSettings>
            </SfFileManager>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.FileManagerSearchSettings">
            <summary>
            Gets or sets the search settings of the FileManager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.SelectedItems">
            <summary>
            Gets or sets the selected folders and files name of the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <value>
            An array of strings containing the names of the selected folders and files in the FileManager.
            If no items are selected, the property returns an empty array.
            </value>
            <example>
            <code><![CDATA[
            <SfFileManager TValue="FileManagerDirectoryContent" SelectedItems="@selectedItems">
            <FileManagerAjaxSettings Url = "https://ej2-aspcore-service.azurewebsites.net/api/FileManager/FileOperations"
            UploadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Upload"
            DownloadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Download"
            GetImageUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/GetImage">
            </FileManagerAjaxSettings>
            </SfFileManager>
            @code{
            public string[] selectedItems = new string[] { "Documents", "Music" };
            }
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.SelectedItemsChanged">
            <summary>
            Gets or sets an event callback that is raised when the selected items in the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component are changed.
            </summary>
            <value> An event callback that is raised when the selected items are changed. </value>
            <remarks>
            Use this event callback to capture the selected items and perform any necessary actions. 
            The event callback receives an array of strings that contains the names of the selected folders and files.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.ShowFileExtension">
            <summary>
            Gets or sets a value which determines whether to show or hide the file extension in the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <value>
            <c>true</c>, if the file extension should be shown; otherwise, <c>false</c>. The default value is <c>true</c>.
            </value>
            <remarks> 
            A boolean value that indicates whether the file extension should be shown.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.ShowHiddenItems">
            <summary>
            Gets or sets a value which determines whether to show or hide the files and folders that are marked as hidden.
            </summary>
            <value>
            <c>true</c>, if the hidden items should be shown; otherwise, <c>false</c>.The default value is <c>false</c>.
            </value>
            <remarks>
            A boolean value that indicates whether the hidden files or folders should be shown.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.ShowThumbnail">
            <summary>
            Gets or sets a value which determines whether to shows or hides the thumbnail images in large icons view.
            </summary>
            <value>
            <c>true</c>, if the thumbnail image should be shown; otherwise, <c>false</c>. The default value is <c>true</c>.
            </value>
            <remarks>
            A boolean value that indicates whether the thumbnail images should be shown in large icons view.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.SortOrder">
            <summary>
            Gets or sets the sort order for the files and folders in the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <value>
            A value of the <see cref="P:Syncfusion.Blazor.FileManager.SfFileManager`1.SortOrder"/> enumeration.
            </value>
            <remarks>
            The available options for the sort order are:
            <list type="bullet">
            <item> <description> <see cref="F:Syncfusion.Blazor.FileManager.SortOrder.None"/>: The folders and files are not sorted. </description> </item>
            <item> <description> <see cref="F:Syncfusion.Blazor.FileManager.SortOrder.Ascending"/>: The folders and files are sorted in ascending order. </description> </item>  
            <item> <description> <see cref="F:Syncfusion.Blazor.FileManager.SortOrder.Descending"/>: The folders and files are sorted in descending order. </description> </item>
            </list> 
            </remarks>
            <example>
            <code><![CDATA[
            <SfFileManager TValue="FileManagerDirectoryContent" SortOrder="SortOrder.Descending">
            <FileManagerAjaxSettings Url = "https://ej2-aspcore-service.azurewebsites.net/api/FileManager/FileOperations"
            UploadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Upload"
            DownloadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Download"
            GetImageUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/GetImage">
            </FileManagerAjaxSettings>
            </SfFileManager>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.SortBy">
            <summary>
            Gets or sets the field name being used as the sorting criteria to sort the files of the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <value>
            A field name used to sort the folders and files in the FileManager component. The default value is <c>Name</c>.
            </value>
            <remarks>
            The <see cref="P:Syncfusion.Blazor.FileManager.SfFileManager`1.SortOrder"/> property indicates whether to sort the folders and files in ascending or descending order.
            </remarks>
            <example>
            <code><![CDATA[
            <SfFileManager TValue="FileManagerDirectoryContent" SortOrder="SortOrder.Descending" SortBy="Size">
            <FileManagerAjaxSettings Url = "https://ej2-aspcore-service.azurewebsites.net/api/FileManager/FileOperations"
            UploadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Upload"
            DownloadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Download"
            GetImageUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/GetImage">
            </FileManagerAjaxSettings>
            </SfFileManager>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.SortComparer">
            <summary>
            Gets or sets the custom sort comparer object to implement own sorting logic.
            </summary>
            <value>
            Name of sort comparer object to be executed. The default value is null.
            </value>
            <remarks>
            Custom sort comparer class should be implemented in the interface [IComparer](https://learn.microsoft.com/en-us/dotnet/api/system.collections.generic.icomparer-1?view=net-8.0).
            Custom sort comparer can be used to modify the default sorting logic for both views in File Manager.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.FileManagerToolbarSettings">
            <summary>
            Specifies the group of items aligned horizontally in the toolbar.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.FileUploadSettings">
            <summary>
            Specifies the upload settings for the FileManager.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.View">
            <summary>
            Gets or sets the initial view of the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component. 
            The available views are `LargeIcons` and `Details`.
            </summary>
            <value>
            A value of the <see cref="T:Syncfusion.Blazor.FileManager.ViewType"/> enumeration.
            </value>
            <remarks>
            Use this property to specify whether the FileManager should display files and folders in a large icon view or a detailed view.
            The available options for the view are:
            <list type="bullet">
            <item> <description> <see cref="F:Syncfusion.Blazor.FileManager.ViewType.LargeIcons"/>: The files and folders are displayed as large icons with minimal detail. </description> </item>
            <item> <description> <see cref="F:Syncfusion.Blazor.FileManager.ViewType.Details"/>: The files and folders are displayed in a detailed list. </description> </item>
            </list>
            </remarks>
            <example>
            <code><![CDATA[
            <SfFileManager TValue="FileManagerDirectoryContent" View="ViewType.Details">
            <FileManagerAjaxSettings Url = "https://ej2-aspcore-service.azurewebsites.net/api/FileManager/FileOperations"
            UploadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Upload"
            DownloadUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/Download"
            GetImageUrl="https://ej2-aspcore-service.azurewebsites.net/api/FileManager/GetImage">
            </FileManagerAjaxSettings>
            </SfFileManager>
            ]]></code>
            </example>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.ViewChanged">
            <summary>
            Gets or sets the event callback that will be invoked when the layout view of the FileManager is changed
            </summary>
            <value> An event callback that will be invoked when the layout view of the FileManager is changed. </value>
            <remarks>
            The layout change can be detected here and required actions can be performed.
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.Width">
            <summary>
            Gets or sets the width of the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <value>
            Accepts a string value that represents the width of the FileManager. 
            The default width is set to <c>100%</c>, which fills the available space within the parent element.
            </value>
            <remarks>
            The width value can be represented as percentage, such as "100%", or a pixel value, such as "500px".
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.FileManager.SfFileManager`1.FileHtmlAttributes">
            <summary>
            You can add the additional html attributes such as title, native events etc., to the FileManager element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.ClearSelectionAsync">
            <summary>
            Deselects the currently selected folders and files in the current path in the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <returns>A System.Threading.Tasks.Task that represents an asynchronous action</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.CreateFolderAsync(System.String)">
            <summary>
            Programmatically creates a new folder in the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <param name="folderName"> Specifies the folder name to create a new folder.</param>
            <returns>A System.Threading.Tasks.Task that represents an asynchronous action</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.DeleteFilesAsync(System.String[])">
            <summary>
            Delete the folders or files from the given unique identifiers programmatically in the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <param name="deleteFiles"> Specifies the file name parameter to be deleted.</param>
            <returns>A System.Threading.Tasks.Task that represents an asynchronous action</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.DisableMenuItems(System.String[])">
            <summary>
            Disables the specified context menu items in the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <param name="menuItems"> Specifies the menu item argument to be disabled.</param>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.DisableToolbarItems(System.String[])">
            <summary>
            Disables the specified toolbar items of the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <param name="toolbarItems"> Specifies the toolbar items parameter to be disabled.</param>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.DownloadFilesAsync(System.String[])">
            <summary>
            Downloads the folders or files based on the given unique identifiers programmatically in the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <param name="downloadFiles"> An optional array of file names to download. If null, all files will be downloaded.</param>
            <returns>A System.Threading.Tasks.Task that represents an asynchronous action</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.EnableToolbarItems(System.String[])">
            <summary>
            Enables specified toolbar items in the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <param name="toolbarItems">An array of toolbar item names to be enabled.</param>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.FilterFilesAsync(System.Collections.Generic.List{`0})">
            <summary>
            Displays files that match a custom filter in the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <param name="filterData">An optional list of file and folder names to filter. If null, all files will be shown.</param>
            <returns>A System.Threading.Tasks.Task that represents an asynchronous action</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetMenuItemIndex(System.String)">
            <summary>
            Returns the index position of the specified context menu item in the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <param name="item">The name of the menu item to get the index of.</param>
            <returns>The index position of the menu item. Returns `-1` if the item is not found.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetSelectedFiles">
            <summary>
            Retrieves details about the currently selected files in the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <returns>A list of file details.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.PreventRender(System.Boolean)">
            <summary>
            Prevents the FileManager render. This method will internally sets value to be returned from ShouldRender method.
            </summary>
            <param name="preventRender">Default value is true. Toggles the ShouldRender method value.</param>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetToolbarItemIndex(System.String)">
            <summary>
            Returns the index position of the specified toolbar item in the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <param name="item">The name of the toolbar item to get the index of.</param>
            <returns>The index position of the toolbar item. Returns `-1` if the item is not found.</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.OpenFileAsync(System.String)">
            <summary>
            Opens the file or folder corresponding to the specified unique identifier in the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <param name="file">The unique identifier of the file or folder to be opened.</param>
            <returns>A System.Threading.Tasks.Task that represents an asynchronous action</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.RefreshFilesAsync">
            <summary>
            Refreshes the folder and files of the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <returns>A System.Threading.Tasks.Task that represents an asynchronous action</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.RefreshLayoutAsync">
            <summary>
            Refreshes the entire layout of the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <returns>A System.Threading.Tasks.Task that represents an asynchronous action</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.RenameFileAsync(System.String,System.String)">
            <summary>
            Renames the specified file or folder in the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component with the specified new name.
            </summary>
            <param name="renameFile">The file or folder to be renamed.</param>
            <param name="name">The new name for the file or folder.</param>
            <returns>A System.Threading.Tasks.Task that represents an asynchronous action</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.SelectAllAsync">
            <summary>
            Selects all folders and files in the current path of the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <returns>A System.Threading.Tasks.Task that represents an asynchronous action</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.UploadFilesAsync">
            <summary>
            Opens the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component's upload dialog to allow users to upload files .
            </summary>
            <returns>A System.Threading.Tasks.Task that represents an asynchronous action</returns>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.UpdateChildProperties(System.String,System.Object,System.Boolean,System.Boolean)">
            <summary>
            Updates the child property of the <see cref="T:Syncfusion.Blazor.FileManager.SfFileManager`1"/> component.
            </summary>
            <param name="key">Specifies the key parameter.</param>
            <param name="propValue">Specifies the property value.</param>
            <param name="isDynamicPropUpdate"> Parameter to check whether this property update dynamically.</param>
            <param name="isVisibleChanged">Parameter to check whether visibility state gets changed.</param>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.Paste(`0,System.String[],System.Boolean)">
            <summary>
            Performs paste operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetDataPermission(System.String,System.Collections.Generic.List{`0})">
            <summary>
            Returns the permission for actions to be performed for a file data.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.ActionDenied(System.String,System.String)">
            <summary>
            Returns the access denied message for file operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.CopyDenied">
            <summary>
            Checks for permission to perform copy operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.PerformOperation(System.String,System.Boolean)">
            <summary>
            Performs operation on files.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.PerformDownload">
            <summary>
            Performs the download operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetItemId(System.String)">
            <summary>
            Return the id of each toolbar item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetToolbarItemPrefixIcon(System.String)">
            <summary>
            Return the icon css for toolbar item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetPopupId(System.String)">
            <summary>
            Return the id of each popup item.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetMenuID(System.String)">
            <summary>
            Return the id of each menu item.
            </summary>.
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.GetViewPopupAttributes(Syncfusion.Blazor.FileManager.ViewType)">
            <summary>
            Return attributes value of the root element.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.ToolbarChangeView(Syncfusion.Blazor.FileManager.ViewType)">
            <summary>
            Change view item click hander.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.DropDownButtonOpen(Syncfusion.Blazor.SplitButtons.BeforeOpenCloseMenuEventArgs)">
            <summary>
            Toolbar change DropDownButton OnOpen handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.SortItemSelected(Syncfusion.Blazor.SplitButtons.MenuEventArgs)">
            <summary>
            Sort item cick handler.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.SortByClick(System.String,Syncfusion.Blazor.FileManager.SortOrder)">
            <summary>
            Performs sorting operation.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.FileManager.SfFileManager`1.OnToolBarItemClick(Syncfusion.Blazor.Navigations.ClickEventArgs)">
            <summary>
            Event hanlder for toolbar item click.
            </summary>
        </member>
    </members>
</doc>
