<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.Blazor.DataForm</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.Blazor.DataForm.DataFormDateOptionsAttribute">
            <summary> 
            Represents date-related options for the DataForm component. 
            </summary> 
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.DataFormDateOptionsAttribute.MinimumDate">
            <summary> 
            Gets or sets the minimum date that can be selected in the date editor. 
            </summary> 
            <value> 
            The minimum date that can be selected in the date editor. 
            </value> 
            <remarks> 
            Usage: 
            <code> 
            [DataFormDateOptions(MinimumDate = "22/01/2024", Format = "dd/MM/yyyy")]
            public DateTime? DateTimeValue { get; set; }
            </code> 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.DataFormDateOptionsAttribute.MaximumDate">
            <summary> 
            Gets or sets the maximum date that can be selected in the date editor. 
            </summary> 
            <value> 
            The maximum date that can be selected in the date editor. 
            </value> 
            <remarks> 
            Usage: 
            <code> 
            DataFormDateOptions(MaximumDate = "22/02/2024", Format = "dd/MM/yyyy")]
            public DateTime? DateTimeValue { get; set; }
            </code> 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.DataFormDateOptionsAttribute.Format">
            <summary> 
            Gets or sets the format of the <see cref="P:Syncfusion.Blazor.DataForm.DataFormDateOptionsAttribute.MinimumDate"/> and <see cref="P:Syncfusion.Blazor.DataForm.DataFormDateOptionsAttribute.MaximumDate"/> specified. 
            </summary> 
            <value> 
            The format of the <see cref="P:Syncfusion.Blazor.DataForm.DataFormDateOptionsAttribute.MinimumDate"/> and <see cref="P:Syncfusion.Blazor.DataForm.DataFormDateOptionsAttribute.MaximumDate"/>. 
            </value> 
            <remarks> 
            Usage: 
            <code> 
            [DataFormDateOptions(MaximumDate = "22/02/2024", MinimumDate = "22/01/2024", Format = "dd/MM/yyyy")]
            public DateTime? DateTimeValue { get; set; }
            </code> 
            </remarks> 
        </member>
        <member name="M:Syncfusion.Blazor.DataForm.DataFormDateOptionsAttribute.IsValid(System.Object)">
            <inheritdoc/>
        </member>
        <member name="T:Syncfusion.Blazor.DataForm.DataFormDisplayOptionsAttribute">
            <summary> 
            Represents display options for the DataForm component. 
            </summary> 
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.DataFormDisplayOptionsAttribute.ColumnSpan">
            <summary> 
            Gets or sets the column span for the respective field editor. 
            </summary> 
            <value> 
            The column span for the respective field editor. 
            </value> 
            <remarks> 
            Usage: 
            <code> 
            [DataFormDisplayOptions(ColumnSpan = 1)] 
            public DateTime DateTimeValue { get; set; } 
            </code> 
            Column span is useful when using auto-generation of fields under a column-classified container element. 
            </remarks> 
            <remarks> 
            When both the <see cref="P:Syncfusion.Blazor.DataForm.DataFormDisplayOptionsAttribute.ColumnSpan"/> property of the <see cref="T:Syncfusion.Blazor.DataForm.DataFormDisplayOptionsAttribute"/> and the  
            <see cref="P:Syncfusion.Blazor.DataForm.FormItem.ColumnSpan"/> property of the <see cref="T:Syncfusion.Blazor.DataForm.SfDataForm"/> component are set, 
            the <see cref="P:Syncfusion.Blazor.DataForm.DataFormDisplayOptionsAttribute.ColumnSpan"/> attribute takes precedence. 
            </remarks> 
        </member>
        <member name="M:Syncfusion.Blazor.DataForm.FormAutoGenerateItems.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormGroup.ChildContent">
            <exclude/>
            <summary>
            Gets or sets the child content of FormGroup component.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormGroup.CssClass">
            <summary> 
            Gets or sets one or more CSS classes that can be used to customize the appearance of a <see cref="T:Syncfusion.Blazor.DataForm.SfDataForm" /> component field group. 
            </summary> 
            <value> 
            Accept the <see cref="T:System.String"/> value. 
            </value> 
            <remarks>  
            One or more CSS classes to customize the appearance of the form field group, such as by changing its colors, fonts, sizes, or other visual aspects. 
            The default value is <c>String.Empty</c>.  
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormGroup.ColumnCount">
            <summary> 
            Gets or sets the count of columns in form group grid layout. 
            </summary> 
            <value> 
            An integer representing the count of columns in a form group layout. 
            </value> 
            <remarks> 
            The <see cref="P:Syncfusion.Blazor.DataForm.FormGroup.ColumnCount"/> property specifies the number of columns in a form layout. 
            It is typically used in UI design to control the layout structure. 
            A higher value will result in more columns and a more complex layout. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormGroup.ColumnSpacing">
            <summary> 
            Gets or sets the spacing between columns in a form group grid layout. 
            </summary> 
            <value> 
            A string value that specifies the spacing between columns in a form group grid layout of the form. 
            </value> 
            <remarks> 
            The spacing between columns, expressed in a CSS-compatible unit (e.g., pixels, em, rem). 
            Use this property to control the horizontal spacing between columns in the form layout. 
            Adjusting this property can impact the overall visual appearance of the form. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormGroup.ID">
            <summary> 
            Gets or sets the ID of the <see cref="T:Syncfusion.Blazor.DataForm.FormGroup" /> component group field. 
            </summary> 
            <value> 
            A string value that specifies the ID of the form field. 
            </value> 
            <remarks> 
            The ID property is typically used to uniquely identify an object within a application. It should be unique and immutable once set. 
            When creating or modifying an object, ensure that the ID is unique and meaningful for efficient object management and retrieval. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormGroup.LabelText">
            <summary> 
            Gets or sets the label text for a <see cref="T:Syncfusion.Blazor.DataForm.FormGroup" /> component field group. 
            </summary> 
            <value> 
            A string representing the label text associated with the form group heading. 
            </value> 
            <remarks> 
            The <see cref="P:Syncfusion.Blazor.DataForm.FormGroup.LabelText"/> property allows you to specify the text that serves as a label for a form group. Label text provides a descriptive title or caption for the field group, helping users understand the purpose of the group. It is important for accessibility and providing a clear user experience. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormGroup.ColumnSpan">
            <summary> 
            Gets or sets the number of columns spanned by the cell. 
            </summary> 
            <value> 
            An integer representing the number of columns spanned by the cell. 
            </value> 
            <remarks> 
            The <see cref="P:Syncfusion.Blazor.DataForm.FormGroup.ColumnSpan"/> property determines how many columns in a layout an element should occupy. Setting this property to a value greater than 1 will cause the element to span multiple columns, allowing for more flexible layout options.
            Use this property to control the horizontal span of a table cell within a table. 
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.DataForm.FormGroup.UpdateItem(Syncfusion.Blazor.DataForm.FormItem,Syncfusion.Blazor.DataForm.FormAutoGenerateItems,System.Boolean,System.String)">
            <exclude/>
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.Blazor.DataForm.FormGroup.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormItem.ChildContent">
            <exclude/>
            <summary>
            Specifies the components to render inside the FormItem.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormItem.CssClass">
            <summary> 
            Gets or sets one or more CSS classes that can be used to customize the appearance of a <see cref="T:Syncfusion.Blazor.DataForm.SfDataForm"/> component field. 
            </summary> 
            <value> 
            Accept the <see cref="T:System.String"/> value. 
            </value> 
            <remarks>  
            One or more CSS classes to customize the appearance of the form field, such as by changing its colors, fonts, sizes, or other visual aspects. 
            The default value is <c>String.Empty</c>.  
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormItem.ColumnSpan">
            <summary> 
            Gets or sets the number of columns spanned by the cell. 
            </summary> 
            <value> 
            An integer representing the number of columns spanned by the cell. 
            </value> 
            <remarks> 
            The <see cref="P:Syncfusion.Blazor.DataForm.FormItem.ColumnSpan"/> property determines how many columns in a layout an element should occupy. Setting this property to a value greater than 1 will cause the element to span multiple columns, allowing for more flexible layout options.
            Use this property to control the horizontal span of a table cell within a table. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormItem.EditorType">
            <summary> 
            Gets or sets the editor used for the given field. If not provided, a default editor will be used based on the field data type. 
            </summary> 
            <value> 
            <see cref="T:Syncfusion.Blazor.DataForm.FormEditorType"/> 
            </value> 
            <remarks> 
            The <see cref="T:Syncfusion.Blazor.DataForm.FormEditorType"/> enumeration defines different types of editors 
            that can be used for form fields, such as TextBox, DatePicker, DropdownList, etc. 
            By setting this property, you can customize the input method for each form field. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormItem.Field">
            <summary> 
            Renders an editor for the specified field in the model. 
            </summary> 
            <value> 
            The name of the field in the model that the editor will render for as a string (case-sensitive). 
            </value> 
            <remarks> 
            The specifies the name of the field in the model for which the editor is being rendered. 
            You can set it as a plain string (e.g., Field="SomeField") or use the <c>@nameof</c> expression for flat models (e.g., Field=@nameof(MyModelClass.SomeField)). 
            If a custom editor template is provided using the <see cref="P:Syncfusion.Blazor.DataForm.FormItem.Template"/> parameter, the <see cref="P:Syncfusion.Blazor.DataForm.FormItem.Field"/> parameter is not required. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormItem.IsEnabled">
            <summary> 
            Gets or sets a value that specifies whether a <see cref="T:Syncfusion.Blazor.DataForm.SfDataForm"/> component field is enabled or disabled. 
            </summary> 
            <value> 
            <c>false</c>, the form field will be disabled, and the user will not be able to interact with it. The default value is <c>true</c>.  
            </value> 
            <remarks> 
            When the field is enabled, users can interact with it and trigger its associated action. 
            When the field is disabled, it appears visually different and cannot be interacted with. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormItem.Placeholder">
            <summary> 
            Gets or sets the placeholder text for a <see cref="T:Syncfusion.Blazor.DataForm.SfDataForm"/> component field. 
            </summary> 
            <value> 
            A string value that specifies the placeholder text. 
            </value> 
            <remarks> 
            The <see cref="P:Syncfusion.Blazor.DataForm.FormItem.Placeholder"/> property allows you to specify text that appears inside a <see cref="T:Syncfusion.Blazor.DataForm.SfDataForm"/> component field when it's empty. This text serves as a helpful hint to users, providing guidance on what kind of input is expected in the field. It is particularly useful for improving the user experience and accessibility of the form. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormItem.ID">
            <summary> 
            Gets or sets the ID of the <see cref="T:Syncfusion.Blazor.DataForm.SfDataForm"/> component field. 
            </summary> 
            <value> 
            A string value that specifies the ID of the form field. 
            </value> 
            <remarks> 
            The ID property is typically used to uniquely identify an object within an application. It should be unique and immutable once set. 
            When creating or modifying an object, ensure that the ID is unique and meaningful for efficient object management and retrieval. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormItem.LabelText">
            <summary> 
            Gets or sets the label text for a <see cref="T:Syncfusion.Blazor.DataForm.SfDataForm"/> component field. 
            </summary> 
            <value> 
            A string representing the label text associated with the form field. 
            </value> 
            <remarks> 
            The <see cref="P:Syncfusion.Blazor.DataForm.FormItem.LabelText"/> property allows you to specify the text that serves as a label for a form field. Label text provides a descriptive title or caption for the field, helping users understand the purpose of the input or element. It is important for accessibility and providing a clear user experience. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormItem.Template">
            <summary> 
            Gets or sets the template for the form items to provide the custom components. 
            </summary> 
            <value> 
            The template content. The default value is null. 
            </value> 
            <remarks> 
            The <see cref="P:Syncfusion.Blazor.DataForm.FormItem.Template"/> property allows you to define a custom template for rendering a specific <see cref="T:Syncfusion.Blazor.DataForm.SfDataForm"/> field. This template can include HTML markup, components, or other content to tailor the appearance to your specific requirements. It offers flexibility in designing <see cref="T:Syncfusion.Blazor.DataForm.SfDataForm"/> field elements that go beyond standard rendering. 
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.DataForm.FormItem.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.Blazor.DataForm.FormItem.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:Syncfusion.Blazor.DataForm.FormItems">
            <summary> 
            Gets or sets the template for the form items. 
            </summary> 
            <value> 
            The template content. The default value is null. 
            </value> 
            <remarks>  
            Use this property to customize the appearance and behavior of form items.  
            You can include HTML elements or components. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormItems.ChildContent">
            <exclude/>
            <summary>
            Gets or sets the child content for the SfDataFormItem (Child) from the SfDataForm(Parent) .
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataForm.FormItems.UpdateItem(Syncfusion.Blazor.DataForm.FormItem,Syncfusion.Blazor.DataForm.FormAutoGenerateItems,System.Boolean,System.String)">
            <exclude/>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormListItems.FormItem">
            <exclude/>
            <summary>
            Gets or sets the <see cref="P:Syncfusion.Blazor.DataForm.FormListItems.FormItem"/> instance.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormListItems.FormAutoItem">
            <exclude/>
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Blazor.DataForm.FormAutoGenerateItems"/> instance.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormListItems.Field">
            <exclude/>
            <summary>
            Gets or sets the field name of the <see cref="P:Syncfusion.Blazor.DataForm.FormListItems.FormItem"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormListItems.Index">
            <exclude/>
            <summary>
            Gets or sets the index of each <see cref="P:Syncfusion.Blazor.DataForm.FormListItems.FormItem"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormListItems.FormGroupItems">
            <exclude/>
            <summary>
             Gets or sets the <see cref="P:Syncfusion.Blazor.DataForm.FormListItems.FormGroupItems"/> rendered inside <see cref="T:Syncfusion.Blazor.DataForm.FormItems"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormGroupItems.ID">
            <exclude/>
            <summary>
            Gets or sets the id of <see cref="T:Syncfusion.Blazor.DataForm.FormGroup"/> wrapper.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormGroupItems.FormItem">
            <exclude/>
            <summary>
            Gets or sets the <see cref="P:Syncfusion.Blazor.DataForm.FormGroupItems.FormItem"/> rendered inside <see cref="T:Syncfusion.Blazor.DataForm.FormGroup"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormGroupItems.FormAutoItem">
            <exclude/>
            <summary>
            Gets or sets the <see cref="T:Syncfusion.Blazor.DataForm.FormAutoGenerateItems"/> rendered inside <see cref="T:Syncfusion.Blazor.DataForm.FormGroup"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormGroupItems.LabelText">
            <exclude/>
            <summary>
            Gets or sets the label text of <see cref="T:Syncfusion.Blazor.DataForm.FormGroup"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormGroupItems.Index">
            <exclude/>
            <summary>
            Gets or sets the index of items rendered inside <see cref="T:Syncfusion.Blazor.DataForm.FormGroup"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormGroupItems.PropertyName">
            <exclude/>
            <summary>
            Gets or sets the property name.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.GroupItems.FormGroup">
            <exclude/>
            <summary>
            Gets or sets the id of <see cref="P:Syncfusion.Blazor.DataForm.GroupItems.FormGroup"/> wrapper.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.GroupItems.GroupIndex">
            <exclude/>
            <summary>
            Gets or sets the index of each <see cref="P:Syncfusion.Blazor.DataForm.GroupItems.FormGroup"/> rendered inside <see cref="T:Syncfusion.Blazor.DataForm.FormItems"/>.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.GroupItems.FormGroupItem">
            <exclude/>
            <summary>
            Gets or sets the list of <see cref="P:Syncfusion.Blazor.DataForm.GroupItems.FormGroup"/> items rendered inside <see cref="T:Syncfusion.Blazor.DataForm.FormItems"/>.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataForm.Interfaces.IForm.UpdateFormItems(System.Object)">
            <summary>
            Method which updates the child content properties.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataForm.Interfaces.IFormItems.UpdateItem(Syncfusion.Blazor.DataForm.FormItem,Syncfusion.Blazor.DataForm.FormAutoGenerateItems,System.Boolean,System.String)">
            <summary>
            Method which updates the child content properties.
            </summary>
        </member>
        <member name="T:Syncfusion.Blazor.DataForm.FormButtonsAlignment">
            <summary>
            Specifies the alignment of the form buttons.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DataForm.FormButtonsAlignment.Right">
            <summary> 
            The form buttons are aligned to the right. 
            </summary> 
            <value> 
            <see cref="T:Syncfusion.Blazor.DataForm.FormButtonsAlignment"/> 
            </value>
        </member>
        <member name="F:Syncfusion.Blazor.DataForm.FormButtonsAlignment.Left">
            <summary> 
            The form buttons are aligned to the left. 
            </summary> 
            <value> 
            <see cref="T:Syncfusion.Blazor.DataForm.FormButtonsAlignment"/> 
            </value>
        </member>
        <member name="F:Syncfusion.Blazor.DataForm.FormButtonsAlignment.Center">
            <summary> 
            The form buttons are aligned to the center. 
            </summary> 
            <value> 
            <see cref="T:Syncfusion.Blazor.DataForm.FormButtonsAlignment"/> 
            </value>
        </member>
        <member name="F:Syncfusion.Blazor.DataForm.FormButtonsAlignment.Stretch">
            <summary> 
            The form buttons are stretch full width. 
            </summary> 
            <value> 
            <see cref="T:Syncfusion.Blazor.DataForm.FormButtonsAlignment"/> 
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.DataForm.FormLabelPosition">
            <summary>
            Specifies the position of the labels.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DataForm.FormLabelPosition.Top">
            <summary> 
            The labels are positioned above the form fields. 
            </summary>
            <value> 
            <see cref="T:Syncfusion.Blazor.DataForm.FormLabelPosition"/> 
            </value>
        </member>
        <member name="F:Syncfusion.Blazor.DataForm.FormLabelPosition.Left">
            <summary> 
            The labels are positioned to the left of the form fields. 
            </summary> 
            <value> 
            <see cref="T:Syncfusion.Blazor.DataForm.FormLabelPosition"/> 
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.DataForm.FormValidationDisplay">
            <summary>
            Specifies the validation message display position of the form field.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DataForm.FormValidationDisplay.Inline">
            <summary> 
            The validation message is displayed below the form field. 
            </summary> 
            <value> 
            <see cref="T:Syncfusion.Blazor.DataForm.FormValidationDisplay"/> 
            </value>
        </member>
        <member name="F:Syncfusion.Blazor.DataForm.FormValidationDisplay.Tooltip">
            <summary> 
            The validation message is displayed in a tooltip. 
            </summary> 
            <value> 
            <see cref="T:Syncfusion.Blazor.DataForm.FormValidationDisplay"/> 
            </value>
        </member>
        <member name="F:Syncfusion.Blazor.DataForm.FormValidationDisplay.None">
            <summary> 
            No validation messages are rendered. Useful when user want to have only ValidationSummary to show error messages. 
            </summary> 
            <value> 
            <see cref="T:Syncfusion.Blazor.DataForm.FormValidationDisplay"/> 
            </value>
        </member>
        <member name="T:Syncfusion.Blazor.DataForm.FormEditorType">
            <summary>
            Determines which component to be rendered for editing the field in form component.
            </summary>
        </member>
        <member name="F:Syncfusion.Blazor.DataForm.FormEditorType.TextBox">
            <summary> 
            Set the form editor field to a TextBox component. 
            </summary> 
            <value> 
            <see cref="T:Syncfusion.Blazor.DataForm.FormEditorType"/> 
            </value> 
        </member>
        <member name="F:Syncfusion.Blazor.DataForm.FormEditorType.TextArea">
            <summary> 
            Set the form editor field to a TextArea component. 
            </summary> 
            <value> 
            <see cref="T:Syncfusion.Blazor.DataForm.FormEditorType"/> 
            </value> 
        </member>
        <member name="F:Syncfusion.Blazor.DataForm.FormEditorType.DropDownList">
            <summary> 
            Set the form editor field to a DropdownList component. 
            </summary> 
            <value> 
            <see cref="T:Syncfusion.Blazor.DataForm.FormEditorType"/> 
            </value> 
        </member>
        <member name="F:Syncfusion.Blazor.DataForm.FormEditorType.ComboBox">
            <summary> 
            Set the form editor field to a ComboBox component. 
            </summary> 
            <value> 
            <see cref="T:Syncfusion.Blazor.DataForm.FormEditorType"/> 
            </value> 
        </member>
        <member name="F:Syncfusion.Blazor.DataForm.FormEditorType.AutoComplete">
            <summary> 
            Set the form editor field to an AutoComplete component. 
            </summary> 
            <value> 
            <see cref="T:Syncfusion.Blazor.DataForm.FormEditorType"/> 
            </value> 
        </member>
        <member name="F:Syncfusion.Blazor.DataForm.FormEditorType.Checkbox">
            <summary> 
            Set the form editor field to a Checkbox component. 
            </summary> 
            <value> 
            <see cref="T:Syncfusion.Blazor.DataForm.FormEditorType"/> 
            </value> 
        </member>
        <member name="F:Syncfusion.Blazor.DataForm.FormEditorType.DatePicker">
            <summary> 
            Set the form editor field to a DatePicker component. 
            </summary> 
            <value> 
            <see cref="T:Syncfusion.Blazor.DataForm.FormEditorType"/> 
            </value> 
        </member>
        <member name="F:Syncfusion.Blazor.DataForm.FormEditorType.DateTimePicker">
            <summary> 
            Set the form editor field to a DateTimePicker component. 
            </summary> 
            <value> 
            <see cref="T:Syncfusion.Blazor.DataForm.FormEditorType"/> 
            </value> 
        </member>
        <member name="F:Syncfusion.Blazor.DataForm.FormEditorType.TimePicker">
            <summary> 
            Set the form editor field to a TimePicker component. 
            </summary> 
            <value> 
            <see cref="T:Syncfusion.Blazor.DataForm.FormEditorType"/> 
            </value> 
        </member>
        <member name="F:Syncfusion.Blazor.DataForm.FormEditorType.Switch">
            <summary> 
            Set the form editor field to a Switch component. 
            </summary> 
            <value> 
            <see cref="T:Syncfusion.Blazor.DataForm.FormEditorType"/> 
            </value> 
        </member>
        <member name="F:Syncfusion.Blazor.DataForm.FormEditorType.Password">
            <summary> 
            Set the form editor field to a TextBox with password component. 
            </summary> 
            <value> 
            <see cref="T:Syncfusion.Blazor.DataForm.FormEditorType"/> 
            </value> 
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.SfDataForm.AutoComplete">
             <summary> 
             Gets or sets the value of the autocomplete attribute of the <see cref="T:Syncfusion.Blazor.DataForm.SfDataForm"/> component.  
             </summary> 
             <value> 
             Accept the <see cref="T:System.String"/> value. 
             </value> 
             <remarks> 
             <c>on</c>, the browser is allowed to automatically complete the input field based on the user's previous inputs. 
             <c>off</c>, the browser is not allowed to automatically complete the input field. 
             The autocomplete feature in the browser can be helpful in providing suggestions to users while they fill out the components. 
             However, in certain scenarios, it might be necessary to disable this feature for security or privacy reasons. 
             </remarks> 
             <examples> 
             <code> 
             <![CDATA[
             <SfDataForm ID="MyForm"
             Model="@exampleModel"
                 Width="50%"
                AutoComplete="on" >
             <FormValidator>
                 <DataAnnotationsValidator></DataAnnotationsValidator>
             </FormValidator>
             <FormItems>
                <FormAutoGeneratedItems></FormAutoGeneratedItems>
             </FormItems>
            
             <FormButtons>
                 <SfButton>Submit</SfButton>
             </FormButtons>
             
             </SfDataForm>
            
             @code {
                
             public class ExampleModel
                 {
            
                     [Required(ErrorMessage = "Enter FirstName here")]
                     public string FirstName { get; set; }
            
                     [Required(ErrorMessage = "Enter LastName here")]
                     public string LastName { get; set; }
            
                     [Required(ErrorMessage = "Enter Email here")]
                     public string Email { get; set; }
                 }
            
                 private ExampleModel exampleModel = new ExampleModel();
             }
             ]]>
             </code> 
             </examples> 
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.SfDataForm.ButtonsAlignment">
             <summary> 
             Gets or sets the alignment of the <see cref="T:Syncfusion.Blazor.DataForm.SfDataForm"/> component buttons. 
             </summary> 
             <value> 
             One of the <see cref="T:Syncfusion.Blazor.DataForm.FormButtonsAlignment"/> enumeration value, indicating the horizontal alignment of form buttons. 
             </value> 
             <remarks> 
             The default value is <see cref="F:Syncfusion.Blazor.DataForm.FormButtonsAlignment.Left"/>. 
             The alignment options for form buttons are: 
             - <c>Left</c>: Aligns the form buttons to the left side of the form. 
             - <c>Center</c>: Centers the form buttons within the form. 
             - <c>Right</c>: Aligns the form buttons to the right side of the form. 
             - <c>Stretch</c>: The form buttons stretch to the full width of the form. 
             Use this property to customize the horizontal alignment of the form buttons within an instance of the <see cref="T:Syncfusion.Blazor.DataForm.SfDataForm">SfDataForm</see> component. 
             </remarks> 
             <examples> 
             <code> 
             <![CDATA[
             <SfDataForm ID="MyForm"
                         Model="@exampleModel"
                         Width="50%"
                         ButtonsAlignment="FormButtonsAlignment.Center">
                 <FormValidator>
                     <DataAnnotationsValidator></DataAnnotationsValidator>
                 </FormValidator>
                 <FormItems>
                     <FormAutoGeneratedItems></FormAutoGeneratedItems>
                 </FormItems>
            
                 <FormButtons>
                     <SfButton>Submit</SfButton>
                 </FormButtons>
            
             </SfDataForm>
            
             @code {
            
                 public class ExampleModel
                 {
            
                     [Required(ErrorMessage = "Enter FirstName here")]
                     public string FirstName { get; set; }
            
                     [Required(ErrorMessage = "Enter LastName here")]
                     public string LastName { get; set; }
            
                     [Required(ErrorMessage = "Enter Email here")]
                     public string Email { get; set; }
                 }
            
                 private ExampleModel exampleModel = new ExampleModel();
             }
             ]]>
             </code> 
             </examples>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.SfDataForm.ColumnCount">
             <summary> 
             Gets or sets the number of columns in a form layout. 
             </summary> 
             <value> 
             An integer that represents the number of columns in a form layout. 
             </value> 
             <remarks> 
             The <see cref="P:Syncfusion.Blazor.DataForm.SfDataForm.ColumnCount"/> property specifies the number of columns in a form layout. 
             It is typically used in UI design to control the layout structure. 
             A higher value will result in more columns and a more complex layout. 
             </remarks> 
             <examples> 
             <code> 
             <![CDATA[
             <SfDataForm ID="MyForm"
                         Model="@exampleModel"
                         Width="50%"
                         Columns="2"
                         ButtonsAlignment="FormButtonsAlignment.Center">
                 <FormValidator>
                     <DataAnnotationsValidator></DataAnnotationsValidator>
                 </FormValidator>
                 <FormItems>
                     <FormItem Field="@nameof(exampleModel.FirstName)" ColumnSpan="1" LabelText="First Name"></FormItem>
                     <FormItem Field="@nameof(exampleModel.LastName)" ColumnSpan="1" LabelText="First Name"></FormItem>
                     <FormItem Field="@nameof(exampleModel.Email)" ColumnSpan="2" LabelText="Email"></FormItem>
                 </FormItems>
            
                 <FormButtons>
                     <SfButton>Submit</SfButton>
                 </FormButtons>
            
             </SfDataForm>
            
             @code {
            
                 public class ExampleModel
                 {
            
                     [Required(ErrorMessage = "Enter FirstName here")]
                     public string FirstName { get; set; }
            
                     [Required(ErrorMessage = "Enter LastName here")]
                     public string LastName { get; set; }
            
                     [Required(ErrorMessage = "Enter Email here")]
                     public string Email { get; set; }
                 }
            
                 private ExampleModel exampleModel = new ExampleModel();
             }
             ]]>
             </code> 
             </examples>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.SfDataForm.EnableFloatingLabel">
            <summary> 
            Gets or sets a value indicating whether the Floating Label feature is enabled for all form fields in the <see cref="T:Syncfusion.Blazor.DataForm.SfDataForm"/> component. 
            </summary> 
            <value> 
              <c>true</c> if the Floating Label feature is enabled; otherwise, <c>false</c>. The default value is <c>false</c>. 
            </value> 
            <remarks> 
            <para> 
            When set to <c>true</c>, the Floating Label feature is enabled, causing labels to move to a floating position above the field 
            when it is focused or contains user input, and it is enabled globally. 
            </para> 
            <para> 
            When set to <c>false</c>, the existing behavior of label in the form fields is maintained, and the Floating Label feature is disabled globally. 
            </para> 
            <para> 
            Note: Floating label functionality does not work when the label position is set to left. 
            To enable the Floating Label feature, ensure that the label position is set to top. 
            </para> 
            <para> 
            The value from the <see cref="P:Syncfusion.Blazor.DataForm.FormItem.LabelText"/> property or <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name"/> property 
            (Display name attribute) will be used as the Floating label text. 
            When both properties are specified, the <see cref="P:System.ComponentModel.DataAnnotations.DisplayAttribute.Name"/> property takes precedence. 
            </para> 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.SfDataForm.ColumnSpacing">
             <summary> 
             Gets or sets the spacing between columns in a form grid layout. 
             </summary> 
             <value> 
             Accept the <see cref="T:System.String"/> value. 
             </value> 
             <remarks> 
             The spacing between columns, expressed in a CSS-compatible unit (e.g., pixels, em, rem). 
             Use this property to control the horizontal spacing between columns in the form layout. 
             Adjusting this property can impact the overall visual appearance of the form. 
             </remarks> 
             <examples> 
             <code> 
             <![CDATA[
             <SfDataForm ID="MyForm"
                         Model="@exampleModel"
                         Width="50%"
                         Columns="2"
                         ColumnSpacing="20px"
                         ButtonsAlignment="FormButtonsAlignment.Center">
                 <FormValidator>
                     <DataAnnotationsValidator></DataAnnotationsValidator>
                 </FormValidator>
                 <FormItems>
                     <FormItem Field="@nameof(exampleModel.FirstName)" ColumnSpan="1" LabelText="First Name"></FormItem>
                     <FormItem Field="@nameof(exampleModel.LastName)" ColumnSpan="1" LabelText="First Name"></FormItem>
                     <FormItem Field="@nameof(exampleModel.Email)" ColumnSpan="2" LabelText="Email"></FormItem>
                 </FormItems>
            
                 <FormButtons>
                     <SfButton>Submit</SfButton>
                 </FormButtons>
            
             </SfDataForm>
            
             @code {
            
                 public class ExampleModel
                 {
            
                     [Required(ErrorMessage = "Enter FirstName here")]
                     public string FirstName { get; set; }
            
                     [Required(ErrorMessage = "Enter LastName here")]
                     public string LastName { get; set; }
            
                     [Required(ErrorMessage = "Enter Email here")]
                     public string Email { get; set; }
                 }
            
                 private ExampleModel exampleModel = new ExampleModel();
             }
             ]]>
             </code> 
             </examples>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.SfDataForm.EditContext">
            <summary> 
            Gets or sets the EditContext of the form. The user should specify either EditContext, or <see cref="P:Syncfusion.Blazor.DataForm.SfDataForm.Model"/>.  
            </summary> 
            <value> 
            <see cref="T:Microsoft.AspNetCore.Components.Forms.EditContext"/> 
            </value> 
            <remarks> 
            If using this <see cref="P:Syncfusion.Blazor.DataForm.SfDataForm.EditContext"/>, do not also supply <see cref="P:Syncfusion.Blazor.DataForm.SfDataForm.Model"/>, since the model value will be taken from the Model property. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.SfDataForm.FormButtons">
            <summary> 
            Gets or sets the template for customizing form buttons and adding a specified number of buttons to the <see cref="T:Syncfusion.Blazor.DataForm.SfDataForm"/> component. 
            </summary> 
            <value> 
            The property allows you to provide custom HTML or components for form buttons. 
            </value> 
            <remarks> 
            Use this property to customize the appearance and behavior of form buttons and to add a specified number of buttons to the form, such as submit or reset buttons. 
            This is particularly useful for scenarios where you need to create dynamic forms with multiple buttons for various actions. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.SfDataForm.FormTemplate">
            <summary>
            Gets or sets the template for the form items to provide the custom components.
            </summary>
            <value>
             The template content. The default value is null.
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.SfDataForm.FormValidator">
            <summary> 
            Gets or sets the validation type for the form items. 
            </summary> 
            <value> 
            The template content that allows you to provide DataAnnotations or FluentValidation. 
            </value>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.SfDataForm.ID">
            <summary> 
            Gets or sets the ID of the form. 
            </summary> 
            <value> 
            Accept the ID <see cref="T:System.String"/> value for the <see cref="T:Syncfusion.Blazor.DataForm.SfDataForm"/> component. 
            </value> 
            <remarks> 
            The "ID" property is typically used to uniquely identify an object within a application. It should be unique and immutable once set. 
            When creating or modifying an object, ensure that the "ID" is unique and meaningful for efficient object management and retrieval. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.SfDataForm.Width">
            <summary> 
            Gets or sets the width of a <see cref="T:Syncfusion.Blazor.DataForm.SfDataForm"/> component. 
            </summary> 
            <value> 
            A string value representing the width of the form element. 
            You can use CSS-compatible units (e.g., pixels, em, rem) to specify the width. 
            </value> 
            <remarks> 
            Use this property to control the width of the <see cref="T:Syncfusion.Blazor.DataForm.SfDataForm"/> component. 
            The width value determines how much horizontal space the element occupies within the layout. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.SfDataForm.Model">
            <summary> 
            Gets or sets the data model that represents the form's data. 
            </summary> 
            <value>The data model object containing the form's data. </value> 
            <remarks> 
            This property represents the data model that corresponds to the form's fields. 
            The form's fields will be bound to properties of this model object. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.SfDataForm.LabelPosition">
            <summary> 
            Gets or sets the position of labels in the form field items. 
            </summary> 
            <value> 
            One of the <see cref="T:Syncfusion.Blazor.DataForm.FormLabelPosition"/> enumeration value. 
            </value> 
            <remarks> 
            The position options are: 
            <c>Top</c> : The labels are positioned above the form fields. 
            <c>Left</c> : The labels are positioned to the left of the form fields. 
            Use this property to control where labels are positioned in the form layout. 
            You can choose from various positions such as "Top," or "Left". 
            The <see cref="P:Syncfusion.Blazor.DataForm.SfDataForm.LabelPosition"/> property determines the layout of labels within a form. It allows you to control whether labels should be placed to the left, or to the top of form fields. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.SfDataForm.ValidationDisplayMode">
            <summary> 
            Gets or sets the way the validation errors should be displayed in the <see cref="T:Syncfusion.Blazor.DataForm.SfDataForm"/> component. 
            </summary> 
            <value> 
            One of the <see cref="T:Syncfusion.Blazor.DataForm.FormValidationDisplay"/> enumeration value. 
            </value> 
            <remarks> 
            The display options are: 
            <c>Inline</c> : The validation message is displayed below the form field. 
            <c>ToolTip</c> : The validation message is displayed in a tooltip. 
            <c>None</c> : No validation messages are rendered. Useful when user want to have only ValidationSummary to show error messages. 
            The <see cref="P:Syncfusion.Blazor.DataForm.SfDataForm.ValidationDisplayMode"/> property allows you to control how validation error messages are presented within a <see cref="T:Syncfusion.Blazor.DataForm.SfDataForm"/> component. You can choose to display them inline or as tooltips based on the selected option from the enumeration. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.SfDataForm.OnSubmit">
            <summary> 
            Gets or sets the event callback that will be invoked when the <see cref="T:Syncfusion.Blazor.DataForm.SfDataForm"/> component is submitted. 
            </summary> 
            <value> 
            An EventCallback that represents the event handler for form submission. 
            </value> 
            <remarks> 
            The <see cref="P:Syncfusion.Blazor.DataForm.SfDataForm.OnSubmit"/> event callback is invoked when a form is submitted. You can use this event handler to perform custom actions when the form is submitted, such as validation, data processing, or navigation. The callback may receive additional data depending on the specific form and context. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.SfDataForm.OnValidSubmit">
            <summary>
            Fires when the form is submitted with valid EditContext.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.SfDataForm.OnInvalidSubmit">
            <summary>
            Fires when the form is submitted with invalid EditContext.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.SfDataForm.OnUpdate">
            <summary> 
            Gets or sets the event callback that will be invoked upon editing a field in the <see cref="T:Syncfusion.Blazor.DataForm.SfDataForm"/> component. The changed field name and newly updated model are available through the <see cref="T:Syncfusion.Blazor.DataForm.FormUpdateEventArgs"/> event context. 
            </summary> 
            <value> 
            An <see cref="T:Microsoft.AspNetCore.Components.EventCallback`1"/> that represents the event handler for form updates. 
            </value> 
            <remarks> 
            The <see cref="P:Syncfusion.Blazor.DataForm.SfDataForm.OnUpdate"/> event callback is triggered when the form is updated. It allows you to respond to changes in the form data, perform validation, and execute custom logic in response to updates. The callback may receive additional data in the form of a <see cref="T:Syncfusion.Blazor.DataForm.FormUpdateEventArgs"/> object, providing details about the update. 
            </remarks>
        </member>
        <member name="M:Syncfusion.Blazor.DataForm.SfDataForm.IsValid">
            <summary> 
            Checks whether the form data is valid based on defined validation rules. 
            </summary> 
            <returns><c>true</c> if the form data is valid; otherwise, <c>false</c>.</returns> 
            <remarks> 
            This method evaluates the form data against defined validation rules to determine its validity. 
            You should call this method to check if the data entered by the user is valid before further processing. 
            </remarks> 
        </member>
        <member name="M:Syncfusion.Blazor.DataForm.SfDataForm.Refresh">
            <summary> 
            Refreshes the form, updating its contents and resetting the validation state. 
            </summary> 
            <remarks> 
            This method updates the form to reflect any changes in the data model or configuration. 
            It also resets the validation state, clearing any existing validation error messages. 
            Call this method to ensure the form is up-to-date and ready for user interaction. 
            </remarks> 
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.SfDataForm.ChildContent">
            <exclude/>
            <summary>
            Gets or sets the child content for the SfDataFormItem (Child) from the SfDataForm(Parent) .
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataForm.SfDataForm.UpdateFormItems(System.Object)">
            <exclude/>
        </member>
        <member name="M:Syncfusion.Blazor.DataForm.SfDataForm.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.Blazor.DataForm.SfDataForm.OnParametersSetAsync">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.Blazor.DataForm.SfDataForm.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:Syncfusion.Blazor.DataForm.FormUpdateEventArgs">
            <summary>
            Defines the argument for the OnUpdate event.
            </summary>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormUpdateEventArgs.FieldName">
            <summary> 
            Gets the updated field name of the <see cref="T:Syncfusion.Blazor.DataForm.SfDataForm"/> component. 
            </summary> 
            <value>  
            Return field name as a string. 
            </value> 
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormUpdateEventArgs.Model">
            <summary> 
            Gets the updated field model value of the <see cref="T:Syncfusion.Blazor.DataForm.SfDataForm"/> component. 
            </summary> 
            <value> 
            Return model value as an object type. 
            </value> 
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormButtons.ChildContent">
            <summary>
            Specifies the button content to be rendered inside Form component.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataForm.FormButtons.OnInitializedAsync">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.Blazor.DataForm.FormButtons.Dispose(System.Boolean)">
            <summary>
            Dispose the unmanaged resources.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="T:Syncfusion.Blazor.DataForm.FormTemplate">
            <summary> 
            Gets or sets the template for the form items to provide the custom components. 
            </summary> 
            <value> 
            The template content that allows you to provide custom HTML or components for form items within the form layout. 
            </value> 
            <remarks>  
            Use this property to customize the appearance and behavior of form items.  
            You can include HTML elements or components. 
            </remarks>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormTemplate.ChildContent">
            <summary>
            Specifies the components to render inside the SfDataForm.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataForm.FormTemplate.OnInitializedAsync">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.Blazor.DataForm.FormTemplate.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataForm.FormTemplate.Dispose(System.Boolean)">
            <summary>
            Dispose the unmanaged resources.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.FormValidator.ChildContent">
            <summary>
            Specifies the components to render inside the SfDataForm.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataForm.FormValidator.OnInitializedAsync">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.Blazor.DataForm.FormValidator.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataForm.FormValidator.Dispose(System.Boolean)">
            <summary>
            Dispose the unmanaged resources.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
        <member name="P:Syncfusion.Blazor.DataForm.Template.ChildContent">
            <summary>
            Specifies the components to render inside the FormItem.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataForm.Template.OnInitializedAsync">
            <inheritdoc/>
        </member>
        <member name="M:Syncfusion.Blazor.DataForm.Template.Dispose">
            <summary>
            Dispose the unmanaged resources.
            </summary>
        </member>
        <member name="M:Syncfusion.Blazor.DataForm.Template.Dispose(System.Boolean)">
            <summary>
            Dispose the unmanaged resources.
            </summary>
            <param name="disposing">Boolean value to dispose the object.</param>
        </member>
    </members>
</doc>
