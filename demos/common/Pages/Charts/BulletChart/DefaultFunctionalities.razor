@page "/bullet-chart/default-functionalities"
@using Syncfusion.Blazor.Charts
@using Syncfusion.Blazor
@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent;


@*End:Hidden*@

<SampleDescription>
    <p>This sample illustrates a default bullet chart to compare the feature (value) bar with comparative (target) bar.</p>
</SampleDescription>
<ActionDescription>
 <p>The Blazor Bullet Chart is used to visually compare measures, like the commonly used bar chart. The bullet chart displays one or more measures and compares them with a target value.
  <code>Tooltip</code> is enabled in this example. To see the tooltip in action, hover a feature bar or comparative bar on the bullet chart.</p>
    <p>More information about the bullet chart can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/bullet-chart/getting-started' aria-label="Navigate to the documentation for getting started with bullet chart component">documentation section</a>.</p>
</ActionDescription>

<div class="control-section" style="text-align: center">
    <SfBulletChart DataSource="@BulletChartData0" Theme="@theme" ValueField="value" TargetField="target" Minimum="0" Maximum="300" Interval="50"
                   Title="Revenue" Subtitle="U.S. $" LabelFormat="${value}k" TitlePosition=@TitlePosition Width=@Width>
        <BulletChartTooltip TValue="ChartData" Enable="true"></BulletChartTooltip>
        <BulletChartMargin Left="@(SampleService.IsDevice ? 10 : 62)" Right="15"></BulletChartMargin>
        <BulletChartRangeCollection>
            <BulletChartRange End="150"> </BulletChartRange>
            <BulletChartRange End="250"></BulletChartRange>
            <BulletChartRange End="300"></BulletChartRange>
        </BulletChartRangeCollection>
    </SfBulletChart>

    <SfBulletChart DataSource="@BulletChartData1" ValueField="value" Theme="@theme" TargetField="target" Minimum="0" Maximum="30" Interval="5"
                   Title="Profit" Subtitle="%" LabelFormat="{value}%" TitlePosition=@TitlePosition Width=@Width>
        <BulletChartTooltip TValue="ChartData" Enable="true"></BulletChartTooltip>
        <BulletChartMargin Left="@(SampleService.IsDevice ? 10 : 80)" Right="15"></BulletChartMargin>
        <BulletChartRangeCollection>
            <BulletChartRange End="20"> </BulletChartRange>
            <BulletChartRange End="25"></BulletChartRange>
            <BulletChartRange End="30"></BulletChartRange>
        </BulletChartRangeCollection>
    </SfBulletChart>

    <SfBulletChart DataSource="@BulletChartData2" ValueField="value" Theme="@theme" TargetField="target" Minimum="0" Maximum="600" Interval="100"
                   Title="Avg Order Size" Subtitle="U.S. $" LabelFormat="${value}" TitlePosition=@TitlePosition  Width=@Width>
        <BulletChartTooltip TValue="ChartData" Enable="true"></BulletChartTooltip>
        <BulletChartMargin Left="@(SampleService.IsDevice ? 10 : 21.5)" Right="15"></BulletChartMargin>
        <BulletChartRangeCollection>
            <BulletChartRange End="350"> </BulletChartRange>
            <BulletChartRange End="500"></BulletChartRange>
            <BulletChartRange End="600"></BulletChartRange>
        </BulletChartRangeCollection>
    </SfBulletChart>

    <SfBulletChart DataSource="@BulletChartData3" EnableGroupSeparator="false" Theme="@theme" ValueField="value" TargetField="target" Width=@Width
                   Minimum="0" Maximum="2500" Interval="500" Title="New Customers" Subtitle="Count" TitlePosition=@TitlePosition  >
        <BulletChartTooltip TValue="ChartData" Enable="true"></BulletChartTooltip>
        <BulletChartMargin Left="@(SampleService.IsDevice ? 10 : 18)" Right="15"></BulletChartMargin>
        <BulletChartRangeCollection>
            <BulletChartRange End="1700"> </BulletChartRange>
            <BulletChartRange End="2000"></BulletChartRange>
            <BulletChartRange End="2500"></BulletChartRange>
        </BulletChartRangeCollection>
    </SfBulletChart>

    <SfBulletChart DataSource="@BulletChartData4" ValueField="value" Theme="@theme" TargetField="target" Minimum="0" Maximum="5" Interval="1"
                   Title="Cust Satisfication" Subtitle="Top rating of 5" TitlePosition=@TitlePosition Width=@Width>
        <BulletChartTooltip TValue="ChartData" Enable="true"></BulletChartTooltip>
        <BulletChartMargin Left="@(SampleService.IsDevice ? 10 : 7)" Right="15"></BulletChartMargin>
        <BulletChartRangeCollection>
            <BulletChartRange End="3.7"> </BulletChartRange>
            <BulletChartRange End="4.2"></BulletChartRange>
            <BulletChartRange End="5"></BulletChartRange>
        </BulletChartRangeCollection>
    </SfBulletChart>
</div>

@code{
    public string Width { get; set; } = "80%";
    public TextPosition TitlePosition { get; set; } = TextPosition.Left;

    
    public class ChartData
    {
        public double value { get; set; }
        public double target { get; set; }
    }
    public List<ChartData> BulletChartData0 = new List<ChartData>
{
        new ChartData { value = 270, target = 250 }
    };
    public List<ChartData> BulletChartData1 = new List<ChartData>
{
        new ChartData { value = 23, target = 27 }
    };
    public List<ChartData> BulletChartData2 = new List<ChartData>
{
        new ChartData { value = 350, target = 550 }
    };
    public List<ChartData> BulletChartData3 = new List<ChartData>
{
        new ChartData { value = 1600, target = 2100 }
    };
    public List<ChartData> BulletChartData4 = new List<ChartData>
{
        new ChartData { value = 4.9, target = 4 }
    };

    private string CurrentUri;
    private Theme theme { get; set; }
    protected override void OnInitialized()
    {
        if (SampleService.IsDevice)
        {
            Width = "100%";
            TitlePosition = TextPosition.Top;
        }
        
        CurrentUri = NavigationManager.Uri;
        if (CurrentUri.IndexOf("material3") > -1)
        {
            if (CurrentUri.IndexOf("dark") > -1)
            {
                theme = Theme.Material3Dark;
            }
            else
            {
                theme = Theme.Material3;
            }
        }
        else if (CurrentUri.IndexOf("material") > -1)
        {
            if (CurrentUri.IndexOf("dark") > -1)
            {
                theme = Theme.MaterialDark;
            }
            else
            {
                theme = Theme.Material;
            }
        }
        else if (CurrentUri.IndexOf("fabric") > -1)
        {
            if (CurrentUri.IndexOf("dark") > -1)
            {
                theme = Theme.FabricDark;
            }
            else
            {
                theme = Theme.Fabric;
            }
        }
        else if (CurrentUri.IndexOf("bootstrap5") > -1)
        {
            if (CurrentUri.IndexOf("dark") > -1)
            {
                theme = Theme.Bootstrap5Dark;
            }
            else
            {
                theme = Theme.Bootstrap5;
            }
        }
        else if (CurrentUri.IndexOf("bootstrap4") > -1)
        {
            theme = Theme.Bootstrap4;
        }
        else if (CurrentUri.IndexOf("bootstrap") > -1)
        {
            if (CurrentUri.IndexOf("dark") > -1)
            {
                theme = Theme.BootstrapDark;
            }
            else
            {
                theme = Theme.Bootstrap;
            }
        }
        else if (CurrentUri.IndexOf("tailwind") > -1)
        {
            if (CurrentUri.IndexOf("dark") > -1)
            {
                theme = Theme.TailwindDark;
            }
            else
            {
                theme = Theme.Tailwind;
            }
        }
        else if (CurrentUri.IndexOf("fluent2") > -1)
        {
            // if (CurrentUri.IndexOf("highcontrast") > -1)
            // {
            //     theme = Theme.Fluent2HighContrast;
            // }
            if(CurrentUri.IndexOf("dark") > -1)
            {
                theme = Theme.Fluent2Dark;
            }
            else
            {
                theme = Theme.Fluent2;
            }
        }
        else if (CurrentUri.IndexOf("highcontrast") > -1)
        {
            theme = Theme.HighContrast;
        }
        else if (CurrentUri.IndexOf("fluent") > -1)
        {
            if (CurrentUri.IndexOf("dark") > -1)
            {
                theme = Theme.FluentDark;
            }
            else
            {
                theme = Theme.Fluent;
            }
        }
        else
        {
            theme = Theme.Bootstrap4;
        }
    }
}
