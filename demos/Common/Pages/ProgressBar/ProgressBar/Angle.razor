@page "/progress-bar/angle"
@using Syncfusion.Blazor.ProgressBar
@using Syncfusion.Blazor
@using ThemeHelper
@inject NavigationManager Navigation
@*Hidden:Lines*@
@inherits SampleBaseComponent
@inject NavigationManager NavigationManager


@*End:Hidden*@

<SampleDescription>
    <p>This sample illustrates a circular progress with different start and end angle.</p>
</SampleDescription>
<ActionDescription>
    <p>In this example, you can see how to configure the start and sweep angles of circular progress using <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.ProgressBar.SfProgressBar.html#Syncfusion_Blazor_ProgressBar_SfProgressBar_StartAngle' aria-label="StartAngle">StartAngle</a> and <a target='_blank' href='https://help.syncfusion.com/cr/blazor/Syncfusion.Blazor.ProgressBar.SfProgressBar.html#Syncfusion_Blazor_ProgressBar_SfProgressBar_EndAngle' aria-label="EndAngle">EndAngle</a> properties to give a unique style to the circular progress bar. <a target='_blank' href='https://blazor.syncfusion.com/documentation/progress-bar/progress-annotation' aria-label="Annotation">Annotation</a> is enabled in the sample to represent the progress value.</p>
    <p>More information about the customization in progress bar can be found in this <a target='_blank' href='https://blazor.syncfusion.com/documentation/progress-bar/customization' aria-label="documentation section" >documentation section</a>.</p>
</ActionDescription>

<div class="control-section progress-bar-parent">
    <div class="row" style="margin-top: 4%">
        <div class="col-lg-3 col-md-3 col-3" align="center">
            <SfProgressBar @ref="ProObj1" Type="ProgressType.Circular" StartAngle="240" EndAngle="120" Width="160px" Height="160px"
                           Value="100" TrackThickness="5" ProgressThickness="5" CornerRadius="CornerType.Round" Minimum="0" Maximum="100"
                           Theme="@CurrentTheme">
                <ProgressBarAnimation Enable="true" Duration="2000" Delay="0" />
                <ProgressBarAnnotations>
                    <ProgressBarAnnotation>
                        <ContentTemplate>
                            @Annotation
                        </ContentTemplate>
                    </ProgressBarAnnotation>
                </ProgressBarAnnotations>
            </SfProgressBar>
        </div>
        <div class="col-lg-3 col-md-3 col-3" align="center">
            <SfProgressBar @ref="ProObj2" Type="ProgressType.Circular" StartAngle="180" EndAngle="0" Width="160px" Height="160px"
                           Value="100" TrackThickness="5" ProgressThickness="5" CornerRadius="CornerType.Round" Minimum="0" Maximum="100"
                           Theme="@CurrentTheme">
                <ProgressBarAnimation Enable="true" Duration="2000" Delay="0" />
                <ProgressBarAnnotations>
                    <ProgressBarAnnotation>
                        <ContentTemplate>
                            @Annotation
                        </ContentTemplate>
                    </ProgressBarAnnotation>
                </ProgressBarAnnotations>
            </SfProgressBar>
        </div>
        <div class="col-lg-3 col-md-3 col-3" align="center">
            <SfProgressBar @ref="ProObj3" Type="ProgressType.Circular" StartAngle="0" EndAngle="180" Width="160px" Height="160px"
                           Value="100" TrackThickness="5" ProgressThickness="5" CornerRadius="CornerType.Round" Minimum="0" Maximum="100"
                           Theme="@CurrentTheme">
                <ProgressBarAnimation Enable="true" Duration="2000" Delay="0" />
                <ProgressBarAnnotations>
                    <ProgressBarAnnotation>
                        <ContentTemplate>
                            @Annotation
                        </ContentTemplate>
                    </ProgressBarAnnotation>
                </ProgressBarAnnotations>
            </SfProgressBar>
        </div>
        <div class="col-lg-3 col-md-3 col-3" align="center">
            <SfProgressBar @ref="ProObj4" Type="ProgressType.Circular" StartAngle="270" EndAngle="90" Width="160px" Height="160px"
                           Value="100" TrackThickness="5" ProgressThickness="5" CornerRadius="CornerType.Round" Minimum="0" Maximum="100"
                           Theme="@CurrentTheme">
                <ProgressBarAnimation Enable="true" Duration="2000" Delay="0" />
                <ProgressBarAnnotations>
                    <ProgressBarAnnotation>
                        <ContentTemplate>
                            @Annotation
                        </ContentTemplate>
                    </ProgressBarAnnotation>
                </ProgressBarAnnotations>
            </SfProgressBar>
        </div>
    </div>
    <div class="row" align="center" style="font-family: @FontFamily">
        <button id="reLoad" class="e-control e-btn e-lib e-outline e-primary" @onclick="ProgressRefresh">Reload</button>
    </div>
</div>

@code {
    public SfProgressBar ProObj1, ProObj2, ProObj3, ProObj4;
    public RenderFragment Annotation { get; set; }
    public Theme CurrentTheme { get; set; }
    private string currentUri;
    public string FontFamily { get; set; }
    

    public async Task ProgressRefresh()
    {
        await ProObj1.RefreshAsync();
        await ProObj2.RefreshAsync();
        await ProObj3.RefreshAsync();
        await ProObj4.RefreshAsync();
    }

    protected override void OnInitialized()
    {
        
        currentUri = Navigation.Uri;
        FontFamily = ThemeHelper.GetFontFamily(NavigationManager.Uri);
        if (currentUri.Contains("material3-dark"))
        {
            CurrentTheme = Theme.Material3Dark;
            Annotation = @<div style='font-size:24px;font-weight:bold;color:#D0BCFF;font-family: @FontFamily'><span>100%</span></div>;
        }
        else if (currentUri.Contains("material3"))
        {
            CurrentTheme = Theme.Material3;
            Annotation =@<div style='font-size:24px;font-weight:bold;color:#6750A4;font-family: @FontFamily'><span> 100 %</span></div>;
        }
        else if (currentUri.Contains("fabric-dark"))
        {
            CurrentTheme = Theme.FabricDark;
            Annotation = @<div style='font-size:24px;font-weight:bold;color:#9A9A9A;font-family: @FontFamily'><span>100%</span></div>;
        }
        else if (currentUri.Contains("fabric"))
        {
            CurrentTheme = Theme.Fabric;
            Annotation = @<div style='font-size:24px;font-weight:bold;color:#0078D6;font-family: @FontFamily'><span>100%</span></div>;
        }
        else if (currentUri.Contains("bootstrap-dark"))
        {
            CurrentTheme = Theme.BootstrapDark;
            Annotation = @<div style='font-size:24px;font-weight:bold;color:#9A9A9A;font-family: @FontFamily'><span>100%</span></div>;
        }
        else if (currentUri.Contains("bootstrap5-dark"))
        {
            CurrentTheme = Theme.Bootstrap5Dark;
            Annotation = @<div style='font-size:24px;font-weight:bold;color:#0D6EFD;font-family: @FontFamily'><span>100%</span></div>;
        }
        else if (currentUri.Contains("bootstrap5"))
        {
            CurrentTheme = Theme.Bootstrap5;
            Annotation = @<div style='font-size:24px;font-weight:bold;color:#0D6EFD;font-family: @FontFamily'><span>100%</span></div>;
        }
        // else if (currentUri.Contains("fluent2-highcontrast"))
        // {
        //     CurrentTheme = Theme.Fluent2HighContrast;
        //     Annotation = @<div style='font-size:24px;font-weight:bold;color:#1AEBFF;font-family: @FontFamily'><span>100%</span></div>;
        // }
        else if (currentUri.Contains("fluent2-dark"))
        {
            CurrentTheme = Theme.Fluent2Dark;
            Annotation = @<div style='font-size:24px;font-weight:bold;color:#115EA3;font-family: @FontFamily'><span>100%</span></div>;
        }
        else if (currentUri.Contains("fluent2"))
        {
            CurrentTheme = Theme.Fluent2;
            Annotation = @<div style='font-size:24px;font-weight:bold;color:#0F6CBD;font-family: @FontFamily'><span>100%</span></div>;
        }
        else if (currentUri.Contains("fluent-dark"))
        {
            CurrentTheme = Theme.FluentDark;
            Annotation = @<div style='font-size:24px;font-weight:bold;color:#0D6EFD;font-family: @FontFamily'><span>100%</span></div>;
        }
        else if (currentUri.Contains("fluent"))
        {
            CurrentTheme = Theme.Fluent;
            Annotation = @<div style='font-size:24px;font-weight:bold;color:#0D6EFD;font-family: @FontFamily'><span>100%</span></div>;
        }
        else if (currentUri.Contains("bootstrap4"))
        {
            CurrentTheme = Theme.Bootstrap4;
            Annotation = @<div style='font-size:24px;font-weight:bold;color:#007bff;font-family: @FontFamily'><span>100%</span></div>;
        }
        else if (currentUri.Contains("bootstrap"))
        {
            CurrentTheme = Theme.Bootstrap;
            Annotation = @<div style='font-size:24px;font-weight:bold;color:#317ab9;font-family: @FontFamily'><span>100%</span></div>;
        }
        else if (currentUri.Contains("highcontrast"))
        {
            CurrentTheme = Theme.HighContrast;
            Annotation = @<div style='font-size:24px;font-weight:bold;color:#FFD939;font-family: @FontFamily'><span>100%</span></div>;
        }
        else if (currentUri.Contains("tailwind-dark"))
        {
            CurrentTheme = Theme.TailwindDark;
            Annotation = @<div style='font-size:24px;font-weight:bold;color:#22D3EE;font-family: @FontFamily'><span>100%</span></div>;
        }
        else if (currentUri.Contains("tailwind"))
        {
            CurrentTheme = Theme.Tailwind;
            Annotation = @<div style='font-size:24px;font-weight:bold;color:#4F46E5;font-family: @FontFamily'><span>100%</span></div>;
        }
        else if (currentUri.Contains("material-dark"))
        {
            CurrentTheme = Theme.MaterialDark;
            Annotation = @<div style='font-size:24px;font-weight:bold;color:#9A9A9A;font-family: @FontFamily'><span>100%</span></div>;
        }
        else if (currentUri.Contains("material"))
        {
            CurrentTheme = Theme.Material;
            Annotation =@<div style='font-size:24px;font-weight:bold;color:#e91e63;font-family: @FontFamily'><span> 100 %</span></div>;
        }
    }
}

<style>
    #control-container {
        padding: 0px !important;
    }

    #reLoad {
        border-radius: 4px;
        text-transform: capitalize;
        margin-top: 3%;
    }
</style>