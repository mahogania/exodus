@page "/chart-3d/back-to-back-column"

@using Syncfusion.Blazor
@using Syncfusion.Blazor.Chart3D
@using ThemeHelper

@inject NavigationManager NavigationManager
@*Hidden:Lines*@
@inherits SampleBaseComponent


@*End:Hidden*@
<SampleDescription>
    <p>
        This sample displays a 3D column chart with four series, each column positioned behind the preceding one. Click on the legend to toggle the visibility of the series for better comparison.
    </p>
</SampleDescription>
<ActionDescription>
    <p>
        In this example, you can see how to render and configure a 3D column chart with each column positioned behind the preceding one. The <code>Depth</code> property is used to add perspective and volume to the 3D chart, while the <code>EnableSideBySidePlacement</code> property positions the columns behind each other for a layered effect.
    </p>
</ActionDescription>

<div class="control-section" align="center">
    <SfChart3D EnableSideBySidePlacement="false" RotationAngle="@Rotation" Depth="500" Width="@Width" Height="@Height" Title="Fruit Consumption by Individuals" Theme="@Theme">
        <Chart3DPrimaryXAxis ValueType="Syncfusion.Blazor.Chart3D.ValueType.Category" Interval="1" LabelRotationAngle="-45" LabelPlacement="LabelPlacement.BetweenTicks"></Chart3DPrimaryXAxis>
        <Chart3DPrimaryYAxis Interval="@Interval"></Chart3DPrimaryYAxis>
        <Chart3DSeriesCollection>
            <Chart3DSeries DataSource="@Column3DPoints" XName="X" YName="Y" Name="Grapes" ColumnWidth="0.2"></Chart3DSeries>
            <Chart3DSeries DataSource="@Column3DPoints1" XName="X" YName="Y" Name="Orange" ColumnWidth="0.2"></Chart3DSeries>
            <Chart3DSeries DataSource="@Column3DPoints2" XName="X" YName="Y" Name="Apple" ColumnWidth="0.2"></Chart3DSeries>
            <Chart3DSeries DataSource="@Column3DPoints3" XName="X" YName="Y" Name="Total" ColumnWidth="0.2"></Chart3DSeries>
        </Chart3DSeriesCollection>
        <Chart3DTooltipSettings Enable="true"></Chart3DTooltipSettings>
        <Chart3DLegendSettings EnableHighlight="true"></Chart3DLegendSettings>
    </SfChart3D>
</div>

@code {
    private Theme Theme { get; set; }
    public string Width { get; set; }
    public string Height { get; set; } = "400";
    public double Interval { get; set; }
    public double Rotation { get; set; }
    public List<ColumnChart3DData> Column3DPoints { get; set; } = new List<ColumnChart3DData>
    {
         new ColumnChart3DData { X= "Jamesh", Y= 1 },
         new ColumnChart3DData { X= "Michael", Y= 2 },
         new ColumnChart3DData { X= "John", Y= 2 },
         new ColumnChart3DData { X= "Jack", Y= 1 },
         new ColumnChart3DData { X= "Lucas", Y= 1 }
    };

    public List<ColumnChart3DData> Column3DPoints1 { get; set; } = new List<ColumnChart3DData>
    {
         new ColumnChart3DData { X= "Jamesh", Y= 4 },
         new ColumnChart3DData { X= "Michael", Y= 3 },
         new ColumnChart3DData { X= "John", Y= 4 },
         new ColumnChart3DData { X= "Jack", Y= 2 },
         new ColumnChart3DData { X= "Lucas", Y= 3 }
    };

    public List<ColumnChart3DData> Column3DPoints2 { get; set; } = new List<ColumnChart3DData>
    {
         new ColumnChart3DData { X= "Jamesh", Y= 5 },
         new ColumnChart3DData { X= "Michael", Y= 4 },
         new ColumnChart3DData { X= "John", Y= 5 },
         new ColumnChart3DData { X= "Jack", Y= 5 },
         new ColumnChart3DData { X= "Lucas", Y= 6 }
    };

    public List<ColumnChart3DData> Column3DPoints3 { get; set; } = new List<ColumnChart3DData>
    {
         new ColumnChart3DData { X= "Jamesh", Y= 10 },
         new ColumnChart3DData { X= "Michael", Y= 9 },
         new ColumnChart3DData { X= "John", Y= 11 },
         new ColumnChart3DData { X= "Jack", Y= 8 },
         new ColumnChart3DData { X= "Lucas", Y= 10 }
    };

    protected override void OnInitialized()
    {
        Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
        Width = SampleService.IsDevice ? "100%" : "75%";
        Interval = SampleService.IsDevice ? 4 : 2;
        Rotation = SampleService.IsDevice ? 5 : 25;
    }

    public class ColumnChart3DData
    {
        public string X { get; set; }
        public double Y { get; set; }
    }
}